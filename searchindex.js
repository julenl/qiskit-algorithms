Search.setIndex({"docnames": ["apidocs/qiskit_algorithms", "apidocs/qiskit_algorithms.AlgorithmError", "apidocs/qiskit_algorithms.gradients", "apidocs/qiskit_algorithms.optimizers", "apidocs/qiskit_algorithms.state_fidelities", "apidocs/qiskit_algorithms.time_evolvers.variational", "apidocs/qiskit_algorithms.utils.algorithm_globals", "getting_started", "index", "release_notes", "stubs/qiskit_algorithms.AdaptVQE", "stubs/qiskit_algorithms.AdaptVQEResult", "stubs/qiskit_algorithms.AlgorithmJob", "stubs/qiskit_algorithms.AmplificationProblem", "stubs/qiskit_algorithms.AmplitudeAmplifier", "stubs/qiskit_algorithms.AmplitudeEstimation", "stubs/qiskit_algorithms.AmplitudeEstimationResult", "stubs/qiskit_algorithms.AmplitudeEstimator", "stubs/qiskit_algorithms.AmplitudeEstimatorResult", "stubs/qiskit_algorithms.Eigensolver", "stubs/qiskit_algorithms.EigensolverResult", "stubs/qiskit_algorithms.EstimationProblem", "stubs/qiskit_algorithms.FasterAmplitudeEstimation", "stubs/qiskit_algorithms.FasterAmplitudeEstimationResult", "stubs/qiskit_algorithms.Grover", "stubs/qiskit_algorithms.GroverResult", "stubs/qiskit_algorithms.HamiltonianPhaseEstimation", "stubs/qiskit_algorithms.HamiltonianPhaseEstimationResult", "stubs/qiskit_algorithms.ImaginaryTimeEvolver", "stubs/qiskit_algorithms.IterativeAmplitudeEstimation", "stubs/qiskit_algorithms.IterativeAmplitudeEstimationResult", "stubs/qiskit_algorithms.IterativePhaseEstimation", "stubs/qiskit_algorithms.MaximumLikelihoodAmplitudeEstimation", "stubs/qiskit_algorithms.MaximumLikelihoodAmplitudeEstimationResult", "stubs/qiskit_algorithms.MinimumEigensolver", "stubs/qiskit_algorithms.MinimumEigensolverResult", "stubs/qiskit_algorithms.NumPyEigensolver", "stubs/qiskit_algorithms.NumPyEigensolverResult", "stubs/qiskit_algorithms.NumPyMinimumEigensolver", "stubs/qiskit_algorithms.NumPyMinimumEigensolverResult", "stubs/qiskit_algorithms.PVQD", "stubs/qiskit_algorithms.PVQDResult", "stubs/qiskit_algorithms.PhaseEstimation", "stubs/qiskit_algorithms.PhaseEstimationResult", "stubs/qiskit_algorithms.PhaseEstimationScale", "stubs/qiskit_algorithms.QAOA", "stubs/qiskit_algorithms.RealTimeEvolver", "stubs/qiskit_algorithms.SamplingMinimumEigensolver", "stubs/qiskit_algorithms.SamplingMinimumEigensolverResult", "stubs/qiskit_algorithms.SamplingVQE", "stubs/qiskit_algorithms.SamplingVQEResult", "stubs/qiskit_algorithms.SciPyImaginaryEvolver", "stubs/qiskit_algorithms.SciPyRealEvolver", "stubs/qiskit_algorithms.TimeEvolutionProblem", "stubs/qiskit_algorithms.TimeEvolutionResult", "stubs/qiskit_algorithms.TrotterQRTE", "stubs/qiskit_algorithms.VQD", "stubs/qiskit_algorithms.VQDResult", "stubs/qiskit_algorithms.VQE", "stubs/qiskit_algorithms.VQEResult", "stubs/qiskit_algorithms.VarQITE", "stubs/qiskit_algorithms.VarQRTE", "stubs/qiskit_algorithms.VarQTEResult", "stubs/qiskit_algorithms.gradients.BaseEstimatorGradient", "stubs/qiskit_algorithms.gradients.BaseQGT", "stubs/qiskit_algorithms.gradients.BaseSamplerGradient", "stubs/qiskit_algorithms.gradients.EstimatorGradientResult", "stubs/qiskit_algorithms.gradients.FiniteDiffEstimatorGradient", "stubs/qiskit_algorithms.gradients.FiniteDiffSamplerGradient", "stubs/qiskit_algorithms.gradients.LinCombEstimatorGradient", "stubs/qiskit_algorithms.gradients.LinCombQGT", "stubs/qiskit_algorithms.gradients.LinCombSamplerGradient", "stubs/qiskit_algorithms.gradients.ParamShiftEstimatorGradient", "stubs/qiskit_algorithms.gradients.ParamShiftSamplerGradient", "stubs/qiskit_algorithms.gradients.QFI", "stubs/qiskit_algorithms.gradients.QFIResult", "stubs/qiskit_algorithms.gradients.QGTResult", "stubs/qiskit_algorithms.gradients.ReverseEstimatorGradient", "stubs/qiskit_algorithms.gradients.ReverseQGT", "stubs/qiskit_algorithms.gradients.SPSAEstimatorGradient", "stubs/qiskit_algorithms.gradients.SPSASamplerGradient", "stubs/qiskit_algorithms.gradients.SamplerGradientResult", "stubs/qiskit_algorithms.optimizers.ADAM", "stubs/qiskit_algorithms.optimizers.AQGD", "stubs/qiskit_algorithms.optimizers.AskData", "stubs/qiskit_algorithms.optimizers.BOBYQA", "stubs/qiskit_algorithms.optimizers.CG", "stubs/qiskit_algorithms.optimizers.COBYLA", "stubs/qiskit_algorithms.optimizers.CRS", "stubs/qiskit_algorithms.optimizers.DIRECT_L", "stubs/qiskit_algorithms.optimizers.DIRECT_L_RAND", "stubs/qiskit_algorithms.optimizers.ESCH", "stubs/qiskit_algorithms.optimizers.GSLS", "stubs/qiskit_algorithms.optimizers.GradientDescent", "stubs/qiskit_algorithms.optimizers.GradientDescentState", "stubs/qiskit_algorithms.optimizers.IMFIL", "stubs/qiskit_algorithms.optimizers.ISRES", "stubs/qiskit_algorithms.optimizers.L_BFGS_B", "stubs/qiskit_algorithms.optimizers.Minimizer", "stubs/qiskit_algorithms.optimizers.NELDER_MEAD", "stubs/qiskit_algorithms.optimizers.NFT", "stubs/qiskit_algorithms.optimizers.Optimizer", "stubs/qiskit_algorithms.optimizers.OptimizerResult", "stubs/qiskit_algorithms.optimizers.OptimizerState", "stubs/qiskit_algorithms.optimizers.POWELL", "stubs/qiskit_algorithms.optimizers.P_BFGS", "stubs/qiskit_algorithms.optimizers.QNSPSA", "stubs/qiskit_algorithms.optimizers.SLSQP", "stubs/qiskit_algorithms.optimizers.SNOBFIT", "stubs/qiskit_algorithms.optimizers.SPSA", "stubs/qiskit_algorithms.optimizers.SciPyOptimizer", "stubs/qiskit_algorithms.optimizers.SteppableOptimizer", "stubs/qiskit_algorithms.optimizers.TNC", "stubs/qiskit_algorithms.optimizers.TellData", "stubs/qiskit_algorithms.optimizers.UMDA", "stubs/qiskit_algorithms.optimizers.optimizer_utils", "stubs/qiskit_algorithms.optimizers.optimizer_utils.LearningRate", "stubs/qiskit_algorithms.state_fidelities.BaseStateFidelity", "stubs/qiskit_algorithms.state_fidelities.ComputeUncompute", "stubs/qiskit_algorithms.state_fidelities.StateFidelityResult", "stubs/qiskit_algorithms.time_evolvers.variational.ForwardEulerSolver", "stubs/qiskit_algorithms.time_evolvers.variational.ImaginaryMcLachlanPrinciple", "stubs/qiskit_algorithms.time_evolvers.variational.ImaginaryVariationalPrinciple", "stubs/qiskit_algorithms.time_evolvers.variational.RealMcLachlanPrinciple", "stubs/qiskit_algorithms.time_evolvers.variational.RealVariationalPrinciple", "stubs/qiskit_algorithms.time_evolvers.variational.VariationalPrinciple", "tutorials/01_algorithms_introduction", "tutorials/02_vqe_advanced_options", "tutorials/03_vqe_simulation_with_noise", "tutorials/04_vqd", "tutorials/05_qaoa", "tutorials/06_grover", "tutorials/07_grover_examples", "tutorials/10_pvqd", "tutorials/11_VarQTE", "tutorials/12_gradients_framework", "tutorials/13_trotterQRTE", "tutorials/index"], "filenames": ["apidocs/qiskit_algorithms.rst", "apidocs/qiskit_algorithms.AlgorithmError.rst", "apidocs/qiskit_algorithms.gradients.rst", "apidocs/qiskit_algorithms.optimizers.rst", "apidocs/qiskit_algorithms.state_fidelities.rst", "apidocs/qiskit_algorithms.time_evolvers.variational.rst", "apidocs/qiskit_algorithms.utils.algorithm_globals.rst", "getting_started.rst", "index.rst", "release_notes.rst", "stubs/qiskit_algorithms.AdaptVQE.rst", "stubs/qiskit_algorithms.AdaptVQEResult.rst", "stubs/qiskit_algorithms.AlgorithmJob.rst", "stubs/qiskit_algorithms.AmplificationProblem.rst", "stubs/qiskit_algorithms.AmplitudeAmplifier.rst", "stubs/qiskit_algorithms.AmplitudeEstimation.rst", "stubs/qiskit_algorithms.AmplitudeEstimationResult.rst", "stubs/qiskit_algorithms.AmplitudeEstimator.rst", "stubs/qiskit_algorithms.AmplitudeEstimatorResult.rst", "stubs/qiskit_algorithms.Eigensolver.rst", "stubs/qiskit_algorithms.EigensolverResult.rst", "stubs/qiskit_algorithms.EstimationProblem.rst", "stubs/qiskit_algorithms.FasterAmplitudeEstimation.rst", "stubs/qiskit_algorithms.FasterAmplitudeEstimationResult.rst", "stubs/qiskit_algorithms.Grover.rst", "stubs/qiskit_algorithms.GroverResult.rst", "stubs/qiskit_algorithms.HamiltonianPhaseEstimation.rst", "stubs/qiskit_algorithms.HamiltonianPhaseEstimationResult.rst", "stubs/qiskit_algorithms.ImaginaryTimeEvolver.rst", "stubs/qiskit_algorithms.IterativeAmplitudeEstimation.rst", "stubs/qiskit_algorithms.IterativeAmplitudeEstimationResult.rst", "stubs/qiskit_algorithms.IterativePhaseEstimation.rst", "stubs/qiskit_algorithms.MaximumLikelihoodAmplitudeEstimation.rst", "stubs/qiskit_algorithms.MaximumLikelihoodAmplitudeEstimationResult.rst", "stubs/qiskit_algorithms.MinimumEigensolver.rst", "stubs/qiskit_algorithms.MinimumEigensolverResult.rst", "stubs/qiskit_algorithms.NumPyEigensolver.rst", "stubs/qiskit_algorithms.NumPyEigensolverResult.rst", "stubs/qiskit_algorithms.NumPyMinimumEigensolver.rst", "stubs/qiskit_algorithms.NumPyMinimumEigensolverResult.rst", "stubs/qiskit_algorithms.PVQD.rst", "stubs/qiskit_algorithms.PVQDResult.rst", "stubs/qiskit_algorithms.PhaseEstimation.rst", "stubs/qiskit_algorithms.PhaseEstimationResult.rst", "stubs/qiskit_algorithms.PhaseEstimationScale.rst", "stubs/qiskit_algorithms.QAOA.rst", "stubs/qiskit_algorithms.RealTimeEvolver.rst", "stubs/qiskit_algorithms.SamplingMinimumEigensolver.rst", "stubs/qiskit_algorithms.SamplingMinimumEigensolverResult.rst", "stubs/qiskit_algorithms.SamplingVQE.rst", "stubs/qiskit_algorithms.SamplingVQEResult.rst", "stubs/qiskit_algorithms.SciPyImaginaryEvolver.rst", "stubs/qiskit_algorithms.SciPyRealEvolver.rst", "stubs/qiskit_algorithms.TimeEvolutionProblem.rst", "stubs/qiskit_algorithms.TimeEvolutionResult.rst", "stubs/qiskit_algorithms.TrotterQRTE.rst", "stubs/qiskit_algorithms.VQD.rst", "stubs/qiskit_algorithms.VQDResult.rst", "stubs/qiskit_algorithms.VQE.rst", "stubs/qiskit_algorithms.VQEResult.rst", "stubs/qiskit_algorithms.VarQITE.rst", "stubs/qiskit_algorithms.VarQRTE.rst", "stubs/qiskit_algorithms.VarQTEResult.rst", "stubs/qiskit_algorithms.gradients.BaseEstimatorGradient.rst", "stubs/qiskit_algorithms.gradients.BaseQGT.rst", "stubs/qiskit_algorithms.gradients.BaseSamplerGradient.rst", "stubs/qiskit_algorithms.gradients.EstimatorGradientResult.rst", "stubs/qiskit_algorithms.gradients.FiniteDiffEstimatorGradient.rst", "stubs/qiskit_algorithms.gradients.FiniteDiffSamplerGradient.rst", "stubs/qiskit_algorithms.gradients.LinCombEstimatorGradient.rst", "stubs/qiskit_algorithms.gradients.LinCombQGT.rst", "stubs/qiskit_algorithms.gradients.LinCombSamplerGradient.rst", "stubs/qiskit_algorithms.gradients.ParamShiftEstimatorGradient.rst", "stubs/qiskit_algorithms.gradients.ParamShiftSamplerGradient.rst", "stubs/qiskit_algorithms.gradients.QFI.rst", "stubs/qiskit_algorithms.gradients.QFIResult.rst", "stubs/qiskit_algorithms.gradients.QGTResult.rst", "stubs/qiskit_algorithms.gradients.ReverseEstimatorGradient.rst", "stubs/qiskit_algorithms.gradients.ReverseQGT.rst", "stubs/qiskit_algorithms.gradients.SPSAEstimatorGradient.rst", "stubs/qiskit_algorithms.gradients.SPSASamplerGradient.rst", "stubs/qiskit_algorithms.gradients.SamplerGradientResult.rst", "stubs/qiskit_algorithms.optimizers.ADAM.rst", "stubs/qiskit_algorithms.optimizers.AQGD.rst", "stubs/qiskit_algorithms.optimizers.AskData.rst", "stubs/qiskit_algorithms.optimizers.BOBYQA.rst", "stubs/qiskit_algorithms.optimizers.CG.rst", "stubs/qiskit_algorithms.optimizers.COBYLA.rst", "stubs/qiskit_algorithms.optimizers.CRS.rst", "stubs/qiskit_algorithms.optimizers.DIRECT_L.rst", "stubs/qiskit_algorithms.optimizers.DIRECT_L_RAND.rst", "stubs/qiskit_algorithms.optimizers.ESCH.rst", "stubs/qiskit_algorithms.optimizers.GSLS.rst", "stubs/qiskit_algorithms.optimizers.GradientDescent.rst", "stubs/qiskit_algorithms.optimizers.GradientDescentState.rst", "stubs/qiskit_algorithms.optimizers.IMFIL.rst", "stubs/qiskit_algorithms.optimizers.ISRES.rst", "stubs/qiskit_algorithms.optimizers.L_BFGS_B.rst", "stubs/qiskit_algorithms.optimizers.Minimizer.rst", "stubs/qiskit_algorithms.optimizers.NELDER_MEAD.rst", "stubs/qiskit_algorithms.optimizers.NFT.rst", "stubs/qiskit_algorithms.optimizers.Optimizer.rst", "stubs/qiskit_algorithms.optimizers.OptimizerResult.rst", "stubs/qiskit_algorithms.optimizers.OptimizerState.rst", "stubs/qiskit_algorithms.optimizers.POWELL.rst", "stubs/qiskit_algorithms.optimizers.P_BFGS.rst", "stubs/qiskit_algorithms.optimizers.QNSPSA.rst", "stubs/qiskit_algorithms.optimizers.SLSQP.rst", "stubs/qiskit_algorithms.optimizers.SNOBFIT.rst", "stubs/qiskit_algorithms.optimizers.SPSA.rst", "stubs/qiskit_algorithms.optimizers.SciPyOptimizer.rst", "stubs/qiskit_algorithms.optimizers.SteppableOptimizer.rst", "stubs/qiskit_algorithms.optimizers.TNC.rst", "stubs/qiskit_algorithms.optimizers.TellData.rst", "stubs/qiskit_algorithms.optimizers.UMDA.rst", "stubs/qiskit_algorithms.optimizers.optimizer_utils.rst", "stubs/qiskit_algorithms.optimizers.optimizer_utils.LearningRate.rst", "stubs/qiskit_algorithms.state_fidelities.BaseStateFidelity.rst", "stubs/qiskit_algorithms.state_fidelities.ComputeUncompute.rst", "stubs/qiskit_algorithms.state_fidelities.StateFidelityResult.rst", "stubs/qiskit_algorithms.time_evolvers.variational.ForwardEulerSolver.rst", "stubs/qiskit_algorithms.time_evolvers.variational.ImaginaryMcLachlanPrinciple.rst", "stubs/qiskit_algorithms.time_evolvers.variational.ImaginaryVariationalPrinciple.rst", "stubs/qiskit_algorithms.time_evolvers.variational.RealMcLachlanPrinciple.rst", "stubs/qiskit_algorithms.time_evolvers.variational.RealVariationalPrinciple.rst", "stubs/qiskit_algorithms.time_evolvers.variational.VariationalPrinciple.rst", "tutorials/01_algorithms_introduction.ipynb", "tutorials/02_vqe_advanced_options.ipynb", "tutorials/03_vqe_simulation_with_noise.ipynb", "tutorials/04_vqd.ipynb", "tutorials/05_qaoa.ipynb", "tutorials/06_grover.ipynb", "tutorials/07_grover_examples.ipynb", "tutorials/10_pvqd.ipynb", "tutorials/11_VarQTE.ipynb", "tutorials/12_gradients_framework.ipynb", "tutorials/13_trotterQRTE.ipynb", "tutorials/index.rst"], "titles": ["Qiskit Algorithms (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_algorithms</span></code>)", "AlgorithmError", "Gradients (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_algorithms.gradients</span></code>)", "Optimizers (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_algorithms.optimizers</span></code>)", "State Fidelities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_algorithms.state_fidelities</span></code>)", "Time Evolvers, Variational (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">qiskit_algorithms.time_evolvers.variational</span></code>)", "utils.algorithm_globals", "Getting started", "Qiskit Algorithms documentation", "Release Notes", "AdaptVQE", "AdaptVQEResult", "AlgorithmJob", "AmplificationProblem", "AmplitudeAmplifier", "AmplitudeEstimation", "AmplitudeEstimationResult", "AmplitudeEstimator", "AmplitudeEstimatorResult", "Eigensolver", "EigensolverResult", "EstimationProblem", "FasterAmplitudeEstimation", "FasterAmplitudeEstimationResult", "Grover", "GroverResult", "HamiltonianPhaseEstimation", "HamiltonianPhaseEstimationResult", "ImaginaryTimeEvolver", "IterativeAmplitudeEstimation", "IterativeAmplitudeEstimationResult", "IterativePhaseEstimation", "MaximumLikelihoodAmplitudeEstimation", "MaximumLikelihoodAmplitudeEstimationResult", "MinimumEigensolver", "MinimumEigensolverResult", "NumPyEigensolver", "NumPyEigensolverResult", "NumPyMinimumEigensolver", "NumPyMinimumEigensolverResult", "PVQD", "PVQDResult", "PhaseEstimation", "PhaseEstimationResult", "PhaseEstimationScale", "QAOA", "RealTimeEvolver", "SamplingMinimumEigensolver", "SamplingMinimumEigensolverResult", "SamplingVQE", "SamplingVQEResult", "SciPyImaginaryEvolver", "SciPyRealEvolver", "TimeEvolutionProblem", "TimeEvolutionResult", "TrotterQRTE", "VQD", "VQDResult", "VQE", "VQEResult", "VarQITE", "VarQRTE", "VarQTEResult", "BaseEstimatorGradient", "BaseQGT", "BaseSamplerGradient", "EstimatorGradientResult", "FiniteDiffEstimatorGradient", "FiniteDiffSamplerGradient", "LinCombEstimatorGradient", "LinCombQGT", "LinCombSamplerGradient", "ParamShiftEstimatorGradient", "ParamShiftSamplerGradient", "QFI", "QFIResult", "QGTResult", "ReverseEstimatorGradient", "ReverseQGT", "SPSAEstimatorGradient", "SPSASamplerGradient", "SamplerGradientResult", "ADAM", "AQGD", "AskData", "BOBYQA", "CG", "COBYLA", "CRS", "DIRECT_L", "DIRECT_L_RAND", "ESCH", "GSLS", "GradientDescent", "GradientDescentState", "IMFIL", "ISRES", "L_BFGS_B", "Minimizer", "NELDER_MEAD", "NFT", "Optimizer", "OptimizerResult", "OptimizerState", "POWELL", "P_BFGS", "QNSPSA", "SLSQP", "SNOBFIT", "SPSA", "SciPyOptimizer", "SteppableOptimizer", "TNC", "TellData", "UMDA", "qiskit_algorithms.optimizers.optimizer_utils", "LearningRate", "BaseStateFidelity", "ComputeUncompute", "StateFidelityResult", "ForwardEulerSolver", "ImaginaryMcLachlanPrinciple", "ImaginaryVariationalPrinciple", "RealMcLachlanPrinciple", "RealVariationalPrinciple", "VariationalPrinciple", "An Introduction to Algorithms using Qiskit", "Advanced VQE Options", "VQE with Qiskit Aer Primitives", "Variational Quantum Deflation (VQD) Algorithm", "Quantum Approximate Optimization Algorithm", "Grover\u2019s Algorithm and Amplitude Amplification", "Grover\u2019s algorithm examples", "Projected Variational Quantum Dynamics", "Variational Quantum Time Evolution", "Gradient Framework", "Quantum Real Time Evolution using Trotterization", "Algorithms Tutorials"], "terms": {"0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "3": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137], "1": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "i": [0, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 117, 118, 120, 121, 123, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "librari": [0, 5, 7, 8, 9, 10, 15, 24, 40, 88, 89, 90, 91, 93, 96, 106, 109, 111, 114, 127, 128, 129, 130, 131, 132, 133, 134, 136], "comput": [0, 4, 10, 11, 15, 19, 24, 26, 27, 29, 31, 32, 34, 35, 36, 38, 39, 40, 42, 43, 44, 45, 47, 48, 49, 50, 55, 56, 58, 59, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 118, 119, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136], "These": [0, 9, 11, 20, 35, 37, 39, 41, 45, 48, 49, 50, 54, 56, 57, 58, 59, 62, 111, 126, 135, 136], "can": [0, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 19, 21, 23, 24, 29, 30, 32, 33, 34, 36, 38, 40, 43, 44, 45, 47, 49, 50, 53, 55, 56, 57, 58, 59, 60, 61, 63, 64, 69, 70, 72, 77, 78, 92, 93, 94, 99, 101, 103, 105, 106, 109, 111, 114, 116, 117, 118, 120, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "us": [0, 3, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 18, 19, 21, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 40, 42, 43, 44, 45, 49, 50, 53, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 116, 117, 118, 119, 121, 122, 123, 124, 125, 127, 128, 129, 130, 132, 133, 134], "carri": [0, 24, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "out": [0, 3, 7, 9, 24, 43, 100, 126, 132, 136], "research": 0, "investig": [0, 133], "how": [0, 9, 24, 45, 49, 93, 106, 109, 111, 127, 128, 129, 131, 132, 133, 134, 136], "solv": [0, 24, 26, 60, 61, 86, 95, 97, 106, 109, 129, 131, 134, 136], "problem": [0, 3, 13, 14, 15, 17, 21, 22, 24, 26, 28, 29, 32, 40, 45, 46, 51, 52, 53, 55, 60, 61, 85, 86, 87, 92, 95, 96, 97, 99, 106, 107, 108, 109, 126, 127, 128, 130, 131, 133, 134, 136], "differ": [0, 9, 19, 24, 26, 27, 29, 32, 34, 40, 45, 57, 63, 67, 68, 72, 82, 92, 93, 106, 109, 112, 114, 120, 126, 127, 128, 129, 132, 133, 134, 136], "domain": [0, 89, 120], "simul": [0, 15, 16, 18, 23, 30, 32, 33, 43, 51, 52, 77, 105, 109, 126, 128, 133, 134, 135, 136], "term": [0, 5, 8, 26, 27, 36, 44, 56, 64, 70, 82, 83, 126, 129, 135, 136], "real": [0, 5, 40, 46, 52, 55, 61, 63, 64, 67, 69, 70, 72, 77, 78, 79, 106, 109, 123, 124, 126, 127, 128, 129, 133, 135], "devic": [0, 5, 8, 109, 126, 128, 135, 136], "shallow": 0, "circuit": [0, 2, 5, 8, 9, 10, 11, 13, 15, 16, 18, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 40, 42, 43, 45, 49, 50, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 83, 106, 109, 114, 117, 118, 119, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136], "The": [0, 3, 5, 7, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 117, 118, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 132, 133, 134, 136], "includ": [0, 6, 9, 10, 11, 15, 22, 24, 26, 28, 29, 31, 32, 42, 43, 46, 51, 52, 55, 60, 61, 78, 96, 97, 105, 109, 127, 131, 136], "some": [0, 7, 13, 21, 90, 92, 105, 106, 109, 114, 128, 131, 136], "exampl": [0, 5, 6, 9, 24, 40, 44, 55, 83, 93, 98, 106, 109, 111, 114, 127, 128, 131, 133, 134], "numpyminimumeigensolv": [0, 127, 128, 130], "which": [0, 3, 5, 7, 9, 10, 15, 21, 22, 24, 26, 28, 29, 31, 32, 40, 41, 42, 44, 45, 46, 49, 51, 52, 53, 54, 56, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 119, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "take": [0, 13, 24, 32, 40, 42, 49, 56, 60, 61, 98, 106, 109, 126, 127, 128, 132, 133, 134, 135, 136], "same": [0, 6, 7, 9, 25, 26, 27, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 79, 80, 83, 93, 105, 106, 109, 111, 114, 118, 126, 127, 128, 130, 132, 134], "input": [0, 9, 13, 21, 25, 26, 31, 42, 44, 53, 56, 106, 117, 119, 128, 129, 131, 132, 133, 135], "counterpart": [0, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136], "classic": [0, 3, 24, 25, 40, 45, 48, 49, 50, 51, 52, 56, 58, 77, 78, 100, 105, 126, 127, 128, 130, 133], "thi": [0, 3, 6, 7, 9, 10, 12, 13, 15, 19, 21, 22, 24, 26, 27, 29, 31, 32, 34, 36, 38, 40, 42, 43, 44, 45, 48, 49, 53, 56, 58, 63, 69, 70, 71, 72, 77, 78, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 116, 117, 118, 119, 120, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "ha": [0, 3, 7, 9, 10, 12, 13, 16, 18, 23, 24, 29, 30, 33, 36, 38, 40, 43, 44, 45, 49, 54, 56, 58, 62, 92, 93, 96, 105, 106, 109, 111, 114, 116, 127, 128, 131, 132, 133, 135, 136], "where": [0, 6, 7, 14, 22, 24, 25, 26, 29, 32, 42, 45, 48, 50, 53, 56, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 79, 80, 84, 87, 93, 106, 109, 111, 114, 117, 118, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "ar": [0, 3, 7, 9, 10, 11, 15, 19, 20, 22, 24, 26, 27, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 82, 83, 86, 92, 93, 95, 96, 97, 99, 101, 104, 106, 107, 109, 111, 114, 117, 118, 120, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136], "still": [0, 9, 106, 109, 126, 127, 128, 133], "tractabl": [0, 127, 128], "valid": [0, 45, 60, 61], "act": [0, 13, 21, 24, 42, 135, 136], "refer": [0, 7, 9, 13, 15, 21, 22, 24, 26, 29, 32, 40, 42, 45, 49, 53, 58, 67, 68, 69, 70, 71, 72, 73, 77, 78, 79, 80, 82, 85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 99, 100, 104, 105, 106, 107, 108, 109, 110, 112, 114, 118, 126, 127, 128, 129, 130, 131, 133, 135], "There": [0, 26, 78, 126, 127, 129, 135, 136], "also": [0, 3, 5, 9, 10, 40, 45, 48, 49, 56, 58, 90, 94, 97, 103, 105, 106, 109, 111, 112, 116, 120, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "vqe": [0, 3, 9, 10, 40, 45, 49, 59, 98, 114, 129], "packag": [0, 3, 7, 9, 114, 130], "provid": [0, 3, 5, 10, 12, 13, 15, 22, 24, 28, 29, 31, 32, 40, 42, 45, 46, 51, 52, 53, 55, 56, 60, 61, 93, 106, 108, 109, 111, 114, 121, 123, 125, 126, 127, 128, 129, 135], "common": [0, 6, 9, 10], "build": [0, 10, 13, 21, 42, 95, 126, 128, 133], "block": [0, 10, 106, 109, 126, 131, 133], "state_fidel": [0, 40, 129, 133], "element": [0, 24, 32, 36, 38, 40, 63, 67, 69, 72, 77, 79, 92, 109, 131], "frequent": [0, 25], "varieti": [0, 3, 128], "applic": [0, 99, 126, 136], "machin": [0, 105], "learn": [0, 24, 82, 83, 93, 94, 106, 109, 116, 118, 126, 127, 133], "here": [0, 3, 6, 7, 9, 12, 19, 26, 34, 36, 38, 44, 56, 58, 109, 114, 120, 126, 127, 128, 131, 133, 134], "all": [0, 3, 9, 10, 12, 13, 17, 21, 24, 25, 26, 31, 41, 42, 43, 44, 49, 56, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 93, 94, 98, 101, 106, 109, 111, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "primit": [0, 9, 10, 12, 15, 22, 26, 29, 31, 32, 40, 42, 45, 49, 55, 56, 58, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 106, 109, 114, 117, 118, 119, 127, 129, 130, 131, 132, 133, 134, 136], "execut": [0, 12, 42, 49, 58, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 106, 109, 117, 118, 119, 131, 133, 134, 135], "an": [0, 3, 5, 6, 9, 10, 12, 13, 15, 17, 19, 21, 22, 24, 26, 27, 28, 29, 31, 32, 34, 36, 38, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 58, 60, 61, 62, 63, 78, 86, 91, 92, 93, 94, 95, 96, 97, 99, 102, 106, 109, 111, 114, 116, 117, 118, 120, 121, 122, 123, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "expect": [0, 9, 10, 11, 19, 20, 34, 35, 36, 37, 38, 39, 40, 41, 45, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 69, 70, 72, 74, 77, 78, 79, 106, 126, 127, 129, 133, 134, 136], "valu": [0, 3, 6, 10, 11, 13, 19, 20, 21, 22, 24, 25, 26, 27, 29, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 116, 117, 118, 119, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "sampler": [0, 15, 22, 24, 26, 29, 31, 32, 40, 42, 45, 49, 65, 68, 71, 73, 80, 106, 114, 118, 129, 130, 131, 132, 133], "probabl": [0, 15, 16, 22, 23, 24, 25, 26, 29, 42, 43, 44, 48, 49, 50, 65, 68, 71, 73, 80, 81, 132, 135, 136], "distribut": [0, 48, 50, 65, 68, 71, 73, 80, 114, 130, 135], "specif": [0, 1, 7, 9, 13, 21, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 117, 118, 126, 127, 128, 131, 134], "more": [0, 7, 9, 12, 15, 24, 89, 93, 108, 111, 114, 126, 127, 128, 131, 133, 134, 136], "inform": [0, 7, 10, 13, 17, 21, 24, 26, 32, 33, 40, 42, 53, 66, 74, 75, 76, 81, 83, 93, 94, 99, 103, 106, 109, 111, 112, 114, 119, 126, 127, 128, 131, 133, 136], "regard": [0, 135], "now": [0, 9, 12, 126, 127, 128, 131, 132, 133, 134, 135, 136], "present": [0, 26, 109, 135, 136], "group": [0, 9, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 126, 136], "logic": [0, 3, 9, 111, 131, 135], "function": [0, 3, 7, 9, 12, 13, 16, 18, 21, 23, 24, 25, 30, 32, 33, 40, 45, 49, 56, 58, 63, 72, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 120, 126, 127, 129, 130, 133, 135, 136], "etc": [0, 127], "within": [0, 3, 45, 49, 53, 56, 58, 83, 92, 108, 126, 127], "each": [0, 6, 23, 24, 26, 29, 30, 40, 41, 42, 45, 49, 54, 55, 56, 57, 58, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 86, 92, 93, 104, 106, 109, 112, 114, 119, 120, 127, 129, 130, 131, 132, 133, 134, 135, 136], "conform": 0, "interfac": [0, 5, 14, 17, 19, 28, 34, 43, 46, 47, 60, 61, 93, 98, 111, 117, 120, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136], "allow": [0, 7, 9, 19, 24, 26, 34, 36, 38, 45, 49, 58, 60, 61, 88, 89, 90, 91, 96, 99, 104, 105, 106, 109, 111, 112, 120, 127, 128, 131, 135], "them": [0, 93, 107, 111, 131, 132, 133], "interchang": [0, 19, 34, 126], "e": [0, 5, 7, 14, 24, 26, 45, 49, 53, 56, 58, 63, 67, 68, 72, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 120, 126, 127, 130, 131, 133, 135, 136], "g": [0, 5, 14, 15, 22, 24, 29, 32, 49, 53, 63, 72, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 126, 130, 131, 133, 135], "natur": [0, 10, 78, 106, 109, 114, 118, 126, 127, 128], "mai": [0, 7, 19, 26, 34, 42, 44, 45, 56, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 127, 130, 131, 134], "ground": [0, 19, 34, 36, 38, 56, 58, 106, 109, 126, 127, 128, 129, 134], "requir": [0, 7, 9, 10, 12, 13, 19, 21, 22, 24, 27, 32, 34, 36, 38, 40, 43, 49, 53, 56, 58, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 120, 129, 131, 132], "minimumeigensolv": [0, 10, 38, 48, 58], "ani": [0, 9, 11, 13, 16, 18, 20, 22, 23, 25, 27, 30, 33, 35, 37, 39, 41, 43, 44, 45, 48, 49, 50, 54, 56, 57, 58, 59, 62, 66, 75, 76, 81, 93, 102, 103, 107, 110, 119, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "base": [0, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 134], "amplif": [0, 13, 14, 15, 22, 24, 29, 32], "find": [0, 3, 7, 10, 15, 24, 26, 29, 32, 44, 45, 49, 56, 58, 85, 93, 99, 109, 126, 128, 129, 130, 131, 134, 136], "eigenvalu": [0, 10, 11, 19, 20, 26, 27, 31, 34, 35, 36, 37, 38, 39, 42, 44, 45, 47, 48, 49, 50, 56, 57, 58, 59, 126, 127, 128, 129, 135], "oper": [0, 10, 11, 13, 15, 19, 20, 21, 22, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 44, 45, 47, 48, 49, 50, 53, 55, 56, 57, 58, 59, 60, 61, 106, 114, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135], "For": [0, 1, 9, 12, 19, 24, 31, 34, 36, 38, 42, 44, 53, 55, 56, 58, 85, 86, 87, 88, 89, 90, 91, 93, 95, 96, 97, 99, 104, 105, 107, 108, 109, 110, 111, 112, 114, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136], "chemistri": [0, 10, 19, 34, 36, 38, 56, 58, 126, 127], "excit": [0, 10, 56, 129], "molecul": [0, 109, 114, 126, 127, 128, 129], "leverag": [0, 118, 127, 128, 134], "knowledg": [0, 24, 93, 111], "do": [0, 7, 9, 21, 93, 111, 126, 130, 134], "calcul": [0, 2, 24, 40, 41, 49, 54, 55, 56, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 106, 109, 112, 117, 118, 119, 121, 123, 125, 128, 129, 131, 133], "set": [0, 1, 3, 9, 10, 11, 13, 15, 16, 18, 20, 21, 23, 24, 25, 26, 27, 30, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 48, 49, 50, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 117, 118, 126, 127, 128, 129, 130, 131, 133, 134], "gener": [0, 6, 9, 24, 43, 44, 45, 49, 56, 58, 82, 86, 87, 92, 93, 94, 99, 100, 104, 105, 106, 107, 109, 110, 112, 114, 116, 120, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "hamiltonian": [0, 10, 26, 27, 28, 40, 44, 45, 46, 49, 51, 52, 53, 55, 56, 58, 114, 121, 123, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136], "onli": [0, 3, 6, 9, 13, 21, 24, 26, 27, 29, 36, 38, 43, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 91, 97, 105, 106, 109, 127, 128, 131, 134, 136], "diagon": [0, 45, 47, 49, 82], "Ising": [0, 40, 126, 130, 133, 134, 136], "design": [0, 3], "eigenst": [0, 11, 19, 31, 36, 37, 38, 39, 42, 44, 45, 47, 48, 49, 50, 56, 57, 59, 129, 130], "unitari": [0, 10, 13, 21, 22, 26, 27, 29, 31, 42, 44, 69, 70, 71], "pair": [0, 4, 31, 117, 119], "both": [0, 24, 29, 42, 44, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 79, 80, 92, 93, 99, 104, 109, 118, 121, 123, 126, 127, 128, 131, 134, 135], "imaginari": [0, 5, 28, 51, 60, 61, 63, 67, 69, 72, 77, 78, 79, 121, 122, 135], "possibl": [0, 3, 42, 44, 56, 128, 130, 131], "support": [0, 7, 9, 10, 15, 19, 21, 24, 29, 32, 34, 36, 38, 40, 45, 47, 49, 55, 56, 58, 63, 72, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 120, 127, 131, 132, 135], "might": [0, 5, 9, 53, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 112, 114, 118, 119, 127, 131, 133], "train": [0, 128], "boltzmann": 0, "neural": 0, "network": [0, 135], "varqit": [0, 5], "varqrt": [0, 5], "variou": [0, 3, 127, 136], "part": [0, 44, 60, 61, 77, 78, 88, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "expos": [0, 5], "public": 0, "api": [0, 27], "except": [1, 9, 97, 105, 116, 131, 132], "messag": [1, 9, 86, 87, 92, 99, 104, 107, 112], "sourc": [1, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "algorithm": [1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 26, 29, 31, 32, 34, 36, 38, 40, 41, 42, 43, 45, 49, 53, 55, 56, 58, 60, 61, 62, 77, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 118, 127, 128, 133, 134, 135], "error": [1, 12, 15, 22, 29, 32, 41, 93, 99, 104, 111, 119, 128, 133, 134, 136], "contain": [3, 13, 15, 17, 21, 26, 32, 40, 42, 45, 47, 48, 49, 53, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 121, 123, 130, 132, 133, 135, 136], "were": [3, 126, 128], "": [3, 7, 9, 11, 12, 15, 24, 29, 32, 36, 45, 49, 58, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 82, 97, 98, 100, 111, 117, 118, 121, 123, 126, 127, 128, 129, 130, 133, 134, 135, 136], "quantum": [3, 4, 5, 8, 10, 15, 22, 24, 26, 28, 29, 31, 32, 40, 41, 42, 44, 45, 46, 49, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 83, 100, 105, 106, 109, 114, 117, 118, 121, 123, 125, 126, 128, 131, 132], "variat": [3, 10, 40, 41, 49, 53, 56, 58, 59, 60, 61, 62, 77, 96, 109, 114, 121, 122, 123, 124, 125, 126, 127, 128, 135], "divid": [3, 5, 55, 89, 90], "two": [3, 5, 31, 40, 42, 44, 77, 106, 109, 117, 118, 120, 127, 128, 129, 130, 131, 133, 134, 135, 136], "categori": [3, 5, 126], "given": [3, 15, 24, 31, 49, 55, 56, 58, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 121, 123, 125, 126, 129, 134, 135], "attempt": [3, 12, 40, 92, 97, 106], "neighbor": [3, 40, 44, 133, 136], "candid": [3, 10], "solut": [3, 24, 45, 56, 85, 86, 104, 108, 114, 126, 127, 129, 130, 131, 136], "among": [3, 38, 109, 126, 127], "qiskit": [3, 5, 7, 9, 10, 12, 15, 24, 40, 42, 49, 55, 56, 58, 98, 106, 109, 110, 114, 127, 129, 130, 131, 132, 133, 134, 136], "follow": [3, 7, 9, 10, 40, 45, 49, 56, 58, 93, 95, 98, 118, 127, 128, 130, 131, 133, 134, 135, 136], "built": [3, 9, 100], "from": [3, 5, 7, 9, 10, 11, 12, 13, 15, 16, 18, 20, 21, 23, 25, 26, 27, 29, 30, 32, 33, 35, 37, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 54, 55, 57, 58, 59, 62, 86, 92, 93, 102, 106, 109, 111, 112, 114, 117, 120, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "scikit": [3, 7, 85, 95, 108], "quant": [3, 7, 15, 22, 24, 29, 31, 32, 85, 95, 108, 118, 131], "instal": [3, 85, 88, 89, 90, 91, 95, 96, 108, 126], "default": [3, 7, 9, 10, 13, 15, 16, 18, 21, 23, 27, 29, 30, 32, 33, 40, 43, 55, 56, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 117, 118, 120, 126, 127, 128, 131, 136], "must": [3, 13, 15, 24, 26, 27, 29, 32, 36, 38, 44, 45, 49, 53, 56, 58, 83, 86, 106, 109, 120, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "explicitli": [3, 131], "desir": [3, 6, 44, 114, 131], "user": [3, 5, 9, 43, 93, 111, 114, 129], "therein": 3, "under": [3, 5, 7, 28, 40, 46, 51, 52, 53, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "licens": [3, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "henc": [3, 126, 133], "been": [3, 7, 9, 10, 12, 16, 18, 23, 24, 25, 30, 32, 33, 40, 43, 45, 49, 54, 56, 58, 62, 106, 109, 111, 114, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "made": [3, 7, 9], "option": [3, 19, 24, 34, 36, 38, 40, 41, 45, 47, 49, 53, 54, 55, 56, 58, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 117, 118, 119, 120, 126, 128, 129, 131, 135], "To": [3, 15, 24, 93, 106, 109, 111, 126, 127, 131, 136], "depend": [3, 7, 10, 49, 51, 52, 53, 111, 114, 117, 118, 119, 127, 135], "you": [3, 7, 9, 24, 26, 92, 93, 105, 106, 109, 114, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "pip": [3, 7, 85, 95, 108], "nlopt": [3, 7, 88, 89, 90, 91, 96], "core": [3, 42], "perform": [5, 10, 24, 26, 28, 36, 40, 46, 51, 52, 56, 83, 86, 93, 94, 97, 99, 100, 103, 104, 105, 106, 107, 110, 111, 112, 114, 126, 132, 133, 134, 136], "evolut": [5, 10, 26, 28, 40, 45, 46, 51, 52, 53, 54, 55, 60, 61, 62, 88, 96, 121, 123, 125, 126, 133], "state": [5, 9, 10, 12, 13, 14, 15, 17, 19, 21, 24, 25, 26, 28, 31, 34, 36, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 61, 62, 64, 70, 74, 84, 93, 94, 103, 106, 109, 111, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136], "tailor": 5, "varqt": [5, 60, 61], "class": [5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136], "compliant": 5, "framework": [5, 100, 127], "implement": [5, 9, 10, 15, 19, 21, 24, 29, 32, 34, 45, 49, 56, 58, 60, 61, 77, 78, 92, 107, 109, 112, 114, 117, 118, 120, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136], "respect": [5, 15, 25, 32, 44, 63, 67, 69, 72, 77, 79, 117, 118, 121, 123, 125, 132, 135, 136], "approach": [5, 32, 56, 58, 118, 130, 131, 135], "taken": [5, 11, 23, 50, 51, 52, 57, 59, 104], "accord": [5, 26, 32, 111, 121, 123, 125, 126], "chosen": [5, 26, 49, 106, 109, 114, 129], "import": [5, 6, 9, 10, 40, 44, 49, 55, 58, 93, 106, 109, 111, 114, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "numpi": [5, 36, 37, 38, 39, 40, 43, 93, 106, 108, 109, 111, 127, 129, 130, 131, 133, 134, 135, 136], "np": [5, 6, 40, 41, 45, 49, 54, 56, 58, 60, 61, 62, 66, 75, 76, 92, 93, 106, 109, 111, 114, 116, 121, 123, 125, 127, 129, 130, 131, 133, 134, 135, 136], "timeevolutionproblem": [5, 28, 40, 46, 51, 52, 55, 60, 61, 133, 134, 136], "imaginarymclachlanprincipl": [5, 60, 134], "efficientsu2": [5, 40, 133, 134], "quantum_info": [5, 40, 55, 106, 109, 114, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136], "sparsepauliop": [5, 26, 40, 44, 55, 109, 126, 127, 128, 129, 130, 133, 134, 135, 136], "observ": [5, 19, 34, 36, 38, 40, 41, 54, 56, 58, 60, 61, 62, 63, 67, 69, 72, 77, 79, 106, 109, 131, 133, 134, 135, 136], "from_list": [5, 126, 127, 128, 129, 135], "ii": [5, 126, 127, 128, 129, 135], "2252": 5, "zz": [5, 40, 106, 109, 126, 127, 128, 129, 133, 134, 135, 136], "5716": 5, "iz": [5, 126, 127, 128, 129, 133, 134, 135, 136], "3435": 5, "zi": [5, 126, 127, 128, 129, 130, 133, 134, 135, 136], "4347": 5, "yy": [5, 136], "091": 5, "xx": [5, 126, 127, 128, 129, 136], "ansatz": [5, 9, 10, 40, 45, 48, 49, 50, 53, 56, 58, 60, 61, 106, 109, 121, 123, 125, 126, 127, 128, 129, 130, 133, 134, 135], "num_qubit": [5, 24, 126, 128, 130, 131, 133, 134, 136], "rep": [5, 40, 45, 55, 106, 109, 114, 129, 130, 133, 134, 136], "init_param_valu": [5, 134], "zero": [5, 24, 26, 31, 40, 42, 43, 130, 131, 133], "len": [5, 109, 127, 130, 134, 136], "paramet": [5, 9, 10, 11, 12, 13, 14, 15, 17, 19, 21, 22, 24, 26, 27, 28, 29, 31, 32, 34, 36, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 133, 134, 136], "rang": [5, 44, 82, 109, 127, 129, 130, 134, 136], "pi": [5, 15, 26, 43, 44, 45, 49, 56, 58, 106, 109, 134, 135, 136], "2": [5, 15, 22, 24, 26, 29, 31, 32, 40, 42, 43, 44, 45, 49, 56, 58, 63, 69, 72, 82, 93, 97, 105, 106, 108, 109, 111, 112, 114, 117, 118, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "var_principl": [5, 134], "evolution_problem": [5, 28, 40, 46, 51, 52, 55, 60, 61, 134], "var_qit": [5, 134], "evolution_result": [5, 134], "With": [5, 24, 126, 132, 133, 136], "we": [5, 9, 10, 13, 19, 21, 24, 26, 34, 36, 38, 42, 56, 58, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 116, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "project": [5, 7, 40, 112, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136], "onto": [5, 40, 133], "model": [5, 40, 106, 108, 109, 114, 128, 134, 136], "our": [5, 127, 128, 129, 130, 132, 133, 134, 135, 136], "case": [5, 10, 24, 26, 27, 40, 42, 43, 44, 45, 53, 60, 61, 88, 98, 99, 114, 126, 127, 131, 134, 136], "thei": [5, 9, 10, 19, 34, 36, 38, 45, 47, 49, 55, 56, 58, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "_real_": 5, "standard": [5, 15, 41, 54, 62, 93, 106, 109, 118, 131, 135, 136], "schroedig": 5, "equat": [5, 60, 61, 86, 121, 123, 134, 136], "_imaginary_": 5, "normal": [5, 9, 44, 92, 93, 105, 106, 109, 111, 114, 132], "wick": [5, 121], "rotat": [5, 45, 83, 121], "schroeding": 5, "scipi": [5, 9, 36, 49, 56, 58, 60, 61, 86, 87, 97, 98, 99, 100, 104, 105, 107, 110, 112, 120, 133, 135, 136], "forward": [5, 67, 68, 93, 120], "euler": [5, 120], "prefer": [5, 56, 99], "choic": [5, 10, 93, 109, 111, 120, 126, 127, 128, 133, 136], "presenc": [5, 27, 109], "nois": [5, 42, 82, 109, 136], "One": 5, "directli": [5, 9, 15, 45, 93, 100, 127, 136], "rk45": 5, "global": [6, 45, 88, 89, 90, 91, 96, 118], "properti": [6, 11, 15, 16, 18, 20, 23, 25, 27, 30, 33, 35, 37, 39, 41, 43, 48, 50, 54, 57, 59, 62, 82, 93, 102, 128], "across": [6, 42], "qiskit_algorithm": [6, 9, 10, 40, 49, 55, 58, 60, 61, 92, 93, 105, 106, 109, 111, 114, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136], "random": [6, 9, 24, 40, 45, 49, 56, 58, 79, 80, 88, 90, 92, 93, 105, 106, 109, 111, 114, 126, 127, 131, 135], "number": [6, 9, 10, 11, 15, 16, 18, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 36, 40, 42, 43, 45, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 77, 78, 79, 80, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 120, 126, 127, 128, 129, 130, 134, 135], "seed": [6, 9, 79, 80, 92, 105, 106, 109, 114, 126, 128, 130, 135], "need": [6, 26, 36, 44, 49, 58, 84, 93, 104, 111, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "reproduc": [6, 9, 92, 105, 106, 109, 114, 128], "result": [6, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 117, 118, 119, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136], "when": [6, 9, 10, 15, 24, 27, 43, 44, 48, 50, 53, 56, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 126, 127, 131, 135], "often": [6, 24, 86, 126], "unit": [6, 92, 136], "test": [6, 7, 25], "outcom": [6, 13, 21, 32, 130], "time": [6, 9, 11, 24, 26, 28, 36, 40, 41, 46, 50, 51, 52, 53, 54, 55, 57, 59, 60, 61, 62, 100, 106, 109, 120, 121, 122, 123, 124, 125, 126, 131, 133, 135], "have": [6, 7, 9, 10, 24, 25, 36, 43, 49, 56, 58, 93, 100, 111, 114, 120, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "variabl": [6, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 128, 132], "due": [6, 22, 42, 128], "random_se": [6, 9, 92, 105, 106, 109, 114, 127, 128, 130], "read": [6, 10, 40, 42, 43, 44, 45, 49, 56, 58], "write": [6, 132, 136], "type": [6, 10, 12, 14, 15, 17, 19, 21, 22, 24, 25, 26, 27, 28, 29, 31, 32, 34, 36, 38, 40, 42, 43, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 121, 123, 125, 127, 129, 135], "int": [6, 10, 13, 15, 21, 22, 24, 26, 29, 31, 32, 36, 40, 42, 43, 45, 49, 51, 52, 55, 56, 58, 60, 61, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 120, 130, 136], "none": [6, 9, 10, 11, 13, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 123, 125, 126, 127, 132], "main": [7, 9, 10, 19, 34, 36, 38, 42, 43, 45, 47, 49, 56, 58, 104, 109, 114], "its": [7, 9, 10, 12, 45, 56, 93, 95, 111, 127, 131, 132, 135, 136], "own": [7, 45, 128, 129], "instruct": [7, 42, 111, 128], "detail": [7, 15, 24, 31, 40, 83, 85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 99, 100, 104, 105, 107, 108, 109, 110, 112, 126, 131, 133], "environ": 7, "platform": 7, "should": [7, 9, 13, 15, 22, 24, 26, 29, 31, 32, 45, 49, 55, 56, 92, 93, 105, 106, 109, 111, 114, 120, 121, 123, 125, 128, 129, 132, 133, 134], "first": [7, 9, 10, 23, 24, 32, 36, 40, 42, 55, 99, 104, 106, 109, 111, 117, 118, 127, 128, 129, 130, 131, 133, 134, 135, 136], "befor": [7, 9, 15, 40, 86, 93, 106, 109, 111, 126, 128, 133], "focus": 7, "addit": [7, 10, 12, 15, 22, 27, 32, 42, 66, 75, 76, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 119, 129, 131, 132], "code": [7, 9, 43, 109, 114, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "program": [7, 107], "cannot": [7, 26, 127], "see": [7, 12, 15, 24, 31, 40, 83, 90, 93, 99, 100, 104, 106, 107, 108, 109, 111, 112, 118, 120, 126, 127, 129, 131, 133, 135, 136], "local": [7, 85, 88, 89, 90, 96, 105, 108, 109, 118, 128], "simplest": 7, "wai": [7, 9, 12, 26, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 130, 135], "manag": [7, 26], "access": [7, 9, 43, 45, 49, 56, 58, 116, 128], "most": [7, 13, 14, 24, 25, 27, 42, 43, 109, 130, 131, 136], "recent": 7, "updat": [7, 9, 10, 11, 12, 16, 18, 20, 23, 25, 27, 30, 33, 35, 37, 39, 40, 41, 43, 45, 48, 49, 50, 54, 56, 57, 58, 59, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 118, 133, 134], "version": [7, 9, 12, 15, 22, 24, 88, 89, 105, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "develop": [7, 9], "instead": [7, 9, 24, 27, 106, 109, 111, 114, 118, 126, 128, 131, 135], "python": [7, 9, 114], "index": [7, 21, 131], "pypi": 7, "repositori": 7, "sinc": [7, 40, 127, 130, 132, 133], "latest": [7, 88, 89, 90, 91, 96], "chang": [7, 9, 10, 83, 87, 97, 103, 105, 126, 127], "new": [7, 42, 114, 128, 136], "featur": [7, 55, 56, 109, 118, 127, 136], "clone": 7, "git": 7, "http": [7, 9, 24, 31, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 104, 105, 107, 108, 110, 111, 112, 114, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "github": [7, 85, 95, 108, 114], "com": [7, 85, 95, 108, 114], "commun": [7, 136], "creat": [7, 9, 10, 44, 93, 111, 116, 117, 118, 126, 128, 129, 130, 131, 132, 134, 136], "folder": 7, "call": [7, 9, 12, 24, 27, 29, 32, 40, 43, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 120, 126, 127, 131, 132, 134, 136], "cd": 7, "If": [7, 9, 10, 13, 15, 19, 21, 24, 26, 27, 29, 31, 32, 34, 36, 38, 40, 42, 43, 44, 45, 47, 49, 51, 52, 53, 55, 56, 58, 60, 61, 67, 68, 79, 80, 82, 83, 86, 92, 93, 97, 99, 104, 105, 106, 108, 109, 111, 112, 114, 118, 121, 123, 125, 129, 131, 136], "want": [7, 10, 24, 92, 93, 105, 106, 109, 111, 114, 126, 129, 133, 134, 135], "run": [7, 8, 12, 13, 14, 15, 17, 21, 22, 24, 26, 27, 29, 31, 32, 40, 42, 43, 45, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 92, 105, 106, 109, 114, 117, 118, 127, 128, 129, 132, 133, 135], "lint": 7, "check": [7, 13, 21, 24, 126, 131, 134], "r": [7, 32, 121, 123, 125, 130, 133, 134, 135, 136], "dev": 7, "txt": [7, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "edit": [7, 42], "mode": [7, 77, 78, 132], "mean": [7, 11, 20, 21, 35, 37, 39, 41, 48, 50, 54, 56, 57, 58, 59, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 97, 105, 106, 109, 121, 122, 123, 124, 127, 128, 130, 132, 136], "don": [7, 131], "t": [7, 26, 32, 40, 46, 52, 69, 70, 71, 77, 78, 93, 101, 111, 120, 121, 123, 125, 131, 132, 133, 134, 136], "reinstal": 7, "appli": [7, 13, 15, 16, 18, 21, 23, 24, 29, 30, 32, 33, 42, 60, 61, 112, 127, 135, 136], "optim": [7, 9, 10, 11, 13, 24, 40, 45, 47, 48, 49, 50, 56, 57, 58, 59, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 116, 126, 127, 128, 129, 131, 136], "command": 7, "snobfit": [7, 9], "sqsnobfit": [7, 108], "dive": 7, "tutori": [7, 8, 24, 93, 111, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "about": [7, 9, 10, 13, 24, 66, 75, 76, 81, 93, 111, 119, 131, 134, 135], "suitabl": [8, 44, 134], "short": [8, 9, 106, 109, 114], "depth": [8, 45, 126, 136], "get": [8, 10, 13, 15, 19, 21, 22, 24, 29, 32, 34, 36, 38, 40, 56, 58, 93, 94, 95, 105, 106, 109, 111, 114, 126, 132, 133, 134, 136], "start": [8, 40, 45, 56, 88, 93, 97, 106, 109, 111, 126, 127, 128, 131, 136], "compat": [9, 12], "14": [9, 128, 131, 133, 134, 135, 136], "csr_matrix": 9, "h": [9, 24, 26, 28, 40, 46, 51, 52, 56, 58, 69, 70, 71, 72, 73, 129, 130, 131, 133, 134, 135, 136], "had": [9, 128], "deprec": [9, 12, 32, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136], "wa": [9, 12, 25, 44, 92, 106, 109, 111, 114, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "remov": [9, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136], "numpyeigensolv": [9, 129], "altern": [9, 12, 24, 45, 120, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136], "aspect": [9, 136], "gradient": [9, 10, 11, 40, 49, 58, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 121, 122, 123, 124, 125], "intern": [9, 10, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 131], "manipul": [9, 27, 43, 77, 78], "data": [9, 45, 49, 56, 58, 93, 111, 127], "being": [9, 10, 12, 21, 94, 103, 104, 131, 136], "handl": [9, 13, 16, 18, 21, 23, 30, 33, 93, 97, 106, 107, 111, 121, 123], "rust": 9, "so": [9, 19, 24, 26, 27, 34, 36, 38, 43, 44, 56, 58, 89, 93, 94, 103, 114, 116, 126, 127, 128, 130, 131, 133], "former": 9, "well": [9, 15, 24, 45, 93, 111, 126, 127, 128, 133, 135], "while": [9, 19, 34, 36, 38, 56, 58, 93, 111, 128, 133, 134, 136], "continu": [9, 93, 107, 108, 111, 114, 120, 130], "work": [9, 13, 21, 24, 26, 114, 127, 128, 130, 131, 132, 133, 134, 135, 136], "46": [9, 12, 129, 133], "those": [9, 114], "navig": 9, "brought": 9, "ad": [9, 12, 27, 106, 109, 128], "argument": [9, 11, 13, 16, 18, 20, 23, 24, 25, 26, 27, 30, 32, 33, 35, 37, 39, 40, 41, 43, 48, 49, 50, 53, 54, 57, 58, 59, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 77, 78, 79, 80, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 120, 127, 129, 134, 136], "insert_barri": [9, 55, 131], "trotterqrt": [9, 136], "add": [9, 93, 109, 128, 131], "barrier": [9, 55], "between": [9, 24, 29, 40, 99, 117, 118, 120, 121, 123, 127, 128, 130, 131, 134, 135], "trotter": [9, 40, 41, 53, 55, 133], "layer": [9, 13, 114], "12": [9, 53, 127, 128, 129, 131, 133, 134, 135, 136], "fidel": [9, 40, 41, 56, 106, 117, 118, 119, 129, 133], "computeuncomput": [9, 40, 129, 133], "correct": [9, 27, 131, 134], "issu": [9, 108], "aris": 9, "thread": 9, "job": [9, 12, 15, 24, 29, 32, 42, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 109, 117, 118, 119, 121, 123, 125], "could": [9, 12, 24, 92, 126, 128], "seen": [9, 111, 126, 127, 130, 132], "sometim": [9, 24, 44], "than": [9, 10, 15, 24, 27, 31, 32, 36, 43, 44, 55, 86, 93, 109, 120, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "one": [9, 10, 24, 26, 41, 42, 44, 49, 56, 58, 92, 93, 97, 104, 105, 106, 109, 111, 126, 127, 128, 129, 131, 132, 134, 135, 136], "fetch": 9, "back": [9, 126], "activ": [9, 12, 97, 105], "process": [9, 13, 15, 16, 18, 21, 23, 25, 30, 32, 33, 93, 94, 105, 109, 111, 114, 116, 128, 131, 135], "cach": 9, "kei": [9, 27, 43, 44, 48, 50, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 136], "method": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 116, 117, 118, 119, 120, 121, 123, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136], "avoid": [9, 44, 105, 135], "potenti": [9, 105], "incorrect": 9, "occur": [9, 10, 83], "id": [9, 12, 32, 128], "gsl": 9, "minim": [9, 10, 13, 21, 29, 32, 33, 40, 45, 49, 56, 58, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 121, 123, 129, 130, 134, 135], "bound": [9, 10, 24, 26, 32, 44, 45, 49, 56, 58, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 117, 118, 121, 123, 125, 127, 131], "pass": [9, 22, 24, 40, 44, 56, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 126, 127, 128, 129, 136], "tupl": [9, 11, 15, 20, 22, 32, 35, 37, 39, 40, 41, 49, 54, 57, 58, 59, 62, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 136], "entri": [9, 130, 135], "treat": [9, 24], "equival": [9, 134, 135], "infin": 9, "aqgd": 9, "object": [9, 10, 13, 15, 16, 17, 18, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 40, 41, 43, 44, 45, 49, 53, 56, 58, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 87, 92, 93, 96, 98, 99, 101, 103, 106, 107, 108, 109, 111, 119, 126, 127, 130, 133], "singl": [9, 21, 32, 40, 43, 45, 55, 118, 120, 131, 135, 136], "point": [9, 10, 11, 15, 32, 40, 45, 49, 50, 56, 57, 58, 59, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 131, 135], "evalu": [9, 10, 11, 15, 16, 19, 22, 25, 29, 32, 33, 34, 36, 38, 40, 41, 45, 47, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 126, 127, 129, 133, 136], "control": [9, 79, 80, 88, 93, 97, 105, 109, 111], "via": [9, 10, 24, 27, 31, 32, 40, 42, 43, 45, 49, 56, 58, 96, 127, 128, 131, 136], "max_grouped_ev": 9, "list": [9, 10, 13, 19, 21, 22, 24, 32, 34, 36, 38, 41, 43, 44, 45, 47, 49, 53, 54, 56, 58, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 119, 121, 123, 125, 127, 128, 129, 130, 131, 133, 135, 136], "hand": [9, 120, 134], "over": [9, 24, 38, 48, 50, 56, 83, 106, 109, 111, 118, 127, 129, 133, 134, 136], "assess": 9, "effici": [9, 40, 77, 78, 89, 109, 131, 135], "origin": [9, 15, 22, 29, 32, 44, 107, 114, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "move": 9, "util": [9, 92, 105, 106, 109, 114, 127, 128, 130], "algorithm_glob": [9, 92, 105, 106, 109, 114, 127, 128, 130], "101": [9, 106, 109, 132, 136], "until": [9, 24, 126], "howev": [9, 44, 45, 77, 78, 99, 114, 126, 127, 131, 133, 136], "highli": 9, "recommend": [9, 109, 112], "alreadi": [9, 42, 82, 114, 127, 129], "suppli": [9, 10, 19, 34, 36, 38, 56, 58, 93], "thu": [9, 10, 22, 45, 56, 127, 131, 133, 135, 136], "As": [9, 109, 128, 129, 131, 132, 133, 134, 135, 136], "simpli": [9, 56, 96, 126, 127, 128], "statement": 9, "instanc": [9, 10, 19, 24, 26, 34, 36, 38, 42, 43, 49, 55, 56, 58, 60, 61, 101, 111, 117, 118, 121, 122, 123, 124, 125, 126, 128, 129, 131, 132, 134, 136], "rather": [9, 26, 27, 127, 135], "done": [9, 12, 27, 111, 130], "afford": 9, "transit": 9, "break": 9, "end": [9, 93, 106, 109, 111, 127, 131, 134, 135, 136], "doe": [9, 15, 22, 24, 27, 29, 32, 45, 49, 51, 52, 56, 58, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 112, 114, 121, 123, 127, 133, 136], "exist": [9, 11, 16, 18, 20, 23, 25, 27, 30, 33, 35, 37, 39, 41, 43, 48, 50, 54, 57, 59, 62, 82, 102, 127, 136], "deleg": 9, "codebas": 9, "alter": [9, 12, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "warn": 9, "switch": [9, 133], "detect": 9, "A": [9, 12, 13, 15, 21, 22, 24, 26, 27, 29, 32, 34, 38, 40, 42, 43, 44, 45, 47, 49, 55, 56, 58, 60, 61, 82, 83, 86, 87, 92, 93, 97, 99, 100, 104, 105, 106, 107, 109, 110, 111, 112, 114, 118, 125, 127, 128, 130, 131, 136], "direct": [9, 89, 90, 92, 93, 97, 104, 106, 109, 120, 134, 136], "At": [9, 133], "longer": [9, 12, 128], "ident": [9, 13, 21, 24, 27, 106, 109], "further": [9, 13, 21, 83, 85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 99, 104, 105, 107, 108, 109, 110, 112, 118, 128, 130, 135], "algorithms_glob": 9, "coupl": [9, 10, 128], "pvqd": [9, 118, 133], "adaptvq": [9, 11], "rais": [9, 10, 11, 15, 16, 18, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 37, 39, 40, 41, 42, 43, 44, 48, 50, 51, 52, 53, 54, 55, 57, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 77, 78, 79, 80, 83, 85, 88, 89, 90, 91, 92, 93, 95, 96, 102, 108, 109, 116, 118, 121, 123, 125], "qiskiterror": 9, "algorithmerror": [9, 10, 15, 22, 24, 29, 31, 32, 42, 83, 108, 121, 123, 125], "better": [9, 44, 97, 99, 114], "distinguish": [9, 26, 44], "elsewher": [9, 136], "make": [9, 12, 44, 89, 93, 111, 127, 128, 130, 135], "thing": [9, 126, 129, 130], "consist": [9, 40, 128, 134, 136], "too": [9, 133, 136], "extend": [9, 10, 45, 97, 129, 134, 135], "caught": 9, "your": [9, 10, 128, 129, 131], "accordingli": [9, 111], "threshold": [9, 10, 15, 53, 92, 93], "replac": [9, 126, 134, 136], "gradient_threshold": [9, 10], "confus": 9, "later": [9, 126, 128, 131, 133, 134], "introduc": [9, 12, 15, 32, 56, 128, 129, 131, 134, 135], "eigenvalue_threshold": [9, 10], "would": [9, 109, 128, 130, 133, 136], "look": [9, 45, 49, 56, 58, 126, 127, 129, 131, 132, 133, 136], "like": [9, 10, 13, 14, 24, 25, 27, 43, 53, 63, 72, 94, 97, 103, 127, 130, 133, 136], "adapt_vq": [9, 10], "estim": [9, 10, 13, 15, 16, 17, 18, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 40, 41, 42, 49, 55, 56, 58, 60, 61, 63, 64, 67, 69, 70, 72, 77, 79, 82, 92, 97, 100, 106, 109, 114, 118, 121, 123, 126, 127, 128, 129, 131, 133, 134, 136], "1e": [9, 10, 15, 53, 60, 61, 82, 83, 86, 92, 93, 97, 107, 112, 136], "custom": [9, 15, 21, 45, 83, 93, 109, 111, 127, 128], "__str__": 9, "samplingminimumeigensolverresult": [9, 45, 47, 49, 50], "string": [9, 13, 21, 26, 27, 42, 43, 60, 61, 130, 131, 132, 136], "convers": [9, 24, 36, 130], "parent": [9, 12], "algorithmresult": [9, 18, 20, 27, 35, 48, 54, 102], "print": [9, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "field": [9, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 118, 133, 134, 136], "dictionari": [9, 11, 15, 16, 18, 23, 30, 33, 45, 49, 50, 58, 59, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 128, 134, 135, 136], "format": [9, 11, 20, 35, 37, 39, 41, 48, 50, 54, 57, 59, 62, 101, 106, 111, 127, 131, 132, 135], "overridden": 9, "select": [9, 10, 29, 40, 43, 60, 61, 114, 127, 133, 134, 136], "unlik": [9, 45, 109, 135], "shown": [9, 128, 130, 131, 132], "lack": 9, "caus": 9, "deriv": [9, 27, 63, 64, 67, 69, 70, 72, 76, 77, 78, 79, 83, 85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 99, 104, 108, 111, 120, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "return": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 116, 117, 118, 120, 121, 123, 125, 126, 130, 131, 132, 133, 135, 136], "samplingvq": [9, 45, 50, 130, 135], "qaoa": [9, 114, 127, 130], "modul": [9, 98, 126, 130, 134, 135], "supersed": 9, "standalon": 9, "25": [9, 83, 106, 109, 133, 134, 136], "re": [9, 63, 64, 69, 70, 72, 74, 126, 128, 133, 134, 135], "reli": [9, 10, 29, 32, 82, 126], "yet": [9, 32, 106, 109], "migrat": 9, "quantuminst": 9, "guidelin": 9, "qisk": 9, "algo_migr": 9, "complet": [9, 43, 109, 127, 132], "decis": [9, 90, 92, 109], "separ": [9, 126, 130], "clarifi": 9, "purpos": [9, 12, 136], "distinct": 9, "tool": [9, 135], "top": [9, 25, 131, 135], "eigensolv": [9, 10, 20, 34, 35, 36, 37, 38, 39, 45, 47, 48, 49, 56, 58, 59, 109, 126, 128, 135], "minimum_eigensolv": [9, 10], "without": [9, 27, 32, 85, 96, 127, 130, 134], "specifi": [9, 13, 15, 21, 22, 24, 26, 29, 32, 40, 45, 49, 58, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 92, 106, 109, 132, 133, 136], "path": [9, 127], "reserv": 9, "solver": [10, 58, 60, 61, 86, 87, 97, 99, 100, 104, 105, 106, 107, 109, 110, 112, 120, 121, 123], "05": [10, 15, 86, 132, 133, 135], "max_iter": 10, "variationalalgorithm": [10, 49, 56, 58], "adapt": [10, 79, 80, 82, 93, 99, 109, 131], "compact": 10, "It": [10, 13, 21, 29, 43, 44, 49, 56, 58, 60, 61, 86, 93, 94, 96, 99, 106, 109, 111, 112, 120, 121, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136], "iter": [10, 11, 15, 22, 23, 24, 25, 29, 30, 31, 40, 41, 56, 77, 78, 82, 83, 86, 92, 93, 97, 99, 100, 102, 104, 105, 106, 107, 109, 111, 114, 116, 127, 128, 129, 133, 135], "lead": [10, 106, 121, 123, 136], "largest": [10, 44], "In": [10, 26, 32, 40, 42, 43, 44, 48, 49, 88, 93, 95, 100, 109, 111, 114, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136], "usual": [10, 21, 132, 133], "orbit": 10, "cluster": 10, "wavefunct": [10, 126, 127, 135], "uniqu": [10, 12, 135], "whose": [10, 26, 31, 42, 43, 44, 86, 127], "minimum": [10, 11, 12, 19, 27, 32, 34, 35, 36, 38, 39, 43, 45, 47, 48, 49, 50, 56, 58, 59, 92, 93, 97, 99, 100, 105, 109, 114, 126, 127, 128], "determin": [10, 32, 40, 43, 44, 78, 92, 106, 109, 111, 120, 125, 133, 134], "significantli": [10, 106], "routin": [10, 40, 93, 102, 106, 109, 133], "slsqp": [10, 126, 127, 129], "evolvedoperatoransatz": 10, "construct": [10, 13, 15, 22, 24, 29, 31, 32, 40, 42, 44, 45, 49, 56, 58, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 126, 129, 131, 132, 133, 134, 135], "_": [10, 64, 70, 74, 130, 134], "compute_minimum_eigenvalu": [10, 34, 38, 45, 47, 49, 58, 114, 126, 127, 128, 130, 135], "attribut": [10, 11, 13, 15, 16, 18, 20, 21, 22, 23, 24, 25, 27, 29, 30, 32, 33, 35, 36, 37, 38, 39, 40, 43, 44, 45, 48, 49, 50, 53, 55, 56, 57, 58, 59, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 118, 119, 120, 131, 136], "initi": [10, 28, 31, 40, 45, 46, 49, 51, 52, 53, 55, 56, 58, 60, 61, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 120, 131, 133, 134, 135, 136], "onc": [10, 12, 40, 45, 49, 56, 58, 100, 111, 127, 128], "absolut": [10, 26, 44, 99], "smaller": [10, 15, 24, 32, 36, 89, 93, 106, 109, 126, 136], "converg": [10, 82, 83, 86, 87, 92, 93, 96, 99, 104, 106, 107, 109, 112, 127, 128, 129, 134], "termin": [10, 11, 82, 86, 99, 104, 106, 107, 109, 112], "less": [10, 22, 86, 93, 109, 120, 133], "next": [10, 40, 84, 94, 106, 109, 111, 116, 126, 127, 129, 133, 134, 135], "final": [10, 11, 12, 22, 32, 36, 45, 47, 48, 49, 50, 87, 92, 97, 102, 105, 114, 127, 128, 129, 132, 133, 136], "did": 10, "signific": 10, "improv": [10, 15, 49, 82, 86, 96, 106, 108, 109, 118], "consid": [10, 26, 38, 93, 114, 121, 122, 123, 124, 131, 134, 136], "maximum": [10, 11, 15, 16, 24, 25, 32, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 104, 105, 106, 107, 108, 109, 112, 114, 127, 130], "loop": [10, 93, 104, 111, 136], "float": [10, 15, 21, 22, 24, 26, 27, 29, 31, 32, 40, 41, 43, 44, 45, 48, 49, 50, 53, 56, 58, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 125], "5": [10, 29, 40, 45, 93, 109, 114, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "initial_point": [10, 45, 49, 56, 58, 92, 93, 106, 109, 111, 127], "aux_oper": [10, 19, 34, 36, 38, 40, 45, 47, 49, 53, 55, 56, 58, 60, 61, 133, 134, 136], "baseoper": [10, 19, 34, 36, 38, 40, 44, 45, 47, 49, 53, 56, 58, 63, 67, 69, 72, 77, 79, 121, 123, 125], "listordict": [10, 19, 34, 36, 38, 45, 47, 49, 53, 54, 56, 58, 62], "auxiliari": [10, 19, 34, 36, 38, 40, 45, 47, 49, 53, 55, 56, 58, 131, 134], "typeerror": [10, 11, 16, 18, 20, 23, 24, 25, 26, 27, 30, 33, 35, 37, 39, 41, 43, 48, 50, 54, 57, 59, 62, 67, 68, 102], "other": [10, 24, 43, 44, 93, 99, 103, 111, 126, 127, 132, 135, 136], "lie": [10, 40, 55, 136], "below": [10, 15, 92, 120, 126, 128, 130, 132], "adaptvqeresult": 10, "vqeresult": [10, 11, 58], "runtim": [10, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 114, 117, 118, 119, 126, 128], "criterion": [10, 11, 21, 36, 38, 83, 92, 107, 109, 112], "classmethod": [10, 19, 34, 36, 38, 44, 45, 47, 49, 55, 56, 58], "supports_aux_oper": [10, 19, 34, 36, 38, 45, 47, 49, 55, 56, 58], "whether": [10, 12, 13, 15, 19, 21, 22, 25, 32, 34, 36, 38, 45, 47, 49, 55, 56, 58, 64, 70, 77, 78, 106, 109, 111, 120, 131, 134], "otherwis": [10, 13, 19, 21, 34, 36, 38, 45, 47, 49, 55, 56, 58, 93, 111, 131], "ignor": [10, 19, 34, 36, 38, 45, 47, 49, 56, 58, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 131], "true": [10, 13, 15, 19, 21, 22, 24, 25, 27, 32, 34, 36, 38, 40, 43, 45, 47, 49, 55, 56, 58, 64, 70, 78, 82, 86, 87, 92, 93, 99, 104, 106, 107, 109, 111, 112, 118, 130, 131, 132, 136], "fals": [10, 13, 15, 19, 21, 22, 24, 25, 27, 29, 31, 32, 34, 36, 38, 40, 43, 45, 47, 49, 55, 56, 58, 82, 86, 87, 92, 93, 99, 100, 104, 106, 107, 108, 109, 111, 112, 118, 120, 131, 132], "bool": [10, 12, 13, 15, 19, 21, 22, 24, 27, 29, 31, 32, 34, 36, 38, 40, 43, 45, 47, 49, 55, 56, 58, 64, 70, 78, 82, 86, 87, 92, 93, 99, 100, 104, 106, 107, 108, 109, 111, 112, 118, 120, 130], "aux_operators_evalu": [11, 20, 35, 37, 39, 48, 50, 57, 59, 126, 127], "aux": [11, 20, 35, 37, 39, 48, 50, 57, 59], "fact": [11, 20, 35, 37, 39, 41, 54, 57, 59, 62, 99], "varianc": [11, 35, 39, 59, 118], "shot": [11, 16, 18, 23, 30, 33, 35, 39, 43, 59, 126, 128, 136], "cost_function_ev": [11, 50, 57, 59, 126, 127], "cost": [11, 50, 56, 57, 59, 126, 127, 129], "eigenvalue_histori": 11, "histori": 11, "length": [11, 45, 49, 56, 58, 83, 92, 93, 129, 135], "match": [11, 45, 49, 56, 58, 127, 128, 129, 130], "final_max_gradi": 11, "num_iter": [11, 31], "optimal_circuit": [11, 50, 57, 59, 126, 127], "along": [11, 15, 50, 57, 59, 104, 129], "retriev": [11, 27, 50, 57, 59], "optimal_paramet": [11, 50, 57, 59, 126, 127], "optimal_point": [11, 50, 57, 59, 126, 127], "optimal_valu": [11, 50, 57, 59, 126, 127, 135], "optimizer_ev": [11, 50, 59, 126, 127], "optimizer_result": [11, 50, 57, 59, 126, 127], "optimizer_tim": [11, 50, 57, 59, 126, 127], "termination_criterion": 11, "combin": [11, 16, 18, 20, 23, 25, 27, 30, 33, 35, 37, 39, 41, 43, 48, 50, 54, 57, 59, 62, 69, 70, 71, 96, 102, 107, 118, 136], "receiv": [11, 16, 18, 20, 23, 25, 27, 30, 33, 35, 37, 39, 41, 43, 48, 50, 54, 57, 59, 62, 102], "param": [11, 16, 18, 20, 23, 25, 27, 30, 33, 35, 37, 39, 41, 43, 48, 50, 54, 57, 59, 62, 83, 102, 129, 135], "arg": [12, 49, 58, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 130, 133], "kwarg": [12, 13, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114], "primitivejob": 12, "beyond": [12, 82, 120, 128], "inherit": [12, 45], "submit": [12, 136], "document": [12, 126, 128], "info": [12, 44], "callabl": [12, 13, 21, 36, 38, 40, 45, 49, 56, 58, 60, 61, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 116, 120, 131, 135], "cancel": 12, "successfulli": 12, "in_final_st": 12, "job_id": 12, "identifi": [12, 15, 97], "str": [12, 13, 15, 21, 27, 29, 32, 43, 45, 49, 54, 56, 58, 60, 61, 66, 75, 76, 81, 82, 83, 92, 110, 119], "resultt": 12, "statu": 12, "jobstatu": 12, "v1": 12, "subclass": 12, "jobv1": 12, "defin": [12, 40, 53, 55, 56, 60, 61, 64, 74, 77, 98, 117, 118, 127, 128, 129, 130, 131, 133, 134, 135, 136], "v2": [12, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136], "privat": 12, "_submit": 12, "maintain": 12, "mani": [12, 26, 42, 43, 99, 109, 130], "place": 12, "site": [12, 40, 109, 136], "empti": [12, 36, 38, 78, 101, 127, 136], "again": [12, 127, 128, 134, 136], "current": [12, 13, 40, 55, 56, 82, 83, 93, 94, 103, 111, 116, 127, 128, 135], "min": [12, 105], "44": [12, 133], "oracl": [13, 15, 16, 18, 23, 24, 25, 30, 32, 33, 130, 132], "state_prepar": [13, 15, 21, 26, 31, 32, 42, 131], "grover_oper": [13, 15, 21, 131], "post_process": [13, 16, 18, 21, 23, 25, 30, 33], "objective_qubit": [13, 15, 21], "is_good_st": [13, 15, 21, 24, 131, 132], "amplitud": [13, 15, 16, 17, 18, 21, 22, 23, 24, 29, 30, 32, 33, 42, 126], "grover": [13, 15, 16, 18, 21, 22, 23, 25, 29, 30, 32, 33], "hold": [13, 21, 54, 101, 111, 131], "post": [13, 15, 16, 18, 21, 23, 25, 30, 32, 33, 131], "bitstr": [13, 21, 25, 42, 48, 50, 131], "quantumcircuit": [13, 15, 21, 22, 24, 26, 29, 31, 32, 40, 41, 42, 45, 49, 53, 54, 55, 56, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 106, 117, 118, 121, 123, 125, 126, 131, 133, 135, 136], "statevector": [13, 15, 16, 18, 23, 26, 30, 32, 33, 53, 54, 77, 78, 126, 128, 131, 133, 134, 136], "reflect": [13, 24, 131], "bad": 13, "prepar": [13, 17, 21, 26, 31, 40, 42, 49, 58, 106, 117, 118, 133, 134, 135, 136], "mathcal": [13, 21, 24, 29, 106, 131], "hadamard": [13, 131], "gate": [13, 77, 78, 83, 128, 131, 135, 136], "q": [13, 21, 22, 24, 29, 32, 131, 135], "phase": [13, 15, 21, 22, 24, 26, 27, 29, 31, 32, 42, 43, 44, 64, 70, 78, 109, 131], "map": [13, 21, 26, 27, 44, 53, 60, 61, 119, 128, 131], "indic": [13, 15, 21, 22, 24, 29, 31, 32, 36, 38, 56, 60, 61, 93, 109, 111, 129, 134, 136], "qubit": [13, 15, 16, 17, 19, 21, 22, 24, 26, 31, 32, 34, 36, 38, 42, 43, 45, 47, 49, 56, 58, 77, 78, 118, 127, 128, 129, 131, 133, 135, 136], "measur": [13, 15, 16, 21, 22, 24, 25, 26, 29, 31, 32, 42, 44, 48, 49, 50, 109, 128, 131, 132, 135, 136], "repres": [13, 21, 26, 31, 36, 40, 42, 43, 44, 48, 50, 103, 116, 131, 132, 134, 135, 136], "good": [13, 15, 21, 24, 32, 33, 114, 127, 131, 133, 136], "By": [13, 77, 78, 87, 106, 109, 127, 128, 131, 136], "evaluate_bitstr": [13, 132], "phaseoracl": [13, 131, 132], "try": [13, 21, 126, 130, 131, 132, 133], "integ": [13, 16, 21, 24, 32, 45, 51, 52, 56, 92, 106, 109, 131], "neither": [13, 21, 109], "nor": [13, 21, 109], "abc": [14, 17, 19, 28, 34, 46, 47, 63, 64, 65, 74, 84, 101, 113, 117, 122, 124, 125], "abstract": [14, 17, 19, 28, 34, 46, 47, 101, 111, 117, 122, 125, 135], "amplifi": [14, 24, 131, 132], "amplification_problem": [14, 24], "amplificationproblem": [14, 24, 25, 131, 132], "amplificationresult": 14, "queri": [14, 16, 18, 23, 24, 30, 33], "top_measur": [14, 24, 25, 131], "amplitudeamplifierresult": [14, 25], "num_eval_qubit": 15, "phase_estimation_circuit": 15, "iqft": 15, "qae": [15, 22, 29, 32], "canon": [15, 43, 111], "m": [15, 24, 26, 29, 32, 45, 72, 73, 83, 100, 118, 131, 133, 135], "tild": 15, "restrict": [15, 44, 109], "grid": [15, 32, 136], "sin": [15, 136], "y": [15, 32, 69, 70, 71, 72, 73, 117, 118, 120, 130, 132, 135, 136], "produc": [15, 128], "finer": 15, "sampl": [15, 16, 24, 25, 26, 31, 42, 45, 47, 48, 49, 50, 65, 68, 71, 73, 80, 81, 92, 106, 109, 114, 126, 128, 131], "therefor": [15, 106, 109, 136], "accuraci": [15, 31, 87, 106, 112, 134, 136], "increas": [15, 24, 44, 83, 106, 109, 114, 118], "likelihood": [15, 32, 33], "constraint": [15, 85, 91, 96, 97, 99, 104, 107], "circumv": 15, "appendix": 15, "estimationproblem": [15, 17, 22, 29, 32], "encod": [15, 21, 24, 136], "brassard": [15, 22, 24, 29, 32, 131], "hoyer": [15, 24, 29, 32, 131], "p": [15, 24, 29, 32, 40, 41, 45, 49, 72, 73, 105, 114, 131, 132, 133, 135], "mosca": [15, 24, 29, 32, 131], "tapp": [15, 24, 29, 32, 131], "2000": [15, 22, 24, 29, 32, 79, 80, 131], "arxiv": [15, 22, 24, 26, 29, 31, 32, 45, 49, 58, 69, 70, 71, 77, 78, 82, 83, 92, 100, 106, 109, 118, 131], "ph": [15, 22, 24, 29, 31, 32, 118, 131], "0005055": [15, 22, 24, 29, 32, 131], "grinko": [15, 22, 29], "d": [15, 22, 24, 29, 45, 106, 118, 134, 135], "gacon": [15, 29, 77, 106], "j": [15, 29, 45, 63, 65, 67, 68, 69, 71, 72, 73, 77, 79, 80, 82, 106, 109, 118, 130, 134, 135, 136], "zoufal": [15, 29], "c": [15, 29, 72, 73, 79, 80, 106, 109, 112, 131, 132, 136], "woerner": [15, 29, 45, 49, 131], "2019": [15, 22, 29, 32, 83, 100, 118], "1912": [15, 22, 29, 131], "05559": [15, 22, 29], "phaseestim": [15, 26, 27, 31, 43], "invers": [15, 44, 106, 109, 136], "fourier": 15, "transform": [15, 131], "compon": [15, 92, 105, 106, 109, 114, 131, 132], "qft": 15, "basesampl": [15, 22, 24, 26, 29, 31, 32, 42, 45, 49, 65, 68, 71, 73, 80, 106, 118], "valueerror": [15, 24, 26, 27, 29, 31, 32, 40, 44, 51, 52, 53, 55, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 77, 78, 79, 80, 92, 93, 109, 118], "static": [15, 24, 32, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 131], "compute_confidence_interv": [15, 32], "alpha": [15, 29, 30, 32, 45, 49, 106, 109, 114, 136], "kind": [15, 32], "likelihood_ratio": [15, 32], "exact": [15, 32, 106, 109, 126, 127, 128, 129, 133, 136], "confid": [15, 16, 18, 22, 23, 29, 30, 32, 33], "interv": [15, 16, 18, 21, 22, 23, 26, 29, 30, 32, 33, 40, 44, 92], "amplitudeestimationresult": 15, "level": [15, 29, 30, 32, 63, 72, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 126, 135], "fisher": [15, 32, 33, 74, 106], "observed_fish": [15, 32], "come": [15, 32, 93, 126, 127], "notimplementederror": [15, 32, 40], "compute_ml": [15, 32], "apply_post_process": [15, 32], "mle": [15, 16, 32], "construct_circuit": [15, 22, 24, 29, 31, 32, 42], "estimation_problem": [15, 17, 22, 29, 32], "boolean": [15, 22, 24, 29, 31, 32, 36, 38], "flag": [15, 22, 24, 29, 31, 32], "evaluate_measur": 15, "circuit_result": [15, 16, 18, 23, 25, 30, 32, 33, 43, 132], "06": [15, 82, 83, 92, 107, 133], "best": [15, 26, 44, 48, 50, 93, 111, 114, 133], "dict": [15, 27, 32, 43, 44, 45, 49, 53, 54, 56, 58, 66, 75, 76, 78, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114], "either": [15, 40, 45, 49, 56, 58, 63, 64, 69, 70, 72, 83, 93, 98, 106, 109, 120, 130, 135], "count": [15, 16, 18, 19, 23, 27, 30, 32, 33, 34, 36, 38, 42, 43, 45, 49, 56, 58, 127, 128, 129, 136], "quasi": [15, 48, 50, 65, 68, 71, 73, 80, 97, 130, 135], "discard": 15, "order": [15, 24, 26, 40, 44, 55, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 82, 93, 106, 109, 114, 117, 118, 126, 129, 132, 134, 136], "amplitudeestimatorresult": [16, 17, 23, 30, 33], "amplitudeestim": [16, 21, 22, 29, 32], "confidence_interv": [16, 18, 23, 30, 33], "95": [16, 18, 23, 30, 33], "confidence_interval_process": [16, 18, 23, 30, 33], "estimation_process": [16, 18, 23, 30, 33], "after": [16, 18, 23, 24, 30, 33, 44, 55, 62, 82, 92, 106, 108, 109, 112, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136], "max_prob": [16, 25], "mle_process": 16, "num_evaluation_qubit": [16, 26, 42, 43], "num_oracle_queri": [16, 18, 23, 30, 33], "samples_process": 16, "relev": [17, 60, 61, 111, 136], "compute_eigenvalu": [19, 36, 56, 129], "dipol": [19, 34, 36, 38, 56, 58], "total": [19, 23, 34, 36, 38, 40, 53, 56, 58, 102, 133], "particl": [19, 34, 36, 38, 56, 58], "eigensolverresult": [19, 37, 57], "metadata": [20, 37, 45, 48, 49, 50, 56, 57, 58, 66, 75, 76, 81, 119], "That": [21, 116, 131], "leq": [21, 36, 97, 109], "target": [21, 24, 29, 30, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 134, 135], "rangl": [21, 22, 24, 26, 28, 29, 40, 42, 46, 49, 51, 52, 56, 58, 64, 70, 74, 106, 117, 118, 131, 133, 134, 135, 136], "has_good_st": 21, "rescal": [21, 22, 82], "scaling_factor": 21, "scale": [21, 26, 27, 29, 44, 77, 78, 109, 112, 127], "factor": [21, 26, 29, 44, 82, 112, 131, 134], "delta": [22, 128, 133, 134], "maxit": [22, 82, 83, 85, 86, 87, 92, 93, 95, 97, 99, 100, 104, 106, 107, 108, 109, 111, 112, 114, 126, 127, 128, 133, 135], "faster": [22, 23, 93, 105, 120, 127], "fae": 22, "variant": [22, 82, 89, 90, 121, 122, 123, 124], "qpe": [22, 26, 31, 32, 42, 43], "search": [22, 24, 32, 33, 38, 56, 88, 89, 92, 93, 95, 99, 111, 114, 131, 132], "similar": [22, 127, 134, 135], "propos": [22, 29, 96, 106, 109, 131], "complex": [22, 36, 41, 49, 53, 54, 62, 63, 64, 67, 69, 70, 72, 77, 78, 79, 114, 120, 127, 131, 135], "k": [22, 24, 29, 31, 36, 49, 56, 83, 97, 100, 105, 106, 109, 118, 120, 129, 130, 131, 133, 135, 136], "nakaji": 22, "2020": [22, 77, 78, 79, 80], "2002": 22, "02417": 22, "et": [22, 24, 31, 45, 58, 69, 70, 71, 106, 109, 131, 133, 134, 135], "al": [22, 24, 31, 45, 58, 69, 70, 71, 106, 109, 131, 133, 134, 135], "outsid": 22, "maxim": [22, 40, 106, 109], "power": [22, 24, 25, 29, 30, 32, 33, 93, 106, 109, 131], "x": [22, 24, 45, 49, 55, 58, 60, 61, 67, 68, 69, 70, 71, 72, 73, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 117, 118, 128, 130, 131, 132, 133, 135, 136], "associ": [22, 29, 132], "fasteramplitudeestimationresult": 22, "num_first_state_step": 23, "step": [23, 40, 41, 45, 49, 52, 55, 56, 57, 58, 62, 82, 83, 86, 92, 93, 94, 97, 103, 106, 107, 109, 111, 112, 114, 120, 127, 129, 133, 134, 136], "num_step": 23, "success_prob": 23, "success": [23, 56, 86, 129, 131, 136], "theta_interv": [23, 30], "angl": [23, 30, 31, 33, 136], "growth_rat": 24, "sample_from_iter": [24, 131], "amplitudeamplifi": 24, "theori": [24, 131], "behind": 24, "textbook": [24, 131], "concret": 24, "known": [24, 45, 87, 99, 131], "through": [24, 77, 78, 126, 127, 128, 132, 133], "unstructur": [24, 131], "collect": 24, "record": [24, 42], "particular": [24, 56, 117, 118, 127, 132], "quadrat": [24, 78, 85, 109], "speedup": [24, 134], "compar": [24, 77, 78, 93, 106, 114, 127, 128, 129, 130, 134, 136], "n": [24, 32, 36, 72, 73, 92, 93, 97, 105, 109, 118, 120, 130, 131, 133, 135, 136], "x_1": [24, 133], "x_2": [24, 133], "ldot": [24, 136], "x_n": 24, "f": [24, 45, 67, 68, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 127, 128, 129, 130, 131, 132, 136], "rightarrow": 24, "goal": [24, 97, 107, 112, 130], "becaus": [24, 26, 44], "guarante": [24, 87, 96, 136], "databas": [24, 131], "On": [24, 82, 136], "sort": 24, "binari": [24, 26, 42, 130, 131, 132], "mathbb": [24, 135], "o": [24, 26, 32, 63, 69, 72, 106, 118, 132, 133, 135, 136], "log": [24, 127], "worst": 24, "prior": [24, 127], "content": 24, "linear": [24, 60, 61, 69, 70, 71, 86, 87, 97, 121, 123, 130, 134, 136], "sqrt": [24, 112, 131, 134], "action": 24, "_f": 24, "flip": [24, 131], "hit": 24, "s_f": [24, 131], "unimport": 24, "black": 24, "box": 24, "form": [24, 40, 55, 97, 121, 123, 125, 126, 128, 132, 133, 135, 136], "otim": [24, 118, 131], "_0": 24, "three": [24, 56, 78, 100, 128, 129, 131, 132], "operand": 24, "summar": 24, "diffus": [24, 131], "equal": [24, 44, 55, 96, 107], "superposit": [24, 131], "veri": [24, 26, 77, 78, 114, 127, 133, 134, 136], "high": [24, 126, 132], "optimal_num_iter": [24, 131], "unknown": [24, 109], "tri": [24, 25], "good_stat": 24, "modifi": [24, 56, 114, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "anoth": [24, 44, 101, 111, 130, 136], "dagger": [24, 106, 131], "groveroper": [24, 131], "l": [24, 42, 49, 58, 89, 90, 97, 130, 131, 134, 136], "1996": [24, 131], "fast": [24, 77, 78, 108, 131, 133], "mechan": [24, 131], "9605043": [24, 131], "chuang": [24, 42], "nielsen": [24, 42], "cambridg": [24, 42], "univers": [24, 42], "press": [24, 42], "chapter": 24, "6": [24, 93, 108, 114, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "yield": [24, 63, 72, 93, 106, 109, 116], "reach": [24, 99, 104, 105, 108], "section": [24, 109, 127, 131, 135], "4": [24, 45, 74, 92, 106, 109, 114, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "larger": [24, 26, 36, 43, 44, 55, 83, 128, 136], "boyer": [24, 131], "tight": [24, 131], "org": [24, 31, 83, 86, 87, 92, 97, 99, 100, 104, 105, 107, 109, 110, 112, 114, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "ab": [24, 83, 100, 127, 130, 131], "9605034": [24, 131], "groverresult": [24, 131], "fail": [24, 42, 93, 111, 121, 123, 125], "repeat": [24, 111], "item": [24, 136], "num_solut": [24, 131], "succe": 24, "assign": [25, 128, 130, 132], "output": [25, 29, 42, 97, 105, 106, 108, 131, 135], "oracle_evalu": [25, 131], "hermitian": [26, 44, 135], "nearli": [26, 27], "wherea": 26, "obtain": [26, 27, 44, 48, 50, 55, 62, 114, 128, 131, 132, 134], "exponenti": [26, 32, 44, 77, 78, 136], "prevent": [26, 106, 109], "wrap": [26, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 116, 131], "around": [26, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 134], "lambda_j": 26, "exp": [26, 28, 40, 42, 46, 51, 52, 136], "b": [26, 49, 58, 60, 61, 97, 130, 131, 135, 136], "psi": [26, 28, 40, 42, 46, 49, 51, 52, 56, 58, 64, 70, 74, 117, 118, 134, 135, 136], "sum_j": [26, 42, 136], "c_j": [26, 42], "suffici": [26, 32, 92], "larg": [26, 107, 109, 127, 130], "posit": [26, 51, 52, 53, 67, 68, 79, 80, 86, 106, 109, 127], "lambda": [26, 133], "neg": [26, 32, 60, 61, 93, 132], "correspond": [26, 27, 39, 42, 43, 44, 56, 58, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 92, 111, 117, 118, 120, 127, 130, 131, 132, 134, 136], "pauli": [26, 40, 44, 55, 83, 106, 114, 126, 128, 130, 134, 135, 136], "sum": [26, 44, 56, 126, 130, 135, 136], "coeffici": [26, 27, 44, 56, 83, 106, 109, 136], "reliabl": 26, "recov": [26, 27, 44], "endpoint": 26, "awar": 26, "degener": 26, "z": [26, 44, 55, 69, 70, 71, 72, 73, 106, 109, 114, 132, 135, 136], "pm": [26, 135], "togeth": [26, 40, 126, 132], "phaseestimationscal": [26, 27], "shift": [26, 27, 40, 44, 72, 73, 130, 133], "note": [26, 49, 51, 52, 58, 93, 98, 100, 106, 107, 109, 116, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136], "although": [26, 44], "speak": 26, "evolv": [26, 28, 40, 41, 45, 46, 51, 52, 53, 54, 55, 60, 61, 62, 88, 126, 133, 134, 136], "actual": [26, 44, 126, 132], "role": 26, "plai": 26, "extract": [26, 128, 136], "few": [26, 89, 133], "idea": 26, "found": [26, 32, 56, 93, 111, 114, 126, 127, 129, 131, 133, 136], "ref": [26, 40], "multipl": [26, 105, 109], "small": [26, 44, 77, 78, 93, 106, 109, 114, 127, 131, 136], "noisi": [26, 82, 108, 126, 128], "experi": [26, 114, 127], "brien": 26, "tarasinski": 26, "terhal": 26, "1809": 26, "09697": 26, "bit": [26, 27, 42, 43, 44, 131, 132, 133], "eigenphas": [26, 31, 42], "omit": [26, 31, 42], "basi": [26, 31, 42, 45, 49, 128, 136], "evolutionsynthesi": [26, 40], "synthesi": [26, 40, 136], "upper": [26, 44, 56, 92, 112, 127, 129, 134, 136], "tighter": 26, "higher": [26, 56, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 95, 117, 118, 129, 136], "resolut": 26, "hamiltonianphaseestimationresult": 26, "diagnost": 26, "phase_estimation_result": 27, "phase_estimation_scal": 27, "id_coeffici": [27, 44], "store": [27, 43, 82, 103, 111, 119, 127, 129, 133, 134, 136], "hamiltonianphaseestim": 27, "phaseestimatorresult": [27, 43], "keyword": [27, 127], "translat": 27, "phi": [27, 44, 106, 117, 118, 133], "meant": 27, "instanti": [27, 43, 44, 126, 127, 128, 129, 134, 135], "phaseestimationresult": [27, 42], "give": [27, 56, 126, 128, 129, 135], "automat": [27, 36, 40, 60, 61, 79, 80, 106, 109, 130, 131], "most_likely_eigenvalu": 27, "most_likely_phas": 27, "filter_phas": [27, 43], "cutoff": [27, 43], "as_float": [27, 43], "filter": [27, 36, 38, 43, 95], "weight": [27, 43, 44, 130, 135, 136], "keep": [27, 36, 40, 43, 77, 78, 129, 133, 136], "tau": [28, 51], "definit": [28, 46, 51, 52, 86, 106, 109, 130], "timeevolutionresult": [28, 40, 41, 46, 51, 52, 55, 62], "epsilon_target": [29, 30], "confint_method": 29, "beta": [29, 45, 56, 129], "min_ratio": 29, "iqa": 29, "least": [29, 107], "epsilon": [29, 67, 68, 79, 80, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 127, 135, 136], "carefulli": 29, "linearli": [29, 77, 96], "up": [29, 36, 60, 61, 106, 109, 127, 129, 133, 134, 136], "logarithm": 29, "precis": [29, 51, 52, 87, 107, 112, 133], "statist": 29, "chernoff": 29, "clopper": 29, "pearson": 29, "ratio": [29, 30], "k_": [29, 30], "k_i": 29, "findnextk": 29, "half": [29, 30], "width": [29, 30], "iterativeamplitudeestimationresult": 29, "iterativeamplitudeestim": 30, "epsilon_estim": 30, "epsilon_estimated_process": 30, "estimate_interv": 30, "dobsicek": 31, "2006": 31, "arbitrari": [31, 45, 96, 132], "benchmark": 31, "0610214": 31, "round": [31, 60, 61, 92, 136], "greater": [31, 44], "omega": [31, 135], "kth": [31, 56], "fig": [31, 136], "pdf": [31, 92], "idx": 31, "feedback": 31, "per": [31, 33, 56, 92, 97, 101, 106, 109, 111, 114, 131], "iterativephaseestimationresult": 31, "evaluation_schedul": [32, 33], "comparison": [32, 95, 129], "sole": 32, "why": [32, 127], "name": [32, 49, 58, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 132], "suzuki": [32, 55, 136], "uno": 32, "raymond": 32, "tanaka": 32, "onodera": 32, "yamamoto": 32, "1904": [32, 82], "10246": 32, "non": [32, 43, 53, 60, 61, 82, 85, 96, 97, 99], "schedul": [32, 33, 83], "highest": [32, 43], "minu": [32, 41, 44], "brute": [32, 130], "second": [32, 40, 42, 64, 70, 97, 99, 106, 109, 117, 118, 130, 136], "shorthand": 32, "notat": [32, 132], "fi": 32, "lr": [32, 82], "oi": 32, "maximumlikelihoodamplitudeestimationresult": 32, "theoret": 32, "hasn": 32, "num_state_qubit": 32, "return_count": 32, "stabl": [32, 93, 106, 108, 109, 111], "w": [32, 118, 121, 123, 125, 130, 132], "maximumlikelihoodamplitudeestim": 33, "fisher_inform": 33, "good_count": 33, "percentag": [33, 114], "theta": [33, 40, 49, 56, 58, 93, 106, 131, 133, 134, 135], "minimumeigensolverresult": [34, 39, 59], "filter_criterion": [36, 38], "squar": [36, 56, 107], "matrix": [36, 97, 106, 109, 130, 135, 136], "dimens": [36, 92, 93, 106, 109], "convert": [36, 44, 107, 130, 131, 136], "spmatrix": 36, "costli": [36, 136], "memori": [36, 82, 97, 105], "size": [36, 67, 68, 77, 78, 79, 80, 83, 86, 87, 92, 93, 97, 107, 111, 112, 114, 120, 130, 136], "mostli": 36, "filtertyp": [36, 38], "feasibl": [36, 38, 45], "signatur": [36, 38, 49, 58, 120], "aux_valu": [36, 38], "satisfi": [36, 43, 100, 126, 130, 131, 132], "fewer": [36, 44], "even": [36, 38, 96, 126, 131], "request": [36, 108], "numpyeigensolverresult": 36, "smallest": [38, 44, 126], "numpyminimumeigensolverresult": 38, "initial_paramet": [40, 60, 61, 133], "num_timestep": [40, 51, 52, 55, 60, 61, 133, 134, 136], "use_parameter_shift": 40, "initial_guess": 40, "realtimeevolv": [40, 52, 55, 61], "dynam": [40, 121, 122, 123, 124, 134, 136], "vqd": [40, 41, 57, 127, 133], "timestep": [40, 51, 52, 54, 55, 60, 61, 62, 133, 136], "formula": [40, 55, 135], "parameter": [40, 45, 48, 49, 50, 56, 58, 64, 70, 74, 77, 78, 83, 106, 126, 133, 135], "ndarrai": [40, 41, 43, 45, 49, 54, 56, 58, 60, 61, 62, 66, 75, 76, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 116, 120, 121, 123, 125], "union": [40, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 79, 80, 118], "achiev": [40, 60, 61, 106, 130], "approxim": [40, 42, 45, 48, 50, 60, 61, 79, 80, 85, 86, 87, 92, 93, 95, 97, 106, 107, 109, 112, 120, 131, 135, 136], "01": [40, 60, 61, 92, 93, 127, 131, 133, 134, 135, 136], "rule": [40, 72, 73, 88, 96, 121, 123, 125, 133], "loss": [40, 106, 109, 126, 133], "snippet": 40, "track": [40, 77, 78, 128, 133, 136], "magnet": [40, 109, 133, 134], "time_evolv": [40, 60, 61, 134], "l_bfgs_b": [40, 105, 127, 133], "ix": [40, 134, 136], "xi": [40, 134, 136], "num_paramet": [40, 106, 109, 133], "setup": [40, 106], "100": [40, 93, 97, 105, 106, 107, 109, 111, 112, 114, 126, 127, 133, 136], "stefano": 40, "barison": [40, 133], "filippo": 40, "vicentini": 40, "giusepp": 40, "carleo": 40, "2021": [40, 133], "512": [40, 133], "basestatefidel": [40, 56, 118], "baseestim": [40, 55, 56, 58, 60, 61, 63, 64, 67, 69, 70, 72, 79], "overlap": [40, 56, 117, 118, 129, 133, 134], "protocol": [40, 45, 49, 58, 98], "get_loss": 40, "close": [40, 42, 44, 56, 82, 116, 126, 127, 128, 132, 134], "decomposit": [40, 136], "finit": [40, 63, 67, 68, 72, 82, 93, 106, 109, 112, 120, 127, 134], "guess": [40, 86, 106, 109, 127], "afterward": 40, "previou": [40, 56, 83, 86, 93, 114, 127, 128, 129, 134], "vector": [40, 79, 80, 92, 97, 104, 105, 120, 130, 136], "dt": [40, 134, 136], "current_paramet": 40, "infidel": 40, "last": [40, 94, 97, 105, 106, 109, 116, 131, 136], "evolved_st": [41, 54, 55, 62, 133, 136], "aux_ops_evalu": [41, 54, 62, 133], "estimated_error": [41, 133], "deviat": [41, 54, 62, 106, 109], "dure": [41, 56, 103, 116, 128, 136], "integr": [41, 120, 133], "sequenc": [41, 56, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 86, 97, 117, 118, 119, 120, 121, 123, 125, 136], "overal": [41, 48], "product": [41, 55, 133], "multi": 42, "regist": [42, 43, 44], "u": [42, 106, 133, 134, 135, 136], "written": [42, 100, 132, 133, 135, 136], "phi_j": 42, "leav": [42, 136], "ideal": [42, 107, 133], "practic": [42, 136], "represent": [42, 131, 135, 136], "exactli": [42, 43, 44, 129, 136], "latter": [42, 126, 128], "spread": 42, "decreas": [42, 44, 92, 128], "distanc": [42, 121, 123, 126, 127, 134, 135], "constructor": 42, "estimate_from_pe_circuit": 42, "embed": [42, 114], "backend": [42, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 117, 118, 126, 128, 131, 132, 133], "frequenc": [42, 43, 97, 105], "michael": 42, "isaac": 42, "2011": [42, 78], "10th": 42, "anniversari": 42, "ed": 42, "york": 42, "ny": 42, "usa": 42, "sub": [42, 134], "possibli": 42, "pe_circuit": 42, "upon": [43, 95], "readout": [43, 44], "hardwar": [43, 69, 70, 71, 72, 73, 83, 105, 109, 126, 136], "inspect": [43, 127], "troubleshoot": 43, "arrai": [43, 45, 54, 56, 62, 92, 93, 109, 116, 126, 127, 130, 133, 134, 135, 136], "assum": [43, 44, 53, 131, 136], "noiseless": [43, 128], "concentr": 43, "uninterest": 43, "ensur": [44, 56, 106, 109, 119, 129], "eigenvector": 44, "Then": [44, 106, 128, 131, 134, 135], "discret": 44, "closer": [44, 128], "And": [44, 129, 132, 133, 136], "artifact": 44, "reduc": [44, 133, 134], "interest": [44, 130], "rel": [44, 104, 112, 128], "multipli": [44, 92, 106, 109, 131, 136], "scale_phas": 44, "unscal": 44, "from_pauli_sum": 44, "pauli_sum": 44, "summedop": 44, "pauliop": 44, "avail": [44, 95, 128, 129, 131, 133, 135], "recal": 44, "furthermor": [44, 82], "But": [44, 126, 130, 131, 133], "raw": [44, 119], "complement": 44, "describ": [44, 77, 78, 92, 136], "descript": 44, "unchang": 44, "initial_st": [45, 53, 55, 60, 61, 133, 134, 136], "mixer": 45, "aggreg": [45, 49], "callback": [45, 49, 56, 58, 93, 106, 109, 114, 128, 129], "combinatori": 45, "structur": [45, 135], "configur": [45, 126, 127, 132], "fine": 45, "tune": 45, "compris": 45, "princip": 45, "dictat": [45, 132], "affect": 45, "qualiti": 45, "2p": 45, "gamma": [45, 106, 109], "anneal": [45, 136], "constrain": [45, 87, 95, 96, 131], "subspac": 45, "full": [45, 55, 83, 111, 126, 127], "hilbert": 45, "space": [45, 93, 99, 106, 109, 111, 118, 120], "energi": [45, 49, 56, 58, 63, 72, 86, 98, 114, 126, 127, 128, 129, 133, 134, 135, 136], "prepend": 45, "warm": 45, "cvar": [45, 49], "intermedi": [45, 49, 56, 58, 129, 136], "farhi": 45, "goldston": 45, "gutmann": 45, "1411": 45, "4028": 45, "hen": 45, "spedalieri": 45, "physrevappli": 45, "034007": 45, "hadfield": 45, "1709": 45, "03489": 45, "egger": 45, "marecek": 45, "2009": [45, 77], "10095": 45, "certain": [45, 49, 58, 106, 109, 136], "contrast": [48, 49, 97], "best_measur": [48, 50], "entir": [48, 50, 131], "possess": [48, 50], "samplingminimumeigensolv": 49, "hybrid": [49, 58, 100], "techniqu": [49, 56, 58, 99, 127, 128, 129, 130, 136], "h_": [49, 135], "text": [49, 97, 128, 133, 134, 135, 136], "diag": 49, "trial": [49, 56, 58, 121, 123, 126, 127], "vec": [49, 56, 58, 93], "vari": [49, 56, 58, 108, 126, 133, 134], "spsa": [49, 58, 79, 80, 106, 126, 128], "optimizerresult": [49, 58, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 126, 127], "def": [49, 58, 93, 106, 109, 111, 127, 128, 129, 130, 131, 133, 136], "my_minim": [49, 58], "fun": [49, 58, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 120], "x0": [49, 58, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114], "jac": [49, 58, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114], "abov": [49, 56, 58, 92, 108, 126, 127, 128, 130, 131, 132, 134, 135, 136], "functool": [49, 58], "partial": [49, 58, 134, 135], "bfg": [49, 58, 97, 105, 133], "objective_valu": [49, 130], "ordinari": 49, "barkoutso": 49, "nannicini": 49, "robert": 49, "tavernelli": 49, "1907": 49, "04769": 49, "variationalresult": [50, 59], "imaginarytimeevolv": [51, 60], "truncation_threshold": 53, "t_param": [53, 55], "param_value_map": 53, "system": [53, 56, 60, 61, 77, 78, 86, 109, 120, 121, 123, 126, 129, 133, 134, 135, 136], "happen": 53, "free": [53, 88, 89, 90, 91, 96, 108], "product_formula": 55, "productformula": 55, "lietrott": [55, 136], "trotter_qrt": 55, "repetit": [55, 131, 134], "everi": [55, 56, 58, 82, 97, 105], "insert": 55, "init_st": [55, 134], "unsupport": 55, "deflat": 56, "generalis": 56, "previous": [56, 129], "minimis": 56, "subcompon": 56, "denot": [56, 135], "refin": [56, 97], "orthogon": [56, 134], "particularli": [56, 127], "reason": [56, 87, 127], "believ": 56, "left": [56, 134, 135, 136], "lower": [56, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 82, 87, 92, 112, 117, 118], "similarli": [56, 134], "paper": [56, 129, 130, 133], "wave": 56, "th": [56, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 109, 133, 135], "lowest": 56, "hyper": [56, 89], "balanc": [56, 129, 130], "contribut": [56, 129], "four": 56, "hyperparamet": 56, "five": [56, 131], "vqdresult": 56, "min_": [58, 133], "langl": [58, 64, 70, 74, 106, 117, 118, 133, 134, 135, 136], "baseestimatorgradi": [58, 67, 69, 72, 77, 79, 121, 122, 123, 124, 125, 135], "peruzzo": 58, "processor": 58, "1304": 58, "3061": 58, "variational_principl": [60, 61], "ode_solv": [60, 61], "od": [60, 61, 120], "forward_euler_solv": [60, 61], "forwardeulersolv": [60, 61], "lse_solv": [60, 61, 106, 109], "imag_part_tol": [60, 61], "07": [60, 61, 93, 133], "num_instability_tol": [60, 61], "imaginaryvariationalprincipl": [60, 121], "principl": [60, 61, 121, 122, 123, 124, 125, 134], "odesolv": [60, 61, 120], "offer": [60, 61, 130, 131, 135], "accept": [60, 61, 99, 104, 106, 109], "ax": [60, 61, 136], "linalg": [60, 61, 93, 109, 111, 133, 136], "lstsq": [60, 61], "neglect": [60, 61], "amount": [60, 61, 93, 97, 135], "quantiti": [60, 61, 133], "varqteresult": [60, 61], "realvariationalprincipl": [61, 123], "realmclachlanprincipl": [61, 134], "parameter_valu": [62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80], "derivative_typ": [63, 64, 67, 69, 70, 72, 76, 77, 78, 79, 134, 135], "derivativetyp": [63, 64, 69, 70, 72, 76, 77, 78, 134, 135], "estimatorgradi": [63, 66], "prioriti": [63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 117, 118], "overrid": [63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 117, 118, 127], "imag": [63, 64, 69, 70, 72, 113, 134], "mathrm": [63, 64, 69, 70, 72, 74, 134], "\u03c8": [63, 69, 72], "\u03c9": [63, 69, 72], "\u03b8": [63, 69, 72, 126, 127], "d\u03c9": [63, 69, 72], "im": [63, 64, 69, 70, 72, 134, 135], "commonli": [63, 72], "scheme": [63, 72, 93], "invalid": [63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 77, 78, 79, 80], "algorithmjob": [63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 117, 118], "update_default_opt": [63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 118], "phase_fix": [64, 70, 78], "geometr": [64, 70, 74, 106], "tensor": [64, 70, 74, 106, 125, 136], "qgt": [64, 70, 74, 76, 78, 121, 122, 123, 124, 125, 134], "pure": [64, 70, 74, 135, 136], "ij": [64, 70, 74, 134], "partial_i": [64, 70, 74], "partial_j": [64, 70, 74], "fix": [64, 70, 78, 106, 109, 126, 128], "samplergradi": [65, 81], "central": [67, 68, 92, 135], "offset": [67, 68, 79, 80, 130, 135], "liter": [67, 68], "backward": [67, 68], "frac": [67, 68, 106, 109, 118, 134, 135], "2e": [67, 68], "basesamplergradi": [68, 71, 73, 80, 135], "emploi": [69, 70, 71, 96, 135], "schuld": [69, 70, 71, 72, 73, 83, 135], "analyt": [69, 70, 71, 72, 73, 82, 83, 93, 106, 135], "2018": [69, 70, 71, 82, 83], "1811": [69, 70, 71, 83], "11184": [69, 70, 71, 83], "supported_g": [69, 70, 71, 72, 73, 77, 78], "rx": [69, 70, 71, 72, 73, 77, 78, 133, 135], "ry": [69, 70, 71, 72, 73, 77, 78, 126, 127, 128, 129, 130, 131, 135], "rz": [69, 70, 71, 72, 73, 77, 78, 128, 129, 135, 136], "rzx": [69, 70, 71, 72, 73], "rzz": [69, 70, 71, 72, 73, 133], "ryi": [69, 70, 71, 72, 73], "rxx": [69, 70, 71, 72, 73], "cx": [69, 70, 71, 72, 73, 128, 135, 136], "cy": [69, 70, 71, 72, 73], "cz": [69, 70, 71, 72, 73, 126, 127, 128, 129, 130, 131], "ccx": [69, 70, 71], "swap": [69, 70, 71, 136], "iswap": [69, 70, 71], "sdg": [69, 70, 71], "baseqgt": [70, 74, 78, 121, 122, 123, 124, 125, 135], "bergholm": [72, 73, 83], "v": [72, 73, 118, 135, 136], "gogolin": [72, 73, 83], "izaac": [72, 73, 83], "killoran": [72, 73, 83], "doi": [72, 73, 79, 80, 114], "qfi": [75, 121, 123, 125], "revers": [77, 78, 130, 135], "sweep": [77, 78], "jone": [77, 78], "02823": 77, "plu": [77, 94], "cp": [77, 78], "crx": [77, 78], "cry": [77, 78], "crz": [77, 78], "02991": 78, "batch_siz": [79, 80, 135], "simultan": [79, 80, 83, 86, 97, 105, 106, 107, 109, 110, 112, 135], "perturb": [79, 80, 93, 106, 109, 135], "stochast": [79, 80, 82, 96, 106, 109, 114, 135], "spall": [79, 80, 109], "ieee": [79, 80, 109], "transact": [79, 80], "vol": [79, 80, 109, 136], "45": [79, 80, 133], "10": [79, 80, 82, 83, 92, 106, 108, 109, 114, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136], "pp": [79, 80, 109, 131], "1839": [79, 80], "1853": [79, 80], "oct": [79, 80, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "1109": [79, 80], "tac": [79, 80], "880982": [79, 80], "averag": [79, 80, 83, 106, 109, 118], "10000": [82, 92], "tol": [82, 83, 86, 87, 93, 99, 104, 107, 112], "001": [82, 135], "beta_1": 82, "9": [82, 127, 128, 129, 131, 133, 134, 135, 136], "beta_2": 82, "99": [82, 83, 97, 105, 133], "noise_factor": 82, "08": [82, 86, 92, 97, 107, 112, 133], "ep": [82, 86, 97, 107, 112, 136], "amsgrad": 82, "snapshot_dir": 82, "moment": 82, "littl": 82, "invari": 82, "abl": [82, 114, 128, 136], "cope": 82, "stationari": [82, 99], "spars": [82, 136], "long": 82, "past": 82, "therebi": 82, "kingma": 82, "diederik": 82, "ba": 82, "jimmi": 82, "2014": 82, "1412": 82, "6980": 82, "sashank": 82, "reddi": 82, "satyen": 82, "kale": 82, "sanjiv": 82, "kumar": 82, "09237": 82, "toler": [82, 83, 86, 93, 99, 104, 107, 112], "rate": [82, 93, 94, 106, 109, 116, 133], "save": 82, "directori": [82, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "bounds_support_level": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114], "gradient_support_level": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114], "initial_point_support_level": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114], "is_bounds_ignor": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114], "is_bounds_requir": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114], "is_bounds_support": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114], "is_gradient_ignor": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114], "is_gradient_requir": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114], "is_gradient_support": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114], "is_initial_point_ignor": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114], "is_initial_point_requir": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114], "is_initial_point_support": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114], "get_support_level": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114], "gradient_num_diff": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114], "x_center": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114], "max_evals_group": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114], "numer": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 117, 118, 135], "differenti": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 136], "parallel": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114], "func": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114], "max": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 130], "eval": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 127, 128, 129], "batch": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114], "grad": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 135], "load_param": 82, "load_dir": 82, "load": 82, "file": [82, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "adam_param": 82, "csv": 82, "scalar": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 112, 114, 120], "print_opt": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114], "save_param": 82, "append": [82, 109, 127, 128, 129, 130, 133, 136], "overwritten": [82, 106, 109], "set_max_evals_group": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114], "limit": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 118, 128, 136], "set_opt": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114], "underli": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 128], "popul": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114], "wrap_funct": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114], "implicitli": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114], "inject": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114], "wrapper": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114], "function_wrapp": [82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114], "1000": [83, 85, 87, 88, 89, 90, 91, 95, 96, 99, 104, 105, 108, 126, 127], "eta": 83, "momentum": 83, "param_tol": 83, "descent": [83, 92, 93, 97, 106, 109, 133], "epoch": 83, "mitarai": 83, "negoro": 83, "kitagawa": 83, "fujii": [83, 100], "phy": 83, "rev": 83, "98": [83, 133, 136], "032309": 83, "1803": 83, "00745": 83, "maria": 83, "vill": 83, "christian": 83, "josh": 83, "nathan": 83, "032331": 83, "previous_param": 83, "window": 83, "met": 83, "OR": 83, "bia": 83, "toward": [83, 89, 127], "norm": [83, 86, 92, 93, 94, 109, 111, 134], "x_fun": [84, 113], "x_jac": [84, 113], "ask": [84, 93, 111], "jacobian": [84, 94, 103, 107, 112, 113, 120], "BY": 85, "nonlinear": [85, 91, 96], "convex": 85, "skquant": [85, 95, 108], "opt": [85, 95, 108, 114], "pleas": [85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 99, 100, 104, 105, 107, 108, 109, 110, 112, 126, 128, 129, 131], "qat4chem": [85, 95, 108], "lbl": [85, 95, 108], "gov": [85, 95, 108], "softwar": [85, 95, 108], "missingoptionallibraryerror": [85, 88, 89, 90, 91, 95, 96, 108, 131, 132], "20": [86, 93, 111, 114, 131, 134, 135, 136], "disp": [86, 87, 92, 99, 100, 104, 107, 112], "gtol": [86, 112], "4901161193847656e": [86, 107], "scipyoptim": [86, 87, 97, 99, 100, 104, 105, 107, 112], "conjug": [86, 104, 112, 135], "matric": [86, 92, 135, 136], "symmetr": [86, 106, 109], "ones": [86, 136], "unconstrain": [86, 97, 99, 104], "doc": [86, 87, 97, 99, 100, 104, 105, 107, 110, 112, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "html": [86, 87, 93, 97, 99, 100, 104, 105, 107, 110, 111, 112], "rhobeg": 87, "trust": [87, 99], "region": 87, "max_ev": [88, 89, 90, 91, 92, 96], "nloptoptim": [88, 89, 90, 91, 96], "mutat": [88, 96], "famili": [88, 106, 111, 114], "randomli": 88, "heurist": [88, 96, 99], "nelder_mead": 88, "readthedoc": [88, 89, 90, 91, 93, 96, 111], "io": [88, 89, 90, 91, 93, 96, 111], "en": [88, 89, 90, 91, 93, 96, 111], "nlopt_algorithm": [88, 89, 90, 91, 96], "get_nlopt_optim": [88, 89, 90, 91, 96], "nloptoptimizertyp": [88, 89, 90, 91, 96], "rectangl": [89, 90], "bias": [89, 90], "determinist": 89, "systemat": [89, 106], "divis": 89, "increasingli": 89, "minima": 89, "rand": [90, 109], "tie": 90, "direct_l": 90, "evolutionari": [91, 114], "sampling_radiu": 92, "sample_size_factor": 92, "initial_step_s": 92, "min_step_s": 92, "step_size_multipli": 92, "armijo_paramet": 92, "min_gradient_norm": 92, "max_failed_rejection_sampl": 92, "50": [92, 114, 127, 135, 136], "gaussian": 92, "smooth": 92, "line": [92, 97, 105], "1905": 92, "01332": 92, "sphere": [92, 135], "behavior": [92, 105, 106, 109, 114], "displai": [92, 131, 132, 135], "radiu": 92, "nearest": [92, 136], "reduct": 92, "unsuccess": 92, "armijo": 92, "stop": [92, 93, 97, 99, 104, 105, 107, 108, 111, 112], "gradient_approxim": 92, "x_valu": 92, "sample_set_x": 92, "sample_set_i": 92, "wrt": 92, "2d": 92, "coordin": [92, 95], "row": 92, "1d": 92, "ls_optim": 92, "obj_fun": 92, "var_lb": 92, "var_ub": 92, "inf": [92, 130], "unbound": 92, "mismatch": 92, "sample_point": 92, "num_point": 92, "self": [92, 109, 132], "_option": 92, "sample_set": 92, "runtimeerror": 92, "enough": 92, "learning_r": [93, 94, 106, 109, 116, 133], "steppableoptim": 93, "theta_0": [93, 133], "vanilla": [93, 106], "theta_": [93, 133, 134], "eta_n": 93, "nabla": [93, 133], "nfev": [93, 94, 102, 103, 109], "much": [93, 106, 109, 114], "constant_coeff": 93, "power_law": 93, "grad_f": 93, "chanc": [93, 111], "hi": [93, 111], "catch": [93, 111], "els": [93, 111, 130, 131], "continue_condit": [93, 111], "ask_data": [93, 111], "evaluated_gradi": [93, 111], "njev": [93, 94, 102, 103, 111], "nit": [93, 94, 102, 103, 109, 111], "tell_data": [93, 111], "telldata": [93, 111], "eval_jac": [93, 111, 113], "tell": [93, 111, 113], "create_result": [93, 111], "aren": [93, 111], "deal": [93, 111, 135], "complic": [93, 111], "who": [93, 111], "familiar": [93, 111, 129], "spirit": [93, 111], "visit": [93, 111], "optuna": [93, 111], "20_recip": [93, 111], "009_ask_and_tel": [93, 111], "constant": [93, 106, 109, 130, 133], "factori": 93, "docstr": 93, "explicit": 93, "stepsiz": [93, 94, 106, 109], "askdata": [93, 111], "condit": [93, 100, 111, 131], "finish": [93, 134], "absenc": 93, "behav": [93, 94, 111], "manual": [93, 111, 135], "counter": [93, 111], "compos": [93, 111], "proport": 93, "doesn": [93, 101, 111, 136], "right": [93, 120, 127, 129, 131, 134, 135, 136], "optimizerst": 94, "gradientdesc": [94, 111, 116, 133], "dataclass": [94, 103], "learningr": 94, "far": [94, 103, 136], "implicit": 95, "interpol": 95, "reconstruct": [95, 101, 111], "rank": 96, "strategi": 96, "escap": 96, "optima": [96, 105], "though": 96, "fit": [96, 108], "runarsson": 96, "yao": 96, "inequ": [96, 107], "maxfun": [97, 105], "15000": 97, "ftol": [97, 105, 107, 112], "220446049250313e": [97, 105], "15": [97, 105, 120, 128, 131, 133, 134, 136], "iprint": [97, 105], "broyden": 97, "fletcher": 97, "goldfarb": 97, "shanno": 97, "newton": [97, 112], "hessian": [97, 106, 109], "proce": 97, "steepest": 97, "simpl": [97, 129, 131, 134], "fmin_l_bfgs_b": [97, 105], "lbfgsb": 97, "supportsfloat": [97, 105], "proj": [97, 105], "maxfev": [99, 100, 104], "xatol": 99, "0001": [99, 104], "nelder": 99, "mead": 99, "multidimension": 99, "simplex": 99, "robust": [99, 108], "especi": [99, 131, 136], "accur": [99, 131, 136], "consider": [99, 134], "xopt": [99, 104], "dimension": [99, 104], "1024": [100, 128], "reset_interv": 100, "32": [100, 127, 133], "nakanishi": 100, "todo": 100, "1903": 100, "12166": 100, "sequenti": [100, 104, 107, 136], "preprint": 100, "_gradient_support_level": 101, "_bound_support_level": 101, "_initial_point_support_level": 101, "json": [101, 111], "serial": [101, 111], "serializ": [101, 111], "send": [101, 111, 116], "server": [101, 111], "optimizerclass": [101, 111], "individu": [103, 114, 131, 136], "xtol": [104, 112], "max_process": 105, "share": 105, "help": [105, 127, 134], "stuck": 105, "allowed_increas": [106, 109], "resampl": [106, 109], "perturbation_dim": [106, 109], "regular": [106, 109], "hessian_delai": [106, 109], "initial_hessian": [106, 109], "termination_check": [106, 109], "qn": 106, "belong": [106, 114], "speed": [106, 134], "sacrif": 106, "mont": 106, "carlo": 106, "style": [106, 133], "paulitwodesign": [106, 109], "get_fidel": 106, "300": [106, 109], "2103": 106, "09232": 106, "itself": 106, "calibr": [106, 109], "twice": [106, 107, 109], "remain": [106, 109], "cours": [106, 109], "magnitud": [106, 109, 136], "interpret": [106, 109, 136], "uniformli": [106, 109], "precondition": [106, 109], "lse": [106, 109], "terminationcheck": [106, 109], "stability_const": [106, 109], "target_magnitud": [106, 109], "602": [106, 109, 133], "modelspac": [106, 109], "seri": [106, 109, 126], "coeff": [106, 109, 130, 134, 136], "a_k": [106, 109], "c_k": [106, 109], "expon": [106, 109], "estimate_stddev": [106, 109], "avg": [106, 109], "let": [106, 111, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136], "big": [106, 114], "sever": [107, 129, 130, 131], "subroutin": [107, 129, 131], "dieter": 107, "kraft": 107, "mathemat": [107, 136], "infinit": 107, "maxfail": 108, "maxmp": 108, "verbos": 108, "branch": 108, "failur": [108, 131], "debug": 108, "24": [108, 133, 134, 136], "trust_region": 109, "last_avg": 109, "second_ord": 109, "appropri": 109, "suit": 109, "web": 109, "regardless": 109, "addition": [109, 131, 135], "curvatur": 109, "account": 109, "notabl": 109, "situat": 109, "involv": 109, "uncertainti": 109, "assembli": 109, "languag": 109, "qasm": [109, 128], "supplementari": 109, "iv": 109, "rest": 109, "two_spsa": 109, "04": [109, 133], "__init__": 109, "__call__": 109, "last_valu": 109, "polyfit": 109, "slope": 109, "200": [109, 126], "1998": 109, "overview": [109, 126], "john": 109, "hopkin": 109, "apl": 109, "technic": 109, "digest": 109, "19": [109, 131, 133, 134, 136], "482": 109, "492": 109, "onlin": 109, "jhuapl": 109, "edu": 109, "1997": 109, "acceler": 109, "proceed": [109, 128, 131], "36th": 109, "confer": [109, 114], "1417": 109, "1424": 109, "kandala": [109, 118], "2017": [109, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "549": 109, "pages242": 109, "246": 109, "1704": 109, "05018v2": 109, "just": [109, 127, 131, 135], "precondit": 109, "steppabl": 111, "typic": [111, 126, 133], "what": [111, 126, 128], "decid": [111, 134], "customiz": 111, "cf": 111, "infer": 111, "insid": [111, 116], "advanc": [111, 131], "truncat": [112, 119], "subject": 112, "cg": [112, 135], "machine_precis": 112, "eval_fun": 113, "size_gen": 114, "univari": 114, "margin": 114, "eda": 114, "udma": 114, "inspir": 114, "my": 114, "vicent": 114, "soloviev": 114, "edaspi": 114, "probabilist": 114, "elit": 114, "classifi": 114, "competit": 114, "seem": 114, "person": 114, "bigger": 114, "heavier": 114, "30": [114, 136], "understand": [114, 130], "lpha": 114, "introduct": [114, 127, 128, 136], "h2": [114, 126, 127, 128, 129], "quit": [114, 127, 132, 133], "easili": [114, 127, 128, 131, 134], "h2_op": [114, 126, 127, 128, 129], "052373245772859": [114, 126, 127, 128, 129], "39793742484318045": [114, 126, 127, 128, 129], "01128010425623538": [114, 126, 127, 128, 129], "18093119978423156": [114, 126, 127, 128, 129], "toi": 114, "60": [114, 127, 136], "predefin": 114, "pedro": 114, "larra\u00f1aga": 114, "concha": 114, "bielza": 114, "2022": 114, "juli": 114, "parametr": [114, 117, 118, 121, 123, 125, 135], "genet": 114, "gecco": 114, "1145": 114, "3520304": 114, "3533963": 114, "vicenteperezsoloviev": 114, "elite_factor": 114, "std_bound": 114, "Will": 116, "gradientdescentst": 116, "generatorexit": 116, "stopiter": 116, "throw": 116, "typ": 116, "val": [116, 131], "tb": 116, "alwai": 117, "circuit_1": [117, 118], "circuit_2": [117, 118], "create_fidelity_circuit": [117, 118], "circuits_1": [117, 118], "circuits_2": [117, 118], "values_1": [117, 118], "values_2": [117, 118], "asynchron": [117, 118], "statefidelityresult": [117, 118], "uncomput": 118, "havl\u00ed\u010dek": 118, "c\u00f3rcole": 118, "temm": 118, "harrow": 118, "chow": 118, "gambetta": 118, "supervis": 118, "enhanc": 118, "567": 118, "7747": 118, "209": 118, "212": [118, 131], "1804": 118, "11326v2": 118, "projector": 118, "hat": [118, 135, 136], "sum_": [118, 130, 134, 136], "0_i": 118, "coincid": 118, "trainabl": 118, "raw_fidel": 119, "statefidel": [119, 129], "mitig": [119, 128], "t0": 120, "y0": 120, "t_bound": 120, "support_complex": 120, "num_t_step": 120, "side": [120, 121, 123, 134], "shape": [120, 136], "array_lik": 120, "column": 120, "boundari": 120, "won": 120, "fashion": 120, "capabl": 120, "too_small_step": 120, "step_siz": 120, "mclachlan": [121, 123, 134], "aim": [121, 123, 135, 136], "schr\u00f6dinger": [121, 123, 134, 136], "gqt": [121, 122, 123, 124, 125], "lincombqgt": [121, 123, 135], "lincombestimatorgradi": [121, 123, 135], "evolution_gradi": [121, 123, 125], "param_valu": [121, 123, 125], "gradient_param": [121, 123, 125], "variationalprincipl": [122, 124], "propag": 125, "metric_tensor": 125, "metric": [125, 135], "page": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "01_algorithms_introduct": 126, "ipynb": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "task": [126, 128, 134, 135], "eigen": 126, "express": [126, 131, 136], "sai": [126, 135], "financi": 126, "link": 126, "twoloc": [126, 127, 128, 129, 130], "draw": [126, 129, 130, 131, 133, 134, 135, 136], "7": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "ll": [126, 131, 133, 134, 135], "decompos": [126, 129, 131, 134, 135, 136], "mpl": [126, 129, 131, 133, 134, 135, 136], "ship": 126, "tmp": [126, 127, 129, 130, 131, 132, 133, 134, 135, 136], "ipykernel_2129": 126, "2939985673": [126, 127], "py": [126, 127, 129, 130, 131, 132, 133, 134, 135, 136], "deprecationwarn": [126, 127, 129, 130, 131, 132, 133, 134, 135, 136], "earlier": [126, 127, 129, 130, 131, 132, 133, 134, 135, 136], "month": [126, 127, 129, 130, 131, 132, 133, 134, 135, 136], "releas": [126, 127, 129, 130, 131, 132, 133, 134, 135, 136], "date": [126, 127, 129, 130, 131, 132, 133, 134, 135, 136], "baseestimatorv1": [126, 127, 129, 133, 134, 135, 136], "favor": [126, 127, 129, 130, 131, 132, 133, 134, 135, 136], "statevectorestim": [126, 127, 129, 133, 134, 135, 136], "aer": 126, "ibm": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "ingredi": 126, "readi": [126, 127, 129], "compute_mininum_eigenvalu": 126, "put": [126, 132], "Such": 126, "735a": 126, "interatom": 126, "39": [126, 127, 128, 131, 133, 135, 136], "65": [126, 133], "8572750174886894": 126, "lt": [126, 127, 131, 133, 136], "n_local": [126, 127], "two_loc": [126, 127], "0x7f18a8ef9250": 126, "gt": [126, 127, 131, 133, 136], "parametervectorel": [126, 127], "1353540227428525": 126, "8380310888553286": 126, "280191462462861": 126, "0747825334069607": 126, "2135827818504488": 126, "21482993315972": 126, "0004359480056237": 126, "669298431119184": 126, "21358278": 126, "21482993": 126, "00043595": 126, "66929843": 126, "13535402": 126, "83803109": 126, "28019146": 126, "07478253": 126, "0x7f18e4c5ce20": 126, "1275639533996582": 126, "took": 126, "approx": [126, 135, 136], "85727": 126, "electron": 126, "off": [126, 130], "mayb": 126, "qiskit_a": [126, 128], "qiskit_ibm_runtim": 126, "964561171": 126, "34": [126, 133, 136], "8572613307512016": 126, "0x7f18a6e43e50": 126, "532846322352011": 126, "546040591438409": 126, "773323964863347": 126, "469666318046482": 126, "4116780892131404": 126, "902011362668655": 126, "663418884319252": 126, "872941847090593": 126, "41167809": 126, "90201136": 126, "66341888": 126, "87294185": 126, "53284632": 126, "54604059": 126, "77332396": 126, "46966632": 126, "0x7f18a8ece3a0": 126, "5891389846801758": 126, "slightli": [126, 136], "conclud": 126, "broader": 126, "coverag": 126, "8": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "tutorial_mag": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "qiskit_version_t": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "qiskit_copyright": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "informationsoftwareversionqiskit1": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "4qiskit_algorithms0": [126, 127, 129, 130, 131, 132, 133, 134, 135, 136], "1system": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "informationpython": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "version3": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "18oslinuxmon": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "21": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "11": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "27": [126, 133, 134, 136], "2024": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "utc": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "copi": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "copyright": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "apach": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "mayobtain": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "root": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "tree": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "www": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "modif": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "retain": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "thiscopyright": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "notic": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "indicatingthat": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "02_vqe_advanced_opt": 127, "basic": [127, 130], "explor": [127, 133, 136], "cover": 127, "monitor": 127, "progress": 127, "invok": 127, "visibl": 127, "demonstr": [127, 128, 129, 130, 132, 134, 135], "plot": [127, 128, 129, 132, 133, 134], "simplic": 127, "ipykernel_2455": 127, "cobyla": [127, 130], "80": [127, 133], "converge_count": 127, "dtype": [127, 130, 136], "converge_v": 127, "enumer": [127, 131, 136], "roptim": 127, "__name__": 127, "rotation_block": [127, 128, 129], "entanglement_block": [127, 128, 129], "store_intermediate_result": [127, 128], "eval_count": [127, 128, 129], "std": [127, 128], "asarrai": [127, 129, 130], "characterist": 127, "establish": 127, "graph": [127, 128, 130], "pylab": [127, 128, 129, 134], "rcparam": [127, 128, 129], "figur": [127, 128, 129, 132, 134, 136], "figsiz": [127, 128, 129, 136], "label": [127, 129, 130, 133, 134, 136], "xlabel": [127, 128, 129, 133, 134, 136], "ylabel": [127, 128, 129, 133, 134, 136], "titl": [127, 128, 129, 133], "legend": [127, 129, 133, 134, 136], "loc": [127, 129, 133, 134, 136], "numpy_solv": [127, 128], "ref_valu": [127, 128, 129], "5f": [127, 128], "85728": [127, 128], "yscale": 127, "fulli": 127, "show": [127, 128, 130, 134, 136], "workflow": [127, 128, 129], "finitediffestimatorgradi": [127, 135], "1730124370": 127, "begin": [127, 131, 134, 135], "wonder": 127, "handi": 127, "perhap": 127, "know": [127, 131, 136], "857275017565581": 127, "0x7ff4a4aa4ac0": 127, "5470777607659385": 127, "71761614744982": 127, "092947832767051": 127, "5683250498282393": 127, "296519450348757": 127, "5983266516732844": 127, "4269623583955555": 127, "36021017470897654": 127, "29651945": 127, "42696236": 127, "54707776": 127, "09294783": 127, "59832665": 127, "56832505": 127, "71761615": 127, "36021017": 127, "0x7ff4a4aa4bb0": 127, "17137408256530762": 127, "syntax": 127, "initial_pt": 127, "estimator1": 127, "gradient1": 127, "ansatz1": 127, "optimizer1": 127, "vqe1": 127, "result1": [127, 128], "cost_function_evals1": 127, "0x7ff4a509b970": 127, "0x7ff4a509b370": 127, "024524688720703125": 127, "1156415737": 127, "versu": 127, "relat": 127, "dissoci": 127, "profil": 127, "inter": 127, "atom": 127, "popular": 127, "extrapol": 127, "13": [127, 128, 131, 133, 134, 135, 136], "03_vqe_simulation_with_nois": 128, "notebook": [128, 129, 130, 132, 134], "illustr": [128, 134, 136], "consult": 128, "125": 128, "transpil": [128, 135], "cell": [128, 130, 133, 134], "restart": 128, "aerestim": 128, "170": [128, 136], "noiseless_estim": 128, "run_opt": 128, "transpile_opt": 128, "seed_transpil": 128, "85160": 128, "00567": 128, "captur": 128, "fake": 128, "genericbackendv2": 128, "scratch": 128, "scope": 128, "realist": 128, "vigo": 128, "entangl": [128, 130], "choos": [128, 129, 133, 134, 135, 136], "noisemodel": 128, "fake_provid": 128, "coupling_map": 128, "54": [128, 133], "noise_model": 128, "from_backend": 128, "delai": 128, "reset": 128, "sx": 128, "backend_opt": 128, "noisy_estim": 128, "density_matrix": 128, "84320": 128, "01407": 128, "gap": 128, "tackl": 128, "wide": 128, "enabl": 128, "resilience_level": 128, "remot": 128, "4qiskit_aer0": 128, "1qiskit_algorithms0": 128, "40": 128, "04_vqd": 129, "ipykernel_3299": 129, "3503949340": 129, "basesamplerv1": [129, 130, 131, 132, 133, 135], "statevectorsampl": [129, 130, 131, 132, 133, 135], "auto": 129, "33": [129, 133, 134], "almost": [129, 136], "meta": [129, 131], "vqd_valu": 129, "857275": 129, "06365327": 129, "0646445": 129, "_count": 129, "_valu": 129, "exact_solv": 129, "exact_result": 129, "85727503": [129, 135], "24458455": 129, "88272215": 129, "05_qaoa": 130, "partit": 130, "cut": 130, "forc": [130, 136], "vertic": 130, "complementari": 130, "edg": 130, "adjac": 130, "connect": 130, "node": 130, "visual": [130, 132, 136], "networkx": 130, "nx": 130, "num_nod": 130, "from_numpy_arrai": 130, "layout": 130, "random_layout": 130, "color": [130, 133, 136], "node_color": 130, "get_edge_attribut": 130, "draw_networkx_edge_label": 130, "po": 130, "edge_label": 130, "exhaust": 130, "vertex": 130, "cross": 130, "outer": 130, "w_01": 130, "bitfield": 130, "binary_repr": 130, "digit": 130, "chop": 130, "0b": 130, "sol": [130, 134], "cur": 130, "how_many_nonzero": 130, "count_nonzero": 130, "cur_v": 130, "explan": [130, 135], "formul": 130, "resourc": 130, "get_oper": 130, "weight_matrix": 130, "sure": 130, "h_a": 130, "h_b": 130, "zizj": 130, "obj": 130, "pauli_list": 130, "x_p": 130, "z_p": 130, "qubit_op": 130, "quasidistribut": 130, "sample_most_lik": 130, "state_vector": 130, "isinst": 130, "log2": 130, "argmax": 130, "10598": 130, "ipykernel_4551": 130, "1928070479": 130, "npme": 130, "sampling_vq": 130, "56": [130, 133], "06_grover": 131, "famou": 131, "lov": 131, "mark": 131, "28th": 131, "annual": 131, "symposium": 131, "stoc": 131, "219": 131, "gilliam": 131, "gonciulea": 131, "polynomi": 131, "04088": 131, "s_0": 131, "elabor": 131, "mapsto": 131, "neq": 131, "nutshel": 131, "firstli": [131, 134], "talk": 131, "explain": [131, 135], "appear": 131, "composit": 131, "op": 131, "expand": 131, "amplitude_amplifi": 131, "ipykernel_7196": 131, "808285332": 131, "succeed": 131, "answer": 131, "from_label": [131, 136], "1906973721": 131, "easi": [131, 132], "pars": [131, 132], "sat": 131, "accompani": 131, "phase_oracl": [131, 132], "ex": [131, 132], "mention": [131, 133], "sandwich": 131, "uniform": 131, "adjust": 131, "ccz": 131, "arcco": 131, "ch": 131, "care": 131, "110": 131, "111": 131, "336064450": 131, "autom": 131, "mcx_mode": 131, "reflection_qubit": 131, "exchang": 131, "zero_reflect": 131, "imagin": 131, "grover_op": 131, "00": [131, 133, 134, 135], "callable_good_st": 131, "consecut": 131, "16": [131, 133, 134, 135, 136], "17": [131, 133, 134, 135, 136], "18": [131, 133, 134, 136], "eas": 131, "readabl": 131, "dimac": [131, 132], "cnf": [131, 132], "to_diamacs_cnf_format": 131, "bit_rep": 131, "07_grover_exampl": 132, "walk": 132, "conjunct": 132, "input_3sat_inst": 132, "claus": 132, "v_1": 132, "vee": 132, "v_2": 132, "v_3": 132, "wedg": 132, "verifi": [132, 133, 136], "Or": 132, "tempfil": 132, "fp": 132, "namedtemporaryfil": 132, "delet": 132, "file_nam": 132, "from_dimacs_fil": 132, "importerror": 132, "011": 132, "ipykernel_7394": 132, "852366760": 132, "inde": 132, "000": 132, "plot_histogram": 132, "1049556995": 132, "explanatori": 132, "xor": 132, "NOT": 132, "AND": 132, "examin": 132, "agre": 132, "10_pvqd": 133, "delta_t": 133, "theta_n": 133, "expans": 133, "paulievolutiong": [133, 136], "z_1": 133, "z_2": 133, "spin": [133, 134, 136], "final_tim": [133, 136], "from_sparse_list": [133, 136], "parametervector": [133, 135], "clifford": 133, "ipykernel_7505": 133, "1411506614": 133, "pack": 133, "1084508": 133, "82588878": 133, "7508893777626895e": 133, "0x7f2d0b624dc0": 133, "9999999966159694": 133, "9999999786160764": 133, "9999999995406014": 133, "9999999996774606": 133, "999999996776757": 133, "999999990864295": 133, "9999999989313226": 133, "9999999981647524": 133, "9999999971810714": 133, "999999995989957": 133, "999999994602302": 133, "999999999594495": 133, "9999999994361006": 133, "9999999992124298": 133, "9999999989121436": 133, "9999999985226362": 133, "9999999980299936": 133, "9999999974189556": 133, "999999996672874": 133, "9999999957736904": 133, "9999999968119424": 133, "9999999961694972": 133, "9999999954162004": 133, "9999999945370006": 133, "9999999935154438": 133, "9999999923336444": 133, "9999999909722554": 133, "9999999905677208": 133, "9999999891755638": 133, "9999999876113648": 133, "9999999858560016": 133, "9999999838888428": 133, "9999999819005668": 133, "999999979760401": 133, "999999977696548": 133, "9999999752353528": 133, "9999999725842242": 133, "999999969878108": 133, "9999999671203154": 133, "9999999640577132": 133, "9999999609089124": 133, "9999999574907426": 133, "9999999537938148": 133, "9999999505447132": 133, "9999999464730785": 133, "9999999420907086": 133, "9999999378942585": 133, "9999999331205102": 133, "999999928835506": 133, "9999999239196894": 133, "99999991938174": 133, "9999999141058752": 133, "9999999091800882": 133, "9999999036157252": 133, "999999898659777": 133, "9999998929743918": 133, "9999998869819348": 133, "9999998822864948": 133, "9999998764329812": 133, "9999998703034502": 133, "9999998652724736": 133, "9999998592600384": 133, "99999985299987": 133, "9999998477712274": 133, "9999998415669694": 133, "999999836493454": 133, "9999998304180336": 133, "9999998256516752": 133, "9999998197992542": 133, "9999999851544044": 133, "9999999867881229": 133, "999999988021095": 133, "999999989113396": 133, "999999989805657": 133, "9999999898810022": 133, "9999999894706822": 133, "9999999885138589": 133, "9999999869878698": 133, "9999999846938158": 133, "9999999969813448": 133, "9999999952754466": 133, "9999999930620576": 133, "9999999902635242": 133, "9999999868358124": 133, "9999999827238916": 133, "9999999780439034": 133, "9999999724753112": 133, "9999999656698108": 133, "9999999997478795": 133, "9999999995934806": 133, "9999999991031044": 133, "9999999982450472": 133, "9999999971164094": 133, "9999999954714566": 133, "9999999933490828": 133, "9999999909450276": 133, "9999999878158726": 133, "9999999840840166": 133, "9999999800730766": 133, "9999999999483394": 133, "10012442": 133, "99960002": 133, "1004976": 133, "9984003": 133, "10051777": 133, "9964013": 133, "10042778": 133, "99360381": 133, "10022804": 133, "99000892": 133, "09991912": 133, "98561807": 133, "09979579": 133, "98042867": 133, "09964344": 133, "974446": 133, "09946278": 133, "9676725": 133, "09925462": 133, "96011093": 133, "09901985": 133, "95176437": 133, "09898967": 133, "94264499": 133, "09897178": 133, "93274943": 133, "09896711": 133, "9220818": 133, "09897664": 133, "91064655": 133, "09900145": 133, "89844844": 133, "09904264": 133, "88549254": 133, "09910136": 133, "87178427": 133, "09917885": 133, "85732931": 133, "09927635": 133, "84213371": 133, "09927761": 133, "82618523": 133, "09929107": 133, "80950716": 133, "09931822": 133, "79210639": 133, "09936062": 133, "77399015": 133, "09941986": 133, "75516595": 133, "09949756": 133, "73564157": 133, "09959536": 133, "71542512": 133, "09962259": 133, "69452542": 133, "09966734": 133, "67295044": 133, "09973141": 133, "65070908": 133, "09981661": 133, "6278105": 133, "09992478": 133, "60426415": 133, "1000427": 133, "58005951": 133, "10017543": 133, "5552472": 133, "10030531": 133, "52979153": 133, "10045041": 133, "50374947": 133, "10061043": 133, "47708472": 133, "10077635": 133, "44986199": 133, "10094772": 133, "42203083": 133, "10112537": 133, "39366341": 133, "10131134": 133, "36471057": 133, "10150349": 133, "33524436": 133, "10171875": 133, "30521889": 133, "10188619": 133, "27467901": 133, "10208815": 133, "24363382": 133, "10232651": 133, "21209601": 133, "10256015": 133, "18005127": 133, "10283237": 133, "14753891": 133, "10309362": 133, "11460352": 133, "10338214": 133, "0811978": 133, "10364401": 133, "04737938": 133, "10394712": 133, "01314728": 133, "10424113": 133, "9784913": 133, "10457806": 133, "94344886": 133, "10488519": 133, "90804359": 133, "10523611": 133, "87228034": 133, "10563222": 133, "83617363": 133, "1059748": 133, "79973374": 133, "10636254": 133, "76297924": 133, "10679666": 133, "725925": 133, "10719113": 133, "68856805": 133, "10763215": 133, "65094079": 133, "10812072": 133, "61305842": 133, "10858807": 133, "57493155": 133, "10910327": 133, "5365799": 133, "10959731": 133, "4980134": 133, "11013926": 133, "45925279": 133, "11065802": 133, "42031304": 133, "11122443": 133, "38121013": 133, "11132626": 133, "34195989": 133, "11141037": 133, "30258492": 133, "11147636": 133, "26307261": 133, "11153622": 133, "22346446": 133, "11157786": 133, "18376714": 133, "11159901": 133, "14399885": 133, "11159468": 133, "10418261": 133, "11156505": 133, "06432252": 133, "11150566": 133, "02445129": 133, "11140992": 133, "01541126": 133, "1113703": 133, "0552832": 133, "11129021": 133, "09510915": 133, "11118104": 133, "13491348": 133, "11103952": 133, "17463681": 133, "11086372": 133, "21430888": 133, "11065207": 133, "25386651": 133, "11041684": 133, "29332569": 133, "11014218": 133, "33267325": 133, "10979001": 133, "37188546": 133, "10983319": 133, "41093901": 133, "10984365": 133, "44982345": 133, "1098199": 133, "48852319": 133, "10976047": 133, "52702272": 133, "10968011": 133, "56529139": 133, "10956059": 133, "60332912": 133, "10940037": 133, "64112065": 133, "10921915": 133, "6786642": 133, "10899342": 133, "71593099": 133, "10872162": 133, "75290609": 133, "10842847": 133, "78955464": 133, "01059261": 133, "00982697": 133, "00805252": 133, "00940747": 133, "01017311": 133, "02118523": 133, "01965394": 133, "01610504": 133, "01881493": 133, "02034623": 133, "02994049": 133, "02780753": 133, "01520124": 133, "03005935": 133, "03219237": 133, "03869574": 133, "03596112": 133, "01429743": 133, "04130377": 133, "04403852": 133, "047451": 133, "04411471": 133, "01339363": 133, "05254819": 133, "05588467": 133, "05620626": 133, "0522683": 133, "01248983": 133, "06379261": 133, "06773081": 133, "06507739": 133, "06053761": 133, "01391548": 133, "07493994": 133, "07947561": 133, "07394852": 133, "06880692": 133, "01534113": 133, "08608727": 133, "09122041": 133, "08281965": 133, "07707622": 133, "01676678": 133, "0972346": 133, "10296521": 133, "09169077": 133, "08534553": 133, "01819243": 133, "10838193": 133, "11471001": 133, "1005619": 133, "09361484": 133, "01961808": 133, "11952926": 133, "12645481": 133, "10947117": 133, "10193866": 133, "02212797": 133, "13061861": 133, "13813087": 133, "11838043": 133, "11026248": 133, "02463786": 133, "14170796": 133, "14980694": 133, "1272897": 133, "1185863": 133, "02714776": 133, "15279731": 133, "16148301": 133, "13619897": 133, "12691013": 133, "02965765": 133, "16388665": 133, "17315908": 133, "14510823": 133, "13523395": 133, "03216754": 133, "174976": 133, "18483515": 133, "1540175": 133, "14355777": 133, "03467743": 133, "18606535": 133, "19651122": 133, "16292676": 133, "15188159": 133, "03718733": 133, "1971547": 133, "20818728": 133, "17183603": 133, "16020542": 133, "03969722": 133, "20824405": 133, "21986335": 133, "1807453": 133, "16852924": 133, "04220711": 133, "2193334": 133, "23153942": 133, "18964028": 133, "17685769": 133, "04439444": 133, "23045908": 133, "24323133": 133, "19853527": 133, "18518613": 133, "04658176": 133, "24158477": 133, "25492323": 133, "20743025": 133, "19351458": 133, "04876909": 133, "25271045": 133, "26661514": 133, "21632524": 133, "20184303": 133, "05095642": 133, "26383613": 133, "27830704": 133, "22522022": 133, "21017148": 133, "05314374": 133, "27496181": 133, "28999895": 133, "23411521": 133, "21849992": 133, "05533107": 133, "28608749": 133, "30169086": 133, "24301019": 133, "22682837": 133, "0575184": 133, "29721317": 133, "31338276": 133, "25188934": 133, "23516091": 133, "05950933": 133, "30835229": 133, "32506881": 133, "2607685": 133, "24349345": 133, "06150027": 133, "3194914": 133, "33675486": 133, "26964765": 133, "25182599": 133, "06349121": 133, "33063052": 133, "3484409": 133, "2785268": 133, "26015852": 133, "06548214": 133, "34176963": 133, "36012695": 133, "28740595": 133, "26849106": 133, "06747308": 133, "35290874": 133, "371813": 133, "29629112": 133, "27683435": 133, "06943732": 133, "36405699": 133, "38350556": 133, "30516704": 133, "28517007": 133, "07138037": 133, "37519831": 133, "39518708": 133, "31404935": 133, "29352026": 133, "07327196": 133, "38635108": 133, "4068745": 133, "32292265": 133, "30186357": 133, "07514111": 133, "39749678": 133, "41855029": 133, "33180385": 133, "31021905": 133, "07698804": 133, "40865207": 133, "43023386": 133, "34067345": 133, "31856668": 133, "07879378": 133, "41979864": 133, "4419018": 133, "34955281": 133, "32693144": 133, "08055985": 133, "43095698": 133, "45357747": 133, "35842182": 133, "33529025": 133, "08228443": 133, "44210657": 133, "46523675": 133, "36730077": 133, "34366667": 133, "08397256": 133, "45326655": 133, "47690217": 133, "37617062": 133, "3520391": 133, "08561791": 133, "46441747": 133, "48854999": 133, "38504976": 133, "36042518": 133, "08724751": 133, "47557726": 133, "50020568": 133, "39393057": 133, "3688366": 133, "08875295": 133, "48673102": 133, "51183122": 133, "40281138": 133, "37724801": 133, "09025839": 133, "49788478": 133, "52345676": 133, "4116922": 133, "38565942": 133, "09176383": 133, "50903854": 133, "5350823": 133, "42058384": 133, "39409216": 133, "09320943": 133, "52019683": 133, "54670212": 133, "42947547": 133, "4025249": 133, "09465504": 133, "53135511": 133, "55832194": 133, "43836175": 133, "41096431": 133, "09602961": 133, "54249807": 133, "56991446": 133, "44725895": 133, "41941865": 133, "09738694": 133, "55364746": 133, "58150956": 133, "45616184": 133, "42789743": 133, "09865214": 133, "56477991": 133, "59306912": 133, "46506473": 133, "4363762": 133, "09991735": 133, "57591235": 133, "60462867": 133, "47398751": 133, "44489238": 133, "10111404": 133, "58703661": 133, "6161629": 133, "4829103": 133, "45340856": 133, "10231073": 133, "59816088": 133, "62769712": 133, "49185056": 133, "46196484": 133, "10341135": 133, "60925938": 133, "63918308": 133, "50079082": 133, "47052112": 133, "10451198": 133, "62035789": 133, "65066905": 133, "50973108": 133, "47907741": 133, "1056126": 133, "6314564": 133, "66215501": 133, "51870979": 133, "48770397": 133, "10658725": 133, "64251444": 133, "67356893": 133, "5276885": 133, "49633053": 133, "1075619": 133, "65357249": 133, "68498286": 133, "53666722": 133, "50495708": 133, "10853655": 133, "66463054": 133, "69639679": 133, "54568154": 133, "51364123": 133, "10940589": 133, "67565837": 133, "70775912": 133, "55469586": 133, "52232538": 133, "11027522": 133, "68668619": 133, "71912146": 133, "56371018": 133, "53100952": 133, "11114456": 133, "69771401": 133, "73048379": 133, "5727449": 133, "53972618": 133, "11193319": 133, "70872039": 133, "74181307": 133, "58177962": 133, "54844284": 133, "11272182": 133, "71972677": 133, "75314235": 133, "59083987": 133, "55719732": 133, "11343062": 133, "73070744": 133, "76443291": 133, "59990011": 133, "56595179": 133, "11413943": 133, "74168812": 133, "77572348": 133, "60898978": 133, "57475209": 133, "11476708": 133, "75263365": 133, "78696731": 133, "61807945": 133, "58355238": 133, "11539473": 133, "76357919": 133, "79821115": 133, "63636375": 133, "60445446": 133, "11460409": 133, "76527467": 133, "79729823": 133, "65466757": 133, "62534291": 133, "11391095": 133, "76694893": 133, "79639457": 133, "67299407": 133, "64622675": 133, "11330944": 133, "76861016": 133, "7955086": 133, "69135237": 133, "66708295": 133, "11280726": 133, "7702394": 133, "79464846": 133, "70974397": 133, "68790892": 133, "11238813": 133, "77183824": 133, "7938219": 133, "72815708": 133, "70871272": 133, "11204665": 133, "7734175": 133, "79301943": 133, "74658655": 133, "72949237": 133, "11177537": 133, "7749796": 133, "79223834": 133, "76503349": 133, "75024758": 133, "11157264": 133, "77652771": 133, "7914868": 133, "78349023": 133, "77097566": 133, "11143256": 133, "77806363": 133, "79075635": 133, "80195069": 133, "7916839": 133, "11134758": 133, "77959233": 133, "79003647": 133, "82071932": 133, "8098314": 133, "11139455": 133, "78083058": 133, "79189043": 133, "83947476": 133, "82797728": 133, "11147314": 133, "78206457": 133, "79374412": 133, "85823432": 133, "84612338": 133, "11159515": 133, "78331376": 133, "795601": 133, "87697793": 133, "86426612": 133, "11175797": 133, "78455975": 133, "79745943": 133, "89572489": 133, "88240724": 133, "11196049": 133, "78582381": 133, "79932318": 133, "91445306": 133, "90054281": 133, "11220214": 133, "78708615": 133, "8011906": 133, "93316435": 133, "91866646": 133, "11249634": 133, "78837489": 133, "80307217": 133, "95186178": 133, "93677948": 133, "11282831": 133, "78968731": 133, "80496743": 133, "97055922": 133, "95489251": 133, "11316027": 133, "79099974": 133, "80686269": 133, "98527971": 133, "97005378": 133, "11368141": 133, "79630271": 133, "81172271": 133, "00000021": 133, "98521506": 133, "11420255": 133, "80160569": 133, "81658272": 133, "0147207": 133, "00037633": 133, "11472369": 133, "80690866": 133, "82144274": 133, "0294412": 133, "0155376": 133, "11524483": 133, "81221163": 133, "82630275": 133, "04415449": 133, "03069389": 133, "11578418": 133, "81751071": 133, "83116571": 133, "05886779": 133, "04585019": 133, "11632352": 133, "82280979": 133, "83602866": 133, "07358108": 133, "06100648": 133, "11686286": 133, "82810887": 133, "84089162": 133, "08829621": 133, "0761575": 133, "11742684": 133, "83341964": 133, "84576466": 133, "10301134": 133, "09130853": 133, "11799082": 133, "8387304": 133, "85063771": 133, "11772647": 133, "10645955": 133, "1185548": 133, "84404117": 133, "85551075": 133, "1324215": 133, "12159267": 133, "11914978": 133, "8493574": 133, "86039995": 133, "14520263": 133, "13427221": 133, "11977574": 133, "85660193": 133, "86775092": 133, "02": 133, "03": 133, "09": 133, "22": [133, 134, 136], "23": [133, 134, 136], "26": [133, 134], "28": 133, "29": 133, "31": 133, "35000000000000003": 133, "36": 133, "37": [133, 136], "38": 133, "41000000000000003": 133, "42": 133, "43": 133, "47000000000000003": 133, "48": 133, "49": 133, "51": 133, "52": 133, "53": [133, 136], "55": [133, 136], "5700000000000001": 133, "58": 133, "59": 133, "61": [133, 136], "62": 133, "63": 133, "64": 133, "66": 133, "67": [133, 136], "68": [133, 136], "6900000000000001": 133, "7000000000000001": 133, "71": 133, "72": 133, "73": 133, "74": 133, "75": 133, "76": 133, "77": 133, "78": 133, "79": 133, "81": 133, "8200000000000001": 133, "8300000000000001": 133, "84": 133, "85": 133, "86": 133, "87": 133, "88": 133, "89": 133, "91": 133, "92": 133, "93": 133, "9400000000000001": 133, "9500000000000001": 133, "96": 133, "97": 133, "pvqdresult": 133, "violat": 133, "matplotlib": [133, 136], "pyplot": [133, 136], "plt": [133, 136], "royalblu": 133, "kept": [133, 136], "sc": [133, 136], "to_matrix": [133, 136], "energ": 133, "magn": 133, "timepoint": 133, "ob": 133, "exact_st": 133, "expm": [133, 136], "1j": [133, 136], "expectation_valu": [133, 136], "assign_paramet": [133, 134], "exact_tim": [133, 136], "exact_energi": [133, 136], "exact_magnet": [133, 136], "crimson": 133, "0x7f2d0c272550": 133, "pretti": 133, "eta_k": 133, "ell": 133, "theta_k": 133, "arang": [133, 136], "gd": 133, "minut": [133, 134], "result_gd": 133, "energies_gd": 133, "preserv": 133, "magnetizations_gd": 133, "11_varqt": 134, "govern": 134, "hbar": 134, "equiv": 134, "yuan": 134, "191": 134, "dot": 134, "argmin": 134, "bigg": 134, "f_": 134, "v_": 134, "chain": 134, "z_": [134, 136], "x_i": [134, 136], "stand": 134, "interact": [134, 136], "extern": [134, 136], "transvers": [134, 136], "z_i": [134, 136], "sum_i": [134, 136], "temperatur": 134, "aux_op": 134, "necessari": 134, "ipykernel_10530": 134, "1414327418": 134, "scipyimaginaryevolv": 134, "501": 134, "exact_evol": 134, "h_exp_val": 134, "el": 134, "exact_h_exp_v": 134, "linestyl": 134, "0097479079521188": 134, "reverseqgt": 134, "reverseestimatorgradi": 134, "evolution_result_eff": 134, "740124999": 134, "h_exp_val_eff": 134, "exact_h_exp_val_eff": 134, "eff": 134, "shorter": 134, "00000000e": [134, 135], "00j": 134, "55111512e": 134, "17j": 134, "01j": [134, 135], "66533454e": 134, "dim": [134, 136], "var_qrt": 134, "evolution_result_r": 134, "3604634128": 134, "scipyrealevolv": 134, "init_circ": 134, "rtev": 134, "1001": 134, "m_z": 134, "mz_exp_val_r": 134, "exact_mz_exp_val_r": 134, "qpt": 134, "evolution_result_re_eff": 134, "2453938998": 134, "mz_exp_val_re_eff": 134, "12_gradients_framework": 135, "mari": 135, "besid": 135, "p_j": 135, "bind": 135, "notion": 135, "outlin": 135, "theta_1": 135, "p_1": 135, "p_2": 135, "theta_2": 135, "vert": [135, 136], "quantumregist": 135, "qc": 135, "2x": 135, "paramshiftestimatorgradi": 135, "pse_grad_result": 135, "41421356": 135, "70710678": 135, "ipykernel_27948": 135, "3439047639": 135, "qc_sampl": 135, "measure_al": 135, "paramshiftsamplergradi": 135, "param_v": 135, "pss_grad_result": 135, "35355339059327373": 135, "3535533905932736": 135, "551115123125783e": 135, "961213124": 135, "analog": 135, "sum_pm_p": 135, "h_p": 135, "m_p": 135, "bigotim": 135, "limits_": 135, "sigma_": [135, 136], "u_k": 135, "omega_k": 135, "limits_pi": 135, "m_": 135, "k_p": 135, "physic": [135, 136], "phenomena": 135, "state_grad": 135, "lce_grad_result": 135, "fde_grad_result": 135, "41421333": 135, "70710666": 135, "spsaestimatorgradi": 135, "spsae_grad_result": 135, "70710631": 135, "geodes": 135, "ly": 135, "bloch": 135, "Its": 135, "qgt_": 135, "kl": 135, "partial_k": 135, "partial_l": 135, "qgt_result": 135, "50000000e": 135, "54884100e": 135, "19j": 135, "75686535e": 135, "76776695e": 135, "25000000e": 135, "capac": 135, "align": 135, "qfi_": 135, "qfi_result": 135, "50274614e": 135, "h2_hamiltonian": 135, "h2_energi": 135, "wavefunction_1": 135, "wavefunction_2": 135, "nrefer": 135, "8199999999700125": 135, "100892596": 135, "vqe_class": 135, "result_class": 135, "8199999997816352": 135, "13_trotterqrt": 136, "rte": 136, "slice": 136, "independ": 136, "a_j": 136, "h_j": 136, "assumpt": 136, "prod_j": 136, "deeper": 136, "accumul": 136, "becom": 136, "critic": 136, "nisq": 136, "studi": 136, "lattic": 136, "sigma_i": 136, "orient": 136, "uparrow": 136, "downarrow": 136, "co": 136, "lvert": 136, "math": 136, "get_hamiltonian": 136, "zz_tupl": 136, "z_tupl": 136, "x_tupl": 136, "simplifi": 136, "38268343": 136, "92387953": 136, "conceptu": 136, "down": 136, "rememb": 136, "disentangler_dg": 136, "multiplex1_reverse_dg": 136, "turn": 136, "02895926": 136, "08738739j": 136, "9411211": 136, "31187756j": 136, "00811432": 136, "002689j": 136, "effect": 136, "dimensionless": 136, "bar_width": 136, "radian": 136, "longitudin": 136, "linspac": 136, "h_alpha": 136, "amplitudes_dict": 136, "probabilities_dict": 136, "degre": 136, "alpha_str": 136, "180": 136, "circ": 136, "bar": 136, "xtick": 136, "suptitl": 136, "0x7fb19f136c40": 136, "vert01": 136, "pm90": 136, "pm45": 136, "abil": 136, "ipykernel_28304": 136, "2834281491": 136, "correl": 136, "magnetization_op": 136, "correlation_op": 136, "middl": 136, "face": 136, "incorpor": 136, "001100": 136, "newli": 136, "subplot": 136, "sharex": 136, "marker": 136, "darkmagenta": 136, "lw": 136, "set_ylabel": 136, "set_xlabel": 136, "discuss": 136, "quickli": 136, "h_arrai": 136, "denser": 136, "mesh": 136, "exact_evolut": 136, "sv": 136, "exact_correl": 136, "alongsid": 136, "axi": 136, "get_legend_handles_label": 136, "bbox_to_anchor": 136, "center": 136, "framealpha": 136, "tight_layout": 136, "isn": 136, "address": 136, "trotter_step_first_ord": 136, "stat": 136, "nonloc": 136, "num_nonlocal_g": 136, "breakdown": 136, "join": 136, "count_op": 136, "u1": 136, "suzukitrott": 136, "recurs": 136, "second_order_formula": 136, "trotter_step_second_ord": 136, "2nd": 136, "fourth_order_formula": 136, "trotter_step_fourth_ord": 136, "4th": 136, "265": 136, "fourth": 136, "observables_order4": 136, "float64": 136, "940414233": 136, "limegreen": 136, "vert001100": 136, "sign": 136, "suggest": 136, "oscil": 136, "eventu": 136, "damp": 136, "cm": 136, "inner": 136, "comprehens": 136, "tile": 136, "meshgrid": 136, "pcolor": 136, "vmin": 136, "vmax": 136, "cmap": 136, "rdbu": 136, "tick": 136, "ytick": 136, "colorbar": 136, "0x7fb19f00bfd0": 136, "hatano": 136, "naomichi": 136, "masuo": 136, "berlin": 136, "heidelberg": 136, "springer": 136, "2005": 136, "varadarajan": 136, "veerav": 136, "algebra": 136, "102": 136, "scienc": 136, "busi": 136, "media": 136, "2013": 136, "magnu": 136, "wilhelm": 136, "1954": 136, "649": 136, "673": 136}, "objects": {"": [[0, 0, 0, "-", "qiskit_algorithms"]], "qiskit_algorithms": [[10, 1, 1, "", "AdaptVQE"], [11, 1, 1, "", "AdaptVQEResult"], [1, 4, 1, "", "AlgorithmError"], [12, 1, 1, "", "AlgorithmJob"], [13, 1, 1, "", "AmplificationProblem"], [14, 1, 1, "", "AmplitudeAmplifier"], [15, 1, 1, "", "AmplitudeEstimation"], [16, 1, 1, "", "AmplitudeEstimationResult"], [17, 1, 1, "", "AmplitudeEstimator"], [18, 1, 1, "", "AmplitudeEstimatorResult"], [19, 1, 1, "", "Eigensolver"], [20, 1, 1, "", "EigensolverResult"], [21, 1, 1, "", "EstimationProblem"], [22, 1, 1, "", "FasterAmplitudeEstimation"], [23, 1, 1, "", "FasterAmplitudeEstimationResult"], [24, 1, 1, "", "Grover"], [25, 1, 1, "", "GroverResult"], [26, 1, 1, "", "HamiltonianPhaseEstimation"], [27, 1, 1, "", "HamiltonianPhaseEstimationResult"], [28, 1, 1, "", "ImaginaryTimeEvolver"], [29, 1, 1, "", "IterativeAmplitudeEstimation"], [30, 1, 1, "", "IterativeAmplitudeEstimationResult"], [31, 1, 1, "", "IterativePhaseEstimation"], [32, 1, 1, "", "MaximumLikelihoodAmplitudeEstimation"], [33, 1, 1, "", "MaximumLikelihoodAmplitudeEstimationResult"], [34, 1, 1, "", "MinimumEigensolver"], [35, 1, 1, "", "MinimumEigensolverResult"], [36, 1, 1, "", "NumPyEigensolver"], [37, 1, 1, "", "NumPyEigensolverResult"], [38, 1, 1, "", "NumPyMinimumEigensolver"], [39, 1, 1, "", "NumPyMinimumEigensolverResult"], [40, 1, 1, "", "PVQD"], [41, 1, 1, "", "PVQDResult"], [42, 1, 1, "", "PhaseEstimation"], [43, 1, 1, "", "PhaseEstimationResult"], [44, 1, 1, "", "PhaseEstimationScale"], [45, 1, 1, "", "QAOA"], [46, 1, 1, "", "RealTimeEvolver"], [47, 1, 1, "", "SamplingMinimumEigensolver"], [48, 1, 1, "", "SamplingMinimumEigensolverResult"], [49, 1, 1, "", "SamplingVQE"], [50, 1, 1, "", "SamplingVQEResult"], [51, 1, 1, "", "SciPyImaginaryEvolver"], [52, 1, 1, "", "SciPyRealEvolver"], [53, 1, 1, "", "TimeEvolutionProblem"], [54, 1, 1, "", "TimeEvolutionResult"], [55, 1, 1, "", "TrotterQRTE"], [56, 1, 1, "", "VQD"], [57, 1, 1, "", "VQDResult"], [58, 1, 1, "", "VQE"], [59, 1, 1, "", "VQEResult"], [60, 1, 1, "", "VarQITE"], [61, 1, 1, "", "VarQRTE"], [62, 1, 1, "", "VarQTEResult"], [2, 0, 0, "-", "gradients"], [3, 0, 0, "-", "optimizers"], [4, 0, 0, "-", "state_fidelities"]], "qiskit_algorithms.AdaptVQE": [[10, 2, 1, "", "compute_minimum_eigenvalue"], [10, 3, 1, "", "eigenvalue_threshold"], [10, 3, 1, "", "gradient_threshold"], [10, 3, 1, "", "initial_point"], [10, 3, 1, "", "max_iterations"], [10, 3, 1, "", "solver"], [10, 2, 1, "", "supports_aux_operators"]], "qiskit_algorithms.AdaptVQEResult": [[11, 3, 1, "", "aux_operators_evaluated"], [11, 2, 1, "", "combine"], [11, 3, 1, "", "cost_function_evals"], [11, 3, 1, "", "eigenvalue"], [11, 3, 1, "", "eigenvalue_history"], [11, 3, 1, "", "final_max_gradient"], [11, 3, 1, "", "num_iterations"], [11, 3, 1, "", "optimal_circuit"], [11, 3, 1, "", "optimal_parameters"], [11, 3, 1, "", "optimal_point"], [11, 3, 1, "", "optimal_value"], [11, 3, 1, "", "optimizer_evals"], [11, 3, 1, "", "optimizer_result"], [11, 3, 1, "", "optimizer_time"], [11, 3, 1, "", "termination_criterion"]], "qiskit_algorithms.AlgorithmJob": [[12, 2, 1, "", "cancel"], [12, 2, 1, "", "cancelled"], [12, 2, 1, "", "done"], [12, 2, 1, "", "in_final_state"], [12, 2, 1, "", "job_id"], [12, 2, 1, "", "result"], [12, 2, 1, "", "running"], [12, 2, 1, "", "status"], [12, 2, 1, "", "submit"]], "qiskit_algorithms.AmplificationProblem": [[13, 3, 1, "", "grover_operator"], [13, 3, 1, "", "is_good_state"], [13, 3, 1, "", "objective_qubits"], [13, 3, 1, "", "oracle"], [13, 3, 1, "", "post_processing"], [13, 3, 1, "", "state_preparation"]], "qiskit_algorithms.AmplitudeAmplifier": [[14, 2, 1, "", "amplify"]], "qiskit_algorithms.AmplitudeEstimation": [[15, 2, 1, "", "compute_confidence_interval"], [15, 2, 1, "", "compute_mle"], [15, 2, 1, "", "construct_circuit"], [15, 2, 1, "", "estimate"], [15, 2, 1, "", "evaluate_measurements"], [15, 3, 1, "", "sampler"]], "qiskit_algorithms.AmplitudeEstimationResult": [[16, 3, 1, "", "circuit_results"], [16, 2, 1, "", "combine"], [16, 3, 1, "", "confidence_interval"], [16, 3, 1, "", "confidence_interval_processed"], [16, 3, 1, "", "estimation"], [16, 3, 1, "", "estimation_processed"], [16, 3, 1, "", "max_probability"], [16, 3, 1, "", "measurements"], [16, 3, 1, "", "mle"], [16, 3, 1, "", "mle_processed"], [16, 3, 1, "", "num_evaluation_qubits"], [16, 3, 1, "", "num_oracle_queries"], [16, 3, 1, "", "post_processing"], [16, 3, 1, "", "samples"], [16, 3, 1, "", "samples_processed"], [16, 3, 1, "", "shots"]], "qiskit_algorithms.AmplitudeEstimator": [[17, 2, 1, "", "estimate"]], "qiskit_algorithms.AmplitudeEstimatorResult": [[18, 3, 1, "", "circuit_results"], [18, 2, 1, "", "combine"], [18, 3, 1, "", "confidence_interval"], [18, 3, 1, "", "confidence_interval_processed"], [18, 3, 1, "", "estimation"], [18, 3, 1, "", "estimation_processed"], [18, 3, 1, "", "num_oracle_queries"], [18, 3, 1, "", "post_processing"], [18, 3, 1, "", "shots"]], "qiskit_algorithms.Eigensolver": [[19, 2, 1, "", "compute_eigenvalues"], [19, 2, 1, "", "supports_aux_operators"]], "qiskit_algorithms.EigensolverResult": [[20, 3, 1, "", "aux_operators_evaluated"], [20, 2, 1, "", "combine"], [20, 3, 1, "", "eigenvalues"]], "qiskit_algorithms.EstimationProblem": [[21, 3, 1, "", "grover_operator"], [21, 3, 1, "", "has_good_state"], [21, 3, 1, "", "is_good_state"], [21, 3, 1, "", "objective_qubits"], [21, 3, 1, "", "post_processing"], [21, 2, 1, "", "rescale"], [21, 3, 1, "", "state_preparation"]], "qiskit_algorithms.FasterAmplitudeEstimation": [[22, 2, 1, "", "construct_circuit"], [22, 2, 1, "", "estimate"], [22, 3, 1, "", "sampler"]], "qiskit_algorithms.FasterAmplitudeEstimationResult": [[23, 3, 1, "", "circuit_results"], [23, 2, 1, "", "combine"], [23, 3, 1, "", "confidence_interval"], [23, 3, 1, "", "confidence_interval_processed"], [23, 3, 1, "", "estimation"], [23, 3, 1, "", "estimation_processed"], [23, 3, 1, "", "num_first_state_steps"], [23, 3, 1, "", "num_oracle_queries"], [23, 3, 1, "", "num_steps"], [23, 3, 1, "", "post_processing"], [23, 3, 1, "", "shots"], [23, 3, 1, "", "success_probability"], [23, 3, 1, "", "theta_intervals"]], "qiskit_algorithms.Grover": [[24, 2, 1, "", "amplify"], [24, 2, 1, "", "construct_circuit"], [24, 2, 1, "", "optimal_num_iterations"], [24, 3, 1, "", "sampler"]], "qiskit_algorithms.GroverResult": [[25, 3, 1, "", "assignment"], [25, 3, 1, "", "circuit_results"], [25, 2, 1, "", "combine"], [25, 3, 1, "", "iterations"], [25, 3, 1, "", "max_probability"], [25, 3, 1, "", "oracle_evaluation"], [25, 3, 1, "", "top_measurement"]], "qiskit_algorithms.HamiltonianPhaseEstimation": [[26, 2, 1, "", "estimate"]], "qiskit_algorithms.HamiltonianPhaseEstimationResult": [[27, 2, 1, "", "combine"], [27, 2, 1, "", "filter_phases"], [27, 3, 1, "", "most_likely_eigenvalue"], [27, 3, 1, "", "phase"]], "qiskit_algorithms.ImaginaryTimeEvolver": [[28, 2, 1, "", "evolve"]], "qiskit_algorithms.IterativeAmplitudeEstimation": [[29, 2, 1, "", "construct_circuit"], [29, 3, 1, "", "epsilon_target"], [29, 2, 1, "", "estimate"], [29, 3, 1, "", "sampler"]], "qiskit_algorithms.IterativeAmplitudeEstimationResult": [[30, 3, 1, "", "alpha"], [30, 3, 1, "", "circuit_results"], [30, 2, 1, "", "combine"], [30, 3, 1, "", "confidence_interval"], [30, 3, 1, "", "confidence_interval_processed"], [30, 3, 1, "", "epsilon_estimated"], [30, 3, 1, "", "epsilon_estimated_processed"], [30, 3, 1, "", "epsilon_target"], [30, 3, 1, "", "estimate_intervals"], [30, 3, 1, "", "estimation"], [30, 3, 1, "", "estimation_processed"], [30, 3, 1, "", "num_oracle_queries"], [30, 3, 1, "", "post_processing"], [30, 3, 1, "", "powers"], [30, 3, 1, "", "ratios"], [30, 3, 1, "", "shots"], [30, 3, 1, "", "theta_intervals"]], "qiskit_algorithms.IterativePhaseEstimation": [[31, 2, 1, "", "construct_circuit"], [31, 2, 1, "", "estimate"]], "qiskit_algorithms.MaximumLikelihoodAmplitudeEstimation": [[32, 2, 1, "", "compute_confidence_interval"], [32, 2, 1, "", "compute_mle"], [32, 2, 1, "", "construct_circuits"], [32, 2, 1, "", "estimate"], [32, 3, 1, "", "sampler"]], "qiskit_algorithms.MaximumLikelihoodAmplitudeEstimationResult": [[33, 3, 1, "", "circuit_results"], [33, 2, 1, "", "combine"], [33, 3, 1, "", "confidence_interval"], [33, 3, 1, "", "confidence_interval_processed"], [33, 3, 1, "", "estimation"], [33, 3, 1, "", "estimation_processed"], [33, 3, 1, "", "evaluation_schedule"], [33, 3, 1, "", "fisher_information"], [33, 3, 1, "", "good_counts"], [33, 3, 1, "", "minimizer"], [33, 3, 1, "", "num_oracle_queries"], [33, 3, 1, "", "post_processing"], [33, 3, 1, "", "shots"], [33, 3, 1, "", "theta"]], "qiskit_algorithms.MinimumEigensolver": [[34, 2, 1, "", "compute_minimum_eigenvalue"], [34, 2, 1, "", "supports_aux_operators"]], "qiskit_algorithms.MinimumEigensolverResult": [[35, 3, 1, "", "aux_operators_evaluated"], [35, 2, 1, "", "combine"], [35, 3, 1, "", "eigenvalue"]], "qiskit_algorithms.NumPyEigensolver": [[36, 2, 1, "", "compute_eigenvalues"], [36, 3, 1, "", "filter_criterion"], [36, 3, 1, "", "k"], [36, 2, 1, "", "supports_aux_operators"]], "qiskit_algorithms.NumPyEigensolverResult": [[37, 3, 1, "", "aux_operators_evaluated"], [37, 2, 1, "", "combine"], [37, 3, 1, "", "eigenstates"], [37, 3, 1, "", "eigenvalues"]], "qiskit_algorithms.NumPyMinimumEigensolver": [[38, 2, 1, "", "compute_minimum_eigenvalue"], [38, 3, 1, "", "filter_criterion"], [38, 2, 1, "", "supports_aux_operators"]], "qiskit_algorithms.NumPyMinimumEigensolverResult": [[39, 3, 1, "", "aux_operators_evaluated"], [39, 2, 1, "", "combine"], [39, 3, 1, "", "eigenstate"], [39, 3, 1, "", "eigenvalue"]], "qiskit_algorithms.PVQD": [[40, 3, 1, "", "ansatz"], [40, 3, 1, "", "evolution"], [40, 2, 1, "", "evolve"], [40, 2, 1, "", "get_loss"], [40, 3, 1, "", "initial_guess"], [40, 3, 1, "", "initial_parameters"], [40, 3, 1, "", "num_timesteps"], [40, 3, 1, "", "optimizer"], [40, 2, 1, "", "step"], [40, 3, 1, "", "use_parameter_shift"]], "qiskit_algorithms.PVQDResult": [[41, 2, 1, "", "combine"]], "qiskit_algorithms.PhaseEstimation": [[42, 2, 1, "", "construct_circuit"], [42, 2, 1, "", "estimate"], [42, 2, 1, "", "estimate_from_pe_circuit"]], "qiskit_algorithms.PhaseEstimationResult": [[43, 3, 1, "", "circuit_result"], [43, 2, 1, "", "combine"], [43, 2, 1, "", "filter_phases"], [43, 3, 1, "", "phase"], [43, 3, 1, "", "phases"]], "qiskit_algorithms.PhaseEstimationScale": [[44, 2, 1, "", "from_pauli_sum"], [44, 3, 1, "", "scale"], [44, 2, 1, "", "scale_phase"], [44, 2, 1, "", "scale_phases"]], "qiskit_algorithms.QAOA": [[45, 3, 1, "", "aggregation"], [45, 3, 1, "", "callback"], [45, 2, 1, "", "compute_minimum_eigenvalue"], [45, 3, 1, "", "initial_point"], [45, 3, 1, "", "initial_state"], [45, 3, 1, "", "mixer"], [45, 3, 1, "", "optimizer"], [45, 3, 1, "", "reps"], [45, 3, 1, "", "sampler"], [45, 2, 1, "", "supports_aux_operators"]], "qiskit_algorithms.RealTimeEvolver": [[46, 2, 1, "", "evolve"]], "qiskit_algorithms.SamplingMinimumEigensolver": [[47, 2, 1, "", "compute_minimum_eigenvalue"], [47, 2, 1, "", "supports_aux_operators"]], "qiskit_algorithms.SamplingMinimumEigensolverResult": [[48, 3, 1, "", "aux_operators_evaluated"], [48, 3, 1, "", "best_measurement"], [48, 2, 1, "", "combine"], [48, 3, 1, "", "eigenstate"], [48, 3, 1, "", "eigenvalue"]], "qiskit_algorithms.SamplingVQE": [[49, 3, 1, "", "aggregation"], [49, 3, 1, "", "ansatz"], [49, 3, 1, "", "callback"], [49, 2, 1, "", "compute_minimum_eigenvalue"], [49, 3, 1, "", "initial_point"], [49, 3, 1, "", "optimizer"], [49, 3, 1, "", "sampler"], [49, 2, 1, "", "supports_aux_operators"]], "qiskit_algorithms.SamplingVQEResult": [[50, 3, 1, "", "aux_operators_evaluated"], [50, 3, 1, "", "best_measurement"], [50, 2, 1, "", "combine"], [50, 3, 1, "", "cost_function_evals"], [50, 3, 1, "", "eigenstate"], [50, 3, 1, "", "eigenvalue"], [50, 3, 1, "", "optimal_circuit"], [50, 3, 1, "", "optimal_parameters"], [50, 3, 1, "", "optimal_point"], [50, 3, 1, "", "optimal_value"], [50, 3, 1, "", "optimizer_evals"], [50, 3, 1, "", "optimizer_result"], [50, 3, 1, "", "optimizer_time"]], "qiskit_algorithms.SciPyImaginaryEvolver": [[51, 2, 1, "", "evolve"]], "qiskit_algorithms.SciPyRealEvolver": [[52, 2, 1, "", "evolve"]], "qiskit_algorithms.TimeEvolutionProblem": [[53, 3, 1, "", "aux_operators"], [53, 3, 1, "", "hamiltonian"], [53, 3, 1, "", "initial_state"], [53, 3, 1, "", "param_value_map"], [53, 3, 1, "", "t_param"], [53, 3, 1, "", "time"], [53, 3, 1, "", "truncation_threshold"]], "qiskit_algorithms.TimeEvolutionResult": [[54, 3, 1, "", "aux_ops_evaluated"], [54, 2, 1, "", "combine"], [54, 3, 1, "", "evolved_state"], [54, 3, 1, "", "observables"], [54, 3, 1, "", "times"]], "qiskit_algorithms.TrotterQRTE": [[55, 3, 1, "", "estimator"], [55, 2, 1, "", "evolve"], [55, 3, 1, "", "num_timesteps"], [55, 3, 1, "", "product_formula"], [55, 2, 1, "", "supports_aux_operators"]], "qiskit_algorithms.VQD": [[56, 3, 1, "", "ansatz"], [56, 3, 1, "", "betas"], [56, 3, 1, "", "callback"], [56, 2, 1, "", "compute_eigenvalues"], [56, 3, 1, "", "estimator"], [56, 3, 1, "", "fidelity"], [56, 3, 1, "", "initial_point"], [56, 3, 1, "", "k"], [56, 3, 1, "", "optimizer"], [56, 2, 1, "", "supports_aux_operators"]], "qiskit_algorithms.VQDResult": [[57, 3, 1, "", "aux_operators_evaluated"], [57, 2, 1, "", "combine"], [57, 3, 1, "", "cost_function_evals"], [57, 3, 1, "", "eigenvalues"], [57, 3, 1, "", "optimal_circuits"], [57, 3, 1, "", "optimal_parameters"], [57, 3, 1, "", "optimal_points"], [57, 3, 1, "", "optimal_values"], [57, 3, 1, "", "optimizer_results"], [57, 3, 1, "", "optimizer_times"]], "qiskit_algorithms.VQE": [[58, 3, 1, "", "ansatz"], [58, 3, 1, "", "callback"], [58, 2, 1, "", "compute_minimum_eigenvalue"], [58, 3, 1, "", "estimator"], [58, 3, 1, "", "gradient"], [58, 3, 1, "", "initial_point"], [58, 3, 1, "", "optimizer"], [58, 2, 1, "", "supports_aux_operators"]], "qiskit_algorithms.VQEResult": [[59, 3, 1, "", "aux_operators_evaluated"], [59, 2, 1, "", "combine"], [59, 3, 1, "", "cost_function_evals"], [59, 3, 1, "", "eigenvalue"], [59, 3, 1, "", "optimal_circuit"], [59, 3, 1, "", "optimal_parameters"], [59, 3, 1, "", "optimal_point"], [59, 3, 1, "", "optimal_value"], [59, 3, 1, "", "optimizer_evals"], [59, 3, 1, "", "optimizer_result"], [59, 3, 1, "", "optimizer_time"]], "qiskit_algorithms.VarQITE": [[60, 2, 1, "", "evolve"]], "qiskit_algorithms.VarQRTE": [[61, 2, 1, "", "evolve"]], "qiskit_algorithms.VarQTEResult": [[62, 2, 1, "", "combine"], [62, 3, 1, "", "parameter_values"]], "qiskit_algorithms.gradients": [[63, 1, 1, "", "BaseEstimatorGradient"], [64, 1, 1, "", "BaseQGT"], [65, 1, 1, "", "BaseSamplerGradient"], [66, 1, 1, "", "EstimatorGradientResult"], [67, 1, 1, "", "FiniteDiffEstimatorGradient"], [68, 1, 1, "", "FiniteDiffSamplerGradient"], [69, 1, 1, "", "LinCombEstimatorGradient"], [70, 1, 1, "", "LinCombQGT"], [71, 1, 1, "", "LinCombSamplerGradient"], [72, 1, 1, "", "ParamShiftEstimatorGradient"], [73, 1, 1, "", "ParamShiftSamplerGradient"], [74, 1, 1, "", "QFI"], [75, 1, 1, "", "QFIResult"], [76, 1, 1, "", "QGTResult"], [77, 1, 1, "", "ReverseEstimatorGradient"], [78, 1, 1, "", "ReverseQGT"], [79, 1, 1, "", "SPSAEstimatorGradient"], [80, 1, 1, "", "SPSASamplerGradient"], [81, 1, 1, "", "SamplerGradientResult"]], "qiskit_algorithms.gradients.BaseEstimatorGradient": [[63, 3, 1, "", "derivative_type"], [63, 3, 1, "", "options"], [63, 2, 1, "", "run"], [63, 2, 1, "", "update_default_options"]], "qiskit_algorithms.gradients.BaseQGT": [[64, 3, 1, "", "derivative_type"], [64, 3, 1, "", "options"], [64, 2, 1, "", "run"], [64, 2, 1, "", "update_default_options"]], "qiskit_algorithms.gradients.BaseSamplerGradient": [[65, 3, 1, "", "options"], [65, 2, 1, "", "run"], [65, 2, 1, "", "update_default_options"]], "qiskit_algorithms.gradients.EstimatorGradientResult": [[66, 3, 1, "", "gradients"], [66, 3, 1, "", "metadata"], [66, 3, 1, "", "options"]], "qiskit_algorithms.gradients.FiniteDiffEstimatorGradient": [[67, 3, 1, "", "derivative_type"], [67, 3, 1, "", "options"], [67, 2, 1, "", "run"], [67, 2, 1, "", "update_default_options"]], "qiskit_algorithms.gradients.FiniteDiffSamplerGradient": [[68, 3, 1, "", "options"], [68, 2, 1, "", "run"], [68, 2, 1, "", "update_default_options"]], "qiskit_algorithms.gradients.LinCombEstimatorGradient": [[69, 3, 1, "", "SUPPORTED_GATES"], [69, 3, 1, "", "derivative_type"], [69, 3, 1, "", "options"], [69, 2, 1, "", "run"], [69, 2, 1, "", "update_default_options"]], "qiskit_algorithms.gradients.LinCombQGT": [[70, 3, 1, "", "SUPPORTED_GATES"], [70, 3, 1, "", "derivative_type"], [70, 3, 1, "", "options"], [70, 2, 1, "", "run"], [70, 2, 1, "", "update_default_options"]], "qiskit_algorithms.gradients.LinCombSamplerGradient": [[71, 3, 1, "", "SUPPORTED_GATES"], [71, 3, 1, "", "options"], [71, 2, 1, "", "run"], [71, 2, 1, "", "update_default_options"]], "qiskit_algorithms.gradients.ParamShiftEstimatorGradient": [[72, 3, 1, "", "SUPPORTED_GATES"], [72, 3, 1, "", "derivative_type"], [72, 3, 1, "", "options"], [72, 2, 1, "", "run"], [72, 2, 1, "", "update_default_options"]], "qiskit_algorithms.gradients.ParamShiftSamplerGradient": [[73, 3, 1, "", "SUPPORTED_GATES"], [73, 3, 1, "", "options"], [73, 2, 1, "", "run"], [73, 2, 1, "", "update_default_options"]], "qiskit_algorithms.gradients.QFI": [[74, 3, 1, "", "options"], [74, 2, 1, "", "run"], [74, 2, 1, "", "update_default_options"]], "qiskit_algorithms.gradients.QFIResult": [[75, 3, 1, "", "metadata"], [75, 3, 1, "", "options"], [75, 3, 1, "", "qfis"]], "qiskit_algorithms.gradients.QGTResult": [[76, 3, 1, "", "derivative_type"], [76, 3, 1, "", "metadata"], [76, 3, 1, "", "options"], [76, 3, 1, "", "qgts"]], "qiskit_algorithms.gradients.ReverseEstimatorGradient": [[77, 3, 1, "", "SUPPORTED_GATES"], [77, 3, 1, "", "derivative_type"], [77, 3, 1, "", "options"], [77, 2, 1, "", "run"], [77, 2, 1, "", "update_default_options"]], "qiskit_algorithms.gradients.ReverseQGT": [[78, 3, 1, "", "SUPPORTED_GATES"], [78, 3, 1, "", "derivative_type"], [78, 3, 1, "", "options"], [78, 2, 1, "", "run"], [78, 2, 1, "", "update_default_options"]], "qiskit_algorithms.gradients.SPSAEstimatorGradient": [[79, 3, 1, "", "derivative_type"], [79, 3, 1, "", "options"], [79, 2, 1, "", "run"], [79, 2, 1, "", "update_default_options"]], "qiskit_algorithms.gradients.SPSASamplerGradient": [[80, 3, 1, "", "options"], [80, 2, 1, "", "run"], [80, 2, 1, "", "update_default_options"]], "qiskit_algorithms.gradients.SamplerGradientResult": [[81, 3, 1, "", "gradients"], [81, 3, 1, "", "metadata"], [81, 3, 1, "", "options"]], "qiskit_algorithms.optimizers": [[82, 1, 1, "", "ADAM"], [83, 1, 1, "", "AQGD"], [84, 1, 1, "", "AskData"], [85, 1, 1, "", "BOBYQA"], [86, 1, 1, "", "CG"], [87, 1, 1, "", "COBYLA"], [88, 1, 1, "", "CRS"], [89, 1, 1, "", "DIRECT_L"], [90, 1, 1, "", "DIRECT_L_RAND"], [91, 1, 1, "", "ESCH"], [92, 1, 1, "", "GSLS"], [93, 1, 1, "", "GradientDescent"], [94, 1, 1, "", "GradientDescentState"], [95, 1, 1, "", "IMFIL"], [96, 1, 1, "", "ISRES"], [97, 1, 1, "", "L_BFGS_B"], [98, 1, 1, "", "Minimizer"], [99, 1, 1, "", "NELDER_MEAD"], [100, 1, 1, "", "NFT"], [101, 1, 1, "", "Optimizer"], [102, 1, 1, "", "OptimizerResult"], [103, 1, 1, "", "OptimizerState"], [104, 1, 1, "", "POWELL"], [105, 1, 1, "", "P_BFGS"], [106, 1, 1, "", "QNSPSA"], [107, 1, 1, "", "SLSQP"], [108, 1, 1, "", "SNOBFIT"], [109, 1, 1, "", "SPSA"], [110, 1, 1, "", "SciPyOptimizer"], [111, 1, 1, "", "SteppableOptimizer"], [112, 1, 1, "", "TNC"], [113, 1, 1, "", "TellData"], [114, 1, 1, "", "UMDA"], [115, 0, 0, "-", "optimizer_utils"]], "qiskit_algorithms.optimizers.ADAM": [[82, 3, 1, "", "bounds_support_level"], [82, 2, 1, "", "get_support_level"], [82, 2, 1, "", "gradient_num_diff"], [82, 3, 1, "", "gradient_support_level"], [82, 3, 1, "", "initial_point_support_level"], [82, 3, 1, "", "is_bounds_ignored"], [82, 3, 1, "", "is_bounds_required"], [82, 3, 1, "", "is_bounds_supported"], [82, 3, 1, "", "is_gradient_ignored"], [82, 3, 1, "", "is_gradient_required"], [82, 3, 1, "", "is_gradient_supported"], [82, 3, 1, "", "is_initial_point_ignored"], [82, 3, 1, "", "is_initial_point_required"], [82, 3, 1, "", "is_initial_point_supported"], [82, 2, 1, "", "load_params"], [82, 2, 1, "", "minimize"], [82, 2, 1, "", "print_options"], [82, 2, 1, "", "save_params"], [82, 2, 1, "", "set_max_evals_grouped"], [82, 2, 1, "", "set_options"], [82, 3, 1, "", "setting"], [82, 3, 1, "", "settings"], [82, 2, 1, "", "wrap_function"]], "qiskit_algorithms.optimizers.AQGD": [[83, 3, 1, "", "bounds_support_level"], [83, 2, 1, "", "get_support_level"], [83, 2, 1, "", "gradient_num_diff"], [83, 3, 1, "", "gradient_support_level"], [83, 3, 1, "", "initial_point_support_level"], [83, 3, 1, "", "is_bounds_ignored"], [83, 3, 1, "", "is_bounds_required"], [83, 3, 1, "", "is_bounds_supported"], [83, 3, 1, "", "is_gradient_ignored"], [83, 3, 1, "", "is_gradient_required"], [83, 3, 1, "", "is_gradient_supported"], [83, 3, 1, "", "is_initial_point_ignored"], [83, 3, 1, "", "is_initial_point_required"], [83, 3, 1, "", "is_initial_point_supported"], [83, 2, 1, "", "minimize"], [83, 2, 1, "", "print_options"], [83, 2, 1, "", "set_max_evals_grouped"], [83, 2, 1, "", "set_options"], [83, 3, 1, "", "setting"], [83, 3, 1, "", "settings"], [83, 2, 1, "", "wrap_function"]], "qiskit_algorithms.optimizers.AskData": [[84, 3, 1, "", "x_fun"], [84, 3, 1, "", "x_jac"]], "qiskit_algorithms.optimizers.BOBYQA": [[85, 3, 1, "", "bounds_support_level"], [85, 2, 1, "", "get_support_level"], [85, 2, 1, "", "gradient_num_diff"], [85, 3, 1, "", "gradient_support_level"], [85, 3, 1, "", "initial_point_support_level"], [85, 3, 1, "", "is_bounds_ignored"], [85, 3, 1, "", "is_bounds_required"], [85, 3, 1, "", "is_bounds_supported"], [85, 3, 1, "", "is_gradient_ignored"], [85, 3, 1, "", "is_gradient_required"], [85, 3, 1, "", "is_gradient_supported"], [85, 3, 1, "", "is_initial_point_ignored"], [85, 3, 1, "", "is_initial_point_required"], [85, 3, 1, "", "is_initial_point_supported"], [85, 2, 1, "", "minimize"], [85, 2, 1, "", "print_options"], [85, 2, 1, "", "set_max_evals_grouped"], [85, 2, 1, "", "set_options"], [85, 3, 1, "", "setting"], [85, 3, 1, "", "settings"], [85, 2, 1, "", "wrap_function"]], "qiskit_algorithms.optimizers.CG": [[86, 3, 1, "", "bounds_support_level"], [86, 2, 1, "", "get_support_level"], [86, 2, 1, "", "gradient_num_diff"], [86, 3, 1, "", "gradient_support_level"], [86, 3, 1, "", "initial_point_support_level"], [86, 3, 1, "", "is_bounds_ignored"], [86, 3, 1, "", "is_bounds_required"], [86, 3, 1, "", "is_bounds_supported"], [86, 3, 1, "", "is_gradient_ignored"], [86, 3, 1, "", "is_gradient_required"], [86, 3, 1, "", "is_gradient_supported"], [86, 3, 1, "", "is_initial_point_ignored"], [86, 3, 1, "", "is_initial_point_required"], [86, 3, 1, "", "is_initial_point_supported"], [86, 2, 1, "", "minimize"], [86, 2, 1, "", "print_options"], [86, 2, 1, "", "set_max_evals_grouped"], [86, 2, 1, "", "set_options"], [86, 3, 1, "", "setting"], [86, 3, 1, "", "settings"], [86, 2, 1, "", "wrap_function"]], "qiskit_algorithms.optimizers.COBYLA": [[87, 3, 1, "", "bounds_support_level"], [87, 2, 1, "", "get_support_level"], [87, 2, 1, "", "gradient_num_diff"], [87, 3, 1, "", "gradient_support_level"], [87, 3, 1, "", "initial_point_support_level"], [87, 3, 1, "", "is_bounds_ignored"], [87, 3, 1, "", "is_bounds_required"], [87, 3, 1, "", "is_bounds_supported"], [87, 3, 1, "", "is_gradient_ignored"], [87, 3, 1, "", "is_gradient_required"], [87, 3, 1, "", "is_gradient_supported"], [87, 3, 1, "", "is_initial_point_ignored"], [87, 3, 1, "", "is_initial_point_required"], [87, 3, 1, "", "is_initial_point_supported"], [87, 2, 1, "", "minimize"], [87, 2, 1, "", "print_options"], [87, 2, 1, "", "set_max_evals_grouped"], [87, 2, 1, "", "set_options"], [87, 3, 1, "", "setting"], [87, 3, 1, "", "settings"], [87, 2, 1, "", "wrap_function"]], "qiskit_algorithms.optimizers.CRS": [[88, 3, 1, "", "bounds_support_level"], [88, 2, 1, "", "get_nlopt_optimizer"], [88, 2, 1, "", "get_support_level"], [88, 2, 1, "", "gradient_num_diff"], [88, 3, 1, "", "gradient_support_level"], [88, 3, 1, "", "initial_point_support_level"], [88, 3, 1, "", "is_bounds_ignored"], [88, 3, 1, "", "is_bounds_required"], [88, 3, 1, "", "is_bounds_supported"], [88, 3, 1, "", "is_gradient_ignored"], [88, 3, 1, "", "is_gradient_required"], [88, 3, 1, "", "is_gradient_supported"], [88, 3, 1, "", "is_initial_point_ignored"], [88, 3, 1, "", "is_initial_point_required"], [88, 3, 1, "", "is_initial_point_supported"], [88, 2, 1, "", "minimize"], [88, 2, 1, "", "print_options"], [88, 2, 1, "", "set_max_evals_grouped"], [88, 2, 1, "", "set_options"], [88, 3, 1, "", "setting"], [88, 3, 1, "", "settings"], [88, 2, 1, "", "wrap_function"]], "qiskit_algorithms.optimizers.DIRECT_L": [[89, 3, 1, "", "bounds_support_level"], [89, 2, 1, "", "get_nlopt_optimizer"], [89, 2, 1, "", "get_support_level"], [89, 2, 1, "", "gradient_num_diff"], [89, 3, 1, "", "gradient_support_level"], [89, 3, 1, "", "initial_point_support_level"], [89, 3, 1, "", "is_bounds_ignored"], [89, 3, 1, "", "is_bounds_required"], [89, 3, 1, "", "is_bounds_supported"], [89, 3, 1, "", "is_gradient_ignored"], [89, 3, 1, "", "is_gradient_required"], [89, 3, 1, "", "is_gradient_supported"], [89, 3, 1, "", "is_initial_point_ignored"], [89, 3, 1, "", "is_initial_point_required"], [89, 3, 1, "", "is_initial_point_supported"], [89, 2, 1, "", "minimize"], [89, 2, 1, "", "print_options"], [89, 2, 1, "", "set_max_evals_grouped"], [89, 2, 1, "", "set_options"], [89, 3, 1, "", "setting"], [89, 3, 1, "", "settings"], [89, 2, 1, "", "wrap_function"]], "qiskit_algorithms.optimizers.DIRECT_L_RAND": [[90, 3, 1, "", "bounds_support_level"], [90, 2, 1, "", "get_nlopt_optimizer"], [90, 2, 1, "", "get_support_level"], [90, 2, 1, "", "gradient_num_diff"], [90, 3, 1, "", "gradient_support_level"], [90, 3, 1, "", "initial_point_support_level"], [90, 3, 1, "", "is_bounds_ignored"], [90, 3, 1, "", "is_bounds_required"], [90, 3, 1, "", "is_bounds_supported"], [90, 3, 1, "", "is_gradient_ignored"], [90, 3, 1, "", "is_gradient_required"], [90, 3, 1, "", "is_gradient_supported"], [90, 3, 1, "", "is_initial_point_ignored"], [90, 3, 1, "", "is_initial_point_required"], [90, 3, 1, "", "is_initial_point_supported"], [90, 2, 1, "", "minimize"], [90, 2, 1, "", "print_options"], [90, 2, 1, "", "set_max_evals_grouped"], [90, 2, 1, "", "set_options"], [90, 3, 1, "", "setting"], [90, 3, 1, "", "settings"], [90, 2, 1, "", "wrap_function"]], "qiskit_algorithms.optimizers.ESCH": [[91, 3, 1, "", "bounds_support_level"], [91, 2, 1, "", "get_nlopt_optimizer"], [91, 2, 1, "", "get_support_level"], [91, 2, 1, "", "gradient_num_diff"], [91, 3, 1, "", "gradient_support_level"], [91, 3, 1, "", "initial_point_support_level"], [91, 3, 1, "", "is_bounds_ignored"], [91, 3, 1, "", "is_bounds_required"], [91, 3, 1, "", "is_bounds_supported"], [91, 3, 1, "", "is_gradient_ignored"], [91, 3, 1, "", "is_gradient_required"], [91, 3, 1, "", "is_gradient_supported"], [91, 3, 1, "", "is_initial_point_ignored"], [91, 3, 1, "", "is_initial_point_required"], [91, 3, 1, "", "is_initial_point_supported"], [91, 2, 1, "", "minimize"], [91, 2, 1, "", "print_options"], [91, 2, 1, "", "set_max_evals_grouped"], [91, 2, 1, "", "set_options"], [91, 3, 1, "", "setting"], [91, 3, 1, "", "settings"], [91, 2, 1, "", "wrap_function"]], "qiskit_algorithms.optimizers.GSLS": [[92, 3, 1, "", "bounds_support_level"], [92, 2, 1, "", "get_support_level"], [92, 2, 1, "", "gradient_approximation"], [92, 2, 1, "", "gradient_num_diff"], [92, 3, 1, "", "gradient_support_level"], [92, 3, 1, "", "initial_point_support_level"], [92, 3, 1, "", "is_bounds_ignored"], [92, 3, 1, "", "is_bounds_required"], [92, 3, 1, "", "is_bounds_supported"], [92, 3, 1, "", "is_gradient_ignored"], [92, 3, 1, "", "is_gradient_required"], [92, 3, 1, "", "is_gradient_supported"], [92, 3, 1, "", "is_initial_point_ignored"], [92, 3, 1, "", "is_initial_point_required"], [92, 3, 1, "", "is_initial_point_supported"], [92, 2, 1, "", "ls_optimize"], [92, 2, 1, "", "minimize"], [92, 2, 1, "", "print_options"], [92, 2, 1, "", "sample_points"], [92, 2, 1, "", "sample_set"], [92, 2, 1, "", "set_max_evals_grouped"], [92, 2, 1, "", "set_options"], [92, 3, 1, "", "setting"], [92, 3, 1, "", "settings"], [92, 2, 1, "", "wrap_function"]], "qiskit_algorithms.optimizers.GradientDescent": [[93, 2, 1, "", "ask"], [93, 3, 1, "", "bounds_support_level"], [93, 2, 1, "", "continue_condition"], [93, 2, 1, "", "create_result"], [93, 2, 1, "", "evaluate"], [93, 2, 1, "", "get_support_level"], [93, 2, 1, "", "gradient_num_diff"], [93, 3, 1, "", "gradient_support_level"], [93, 3, 1, "", "initial_point_support_level"], [93, 3, 1, "", "is_bounds_ignored"], [93, 3, 1, "", "is_bounds_required"], [93, 3, 1, "", "is_bounds_supported"], [93, 3, 1, "", "is_gradient_ignored"], [93, 3, 1, "", "is_gradient_required"], [93, 3, 1, "", "is_gradient_supported"], [93, 3, 1, "", "is_initial_point_ignored"], [93, 3, 1, "", "is_initial_point_required"], [93, 3, 1, "", "is_initial_point_supported"], [93, 2, 1, "", "minimize"], [93, 3, 1, "", "perturbation"], [93, 2, 1, "", "print_options"], [93, 2, 1, "", "set_max_evals_grouped"], [93, 2, 1, "", "set_options"], [93, 3, 1, "", "setting"], [93, 3, 1, "", "settings"], [93, 2, 1, "", "start"], [93, 3, 1, "", "state"], [93, 2, 1, "", "step"], [93, 2, 1, "", "tell"], [93, 3, 1, "", "tol"], [93, 2, 1, "", "wrap_function"]], "qiskit_algorithms.optimizers.GradientDescentState": [[94, 3, 1, "", "fun"], [94, 3, 1, "", "jac"], [94, 3, 1, "", "learning_rate"], [94, 3, 1, "", "nfev"], [94, 3, 1, "", "nit"], [94, 3, 1, "", "njev"], [94, 3, 1, "", "stepsize"], [94, 3, 1, "", "x"]], "qiskit_algorithms.optimizers.IMFIL": [[95, 3, 1, "", "bounds_support_level"], [95, 2, 1, "", "get_support_level"], [95, 2, 1, "", "gradient_num_diff"], [95, 3, 1, "", "gradient_support_level"], [95, 3, 1, "", "initial_point_support_level"], [95, 3, 1, "", "is_bounds_ignored"], [95, 3, 1, "", "is_bounds_required"], [95, 3, 1, "", "is_bounds_supported"], [95, 3, 1, "", "is_gradient_ignored"], [95, 3, 1, "", "is_gradient_required"], [95, 3, 1, "", "is_gradient_supported"], [95, 3, 1, "", "is_initial_point_ignored"], [95, 3, 1, "", "is_initial_point_required"], [95, 3, 1, "", "is_initial_point_supported"], [95, 2, 1, "", "minimize"], [95, 2, 1, "", "print_options"], [95, 2, 1, "", "set_max_evals_grouped"], [95, 2, 1, "", "set_options"], [95, 3, 1, "", "setting"], [95, 3, 1, "", "settings"], [95, 2, 1, "", "wrap_function"]], "qiskit_algorithms.optimizers.ISRES": [[96, 3, 1, "", "bounds_support_level"], [96, 2, 1, "", "get_nlopt_optimizer"], [96, 2, 1, "", "get_support_level"], [96, 2, 1, "", "gradient_num_diff"], [96, 3, 1, "", "gradient_support_level"], [96, 3, 1, "", "initial_point_support_level"], [96, 3, 1, "", "is_bounds_ignored"], [96, 3, 1, "", "is_bounds_required"], [96, 3, 1, "", "is_bounds_supported"], [96, 3, 1, "", "is_gradient_ignored"], [96, 3, 1, "", "is_gradient_required"], [96, 3, 1, "", "is_gradient_supported"], [96, 3, 1, "", "is_initial_point_ignored"], [96, 3, 1, "", "is_initial_point_required"], [96, 3, 1, "", "is_initial_point_supported"], [96, 2, 1, "", "minimize"], [96, 2, 1, "", "print_options"], [96, 2, 1, "", "set_max_evals_grouped"], [96, 2, 1, "", "set_options"], [96, 3, 1, "", "setting"], [96, 3, 1, "", "settings"], [96, 2, 1, "", "wrap_function"]], "qiskit_algorithms.optimizers.L_BFGS_B": [[97, 3, 1, "", "bounds_support_level"], [97, 2, 1, "", "get_support_level"], [97, 2, 1, "", "gradient_num_diff"], [97, 3, 1, "", "gradient_support_level"], [97, 3, 1, "", "initial_point_support_level"], [97, 3, 1, "", "is_bounds_ignored"], [97, 3, 1, "", "is_bounds_required"], [97, 3, 1, "", "is_bounds_supported"], [97, 3, 1, "", "is_gradient_ignored"], [97, 3, 1, "", "is_gradient_required"], [97, 3, 1, "", "is_gradient_supported"], [97, 3, 1, "", "is_initial_point_ignored"], [97, 3, 1, "", "is_initial_point_required"], [97, 3, 1, "", "is_initial_point_supported"], [97, 2, 1, "", "minimize"], [97, 2, 1, "", "print_options"], [97, 2, 1, "", "set_max_evals_grouped"], [97, 2, 1, "", "set_options"], [97, 3, 1, "", "setting"], [97, 3, 1, "", "settings"], [97, 2, 1, "", "wrap_function"]], "qiskit_algorithms.optimizers.NELDER_MEAD": [[99, 3, 1, "", "bounds_support_level"], [99, 2, 1, "", "get_support_level"], [99, 2, 1, "", "gradient_num_diff"], [99, 3, 1, "", "gradient_support_level"], [99, 3, 1, "", "initial_point_support_level"], [99, 3, 1, "", "is_bounds_ignored"], [99, 3, 1, "", "is_bounds_required"], [99, 3, 1, "", "is_bounds_supported"], [99, 3, 1, "", "is_gradient_ignored"], [99, 3, 1, "", "is_gradient_required"], [99, 3, 1, "", "is_gradient_supported"], [99, 3, 1, "", "is_initial_point_ignored"], [99, 3, 1, "", "is_initial_point_required"], [99, 3, 1, "", "is_initial_point_supported"], [99, 2, 1, "", "minimize"], [99, 2, 1, "", "print_options"], [99, 2, 1, "", "set_max_evals_grouped"], [99, 2, 1, "", "set_options"], [99, 3, 1, "", "setting"], [99, 3, 1, "", "settings"], [99, 2, 1, "", "wrap_function"]], "qiskit_algorithms.optimizers.NFT": [[100, 3, 1, "", "bounds_support_level"], [100, 2, 1, "", "get_support_level"], [100, 2, 1, "", "gradient_num_diff"], [100, 3, 1, "", "gradient_support_level"], [100, 3, 1, "", "initial_point_support_level"], [100, 3, 1, "", "is_bounds_ignored"], [100, 3, 1, "", "is_bounds_required"], [100, 3, 1, "", "is_bounds_supported"], [100, 3, 1, "", "is_gradient_ignored"], [100, 3, 1, "", "is_gradient_required"], [100, 3, 1, "", "is_gradient_supported"], [100, 3, 1, "", "is_initial_point_ignored"], [100, 3, 1, "", "is_initial_point_required"], [100, 3, 1, "", "is_initial_point_supported"], [100, 2, 1, "", "minimize"], [100, 2, 1, "", "print_options"], [100, 2, 1, "", "set_max_evals_grouped"], [100, 2, 1, "", "set_options"], [100, 3, 1, "", "setting"], [100, 3, 1, "", "settings"], [100, 2, 1, "", "wrap_function"]], "qiskit_algorithms.optimizers.Optimizer": [[101, 3, 1, "", "bounds_support_level"], [101, 2, 1, "", "get_support_level"], [101, 2, 1, "", "gradient_num_diff"], [101, 3, 1, "", "gradient_support_level"], [101, 3, 1, "", "initial_point_support_level"], [101, 3, 1, "", "is_bounds_ignored"], [101, 3, 1, "", "is_bounds_required"], [101, 3, 1, "", "is_bounds_supported"], [101, 3, 1, "", "is_gradient_ignored"], [101, 3, 1, "", "is_gradient_required"], [101, 3, 1, "", "is_gradient_supported"], [101, 3, 1, "", "is_initial_point_ignored"], [101, 3, 1, "", "is_initial_point_required"], [101, 3, 1, "", "is_initial_point_supported"], [101, 2, 1, "", "minimize"], [101, 2, 1, "", "print_options"], [101, 2, 1, "", "set_max_evals_grouped"], [101, 2, 1, "", "set_options"], [101, 3, 1, "", "setting"], [101, 3, 1, "", "settings"], [101, 2, 1, "", "wrap_function"]], "qiskit_algorithms.optimizers.OptimizerResult": [[102, 2, 1, "", "combine"], [102, 3, 1, "", "fun"], [102, 3, 1, "", "jac"], [102, 3, 1, "", "nfev"], [102, 3, 1, "", "nit"], [102, 3, 1, "", "njev"], [102, 3, 1, "", "x"]], "qiskit_algorithms.optimizers.OptimizerState": [[103, 3, 1, "", "fun"], [103, 3, 1, "", "jac"], [103, 3, 1, "", "nfev"], [103, 3, 1, "", "nit"], [103, 3, 1, "", "njev"], [103, 3, 1, "", "x"]], "qiskit_algorithms.optimizers.POWELL": [[104, 3, 1, "", "bounds_support_level"], [104, 2, 1, "", "get_support_level"], [104, 2, 1, "", "gradient_num_diff"], [104, 3, 1, "", "gradient_support_level"], [104, 3, 1, "", "initial_point_support_level"], [104, 3, 1, "", "is_bounds_ignored"], [104, 3, 1, "", "is_bounds_required"], [104, 3, 1, "", "is_bounds_supported"], [104, 3, 1, "", "is_gradient_ignored"], [104, 3, 1, "", "is_gradient_required"], [104, 3, 1, "", "is_gradient_supported"], [104, 3, 1, "", "is_initial_point_ignored"], [104, 3, 1, "", "is_initial_point_required"], [104, 3, 1, "", "is_initial_point_supported"], [104, 2, 1, "", "minimize"], [104, 2, 1, "", "print_options"], [104, 2, 1, "", "set_max_evals_grouped"], [104, 2, 1, "", "set_options"], [104, 3, 1, "", "setting"], [104, 3, 1, "", "settings"], [104, 2, 1, "", "wrap_function"]], "qiskit_algorithms.optimizers.P_BFGS": [[105, 3, 1, "", "bounds_support_level"], [105, 2, 1, "", "get_support_level"], [105, 2, 1, "", "gradient_num_diff"], [105, 3, 1, "", "gradient_support_level"], [105, 3, 1, "", "initial_point_support_level"], [105, 3, 1, "", "is_bounds_ignored"], [105, 3, 1, "", "is_bounds_required"], [105, 3, 1, "", "is_bounds_supported"], [105, 3, 1, "", "is_gradient_ignored"], [105, 3, 1, "", "is_gradient_required"], [105, 3, 1, "", "is_gradient_supported"], [105, 3, 1, "", "is_initial_point_ignored"], [105, 3, 1, "", "is_initial_point_required"], [105, 3, 1, "", "is_initial_point_supported"], [105, 2, 1, "", "minimize"], [105, 2, 1, "", "print_options"], [105, 2, 1, "", "set_max_evals_grouped"], [105, 2, 1, "", "set_options"], [105, 3, 1, "", "setting"], [105, 3, 1, "", "settings"], [105, 2, 1, "", "wrap_function"]], "qiskit_algorithms.optimizers.QNSPSA": [[106, 3, 1, "", "bounds_support_level"], [106, 2, 1, "", "calibrate"], [106, 2, 1, "", "estimate_stddev"], [106, 2, 1, "", "get_fidelity"], [106, 2, 1, "", "get_support_level"], [106, 2, 1, "", "gradient_num_diff"], [106, 3, 1, "", "gradient_support_level"], [106, 3, 1, "", "initial_point_support_level"], [106, 3, 1, "", "is_bounds_ignored"], [106, 3, 1, "", "is_bounds_required"], [106, 3, 1, "", "is_bounds_supported"], [106, 3, 1, "", "is_gradient_ignored"], [106, 3, 1, "", "is_gradient_required"], [106, 3, 1, "", "is_gradient_supported"], [106, 3, 1, "", "is_initial_point_ignored"], [106, 3, 1, "", "is_initial_point_required"], [106, 3, 1, "", "is_initial_point_supported"], [106, 2, 1, "", "minimize"], [106, 2, 1, "", "print_options"], [106, 2, 1, "", "set_max_evals_grouped"], [106, 2, 1, "", "set_options"], [106, 3, 1, "", "setting"], [106, 3, 1, "", "settings"], [106, 2, 1, "", "wrap_function"]], "qiskit_algorithms.optimizers.SLSQP": [[107, 3, 1, "", "bounds_support_level"], [107, 2, 1, "", "get_support_level"], [107, 2, 1, "", "gradient_num_diff"], [107, 3, 1, "", "gradient_support_level"], [107, 3, 1, "", "initial_point_support_level"], [107, 3, 1, "", "is_bounds_ignored"], [107, 3, 1, "", "is_bounds_required"], [107, 3, 1, "", "is_bounds_supported"], [107, 3, 1, "", "is_gradient_ignored"], [107, 3, 1, "", "is_gradient_required"], [107, 3, 1, "", "is_gradient_supported"], [107, 3, 1, "", "is_initial_point_ignored"], [107, 3, 1, "", "is_initial_point_required"], [107, 3, 1, "", "is_initial_point_supported"], [107, 2, 1, "", "minimize"], [107, 2, 1, "", "print_options"], [107, 2, 1, "", "set_max_evals_grouped"], [107, 2, 1, "", "set_options"], [107, 3, 1, "", "setting"], [107, 3, 1, "", "settings"], [107, 2, 1, "", "wrap_function"]], "qiskit_algorithms.optimizers.SNOBFIT": [[108, 3, 1, "", "bounds_support_level"], [108, 2, 1, "", "get_support_level"], [108, 2, 1, "", "gradient_num_diff"], [108, 3, 1, "", "gradient_support_level"], [108, 3, 1, "", "initial_point_support_level"], [108, 3, 1, "", "is_bounds_ignored"], [108, 3, 1, "", "is_bounds_required"], [108, 3, 1, "", "is_bounds_supported"], [108, 3, 1, "", "is_gradient_ignored"], [108, 3, 1, "", "is_gradient_required"], [108, 3, 1, "", "is_gradient_supported"], [108, 3, 1, "", "is_initial_point_ignored"], [108, 3, 1, "", "is_initial_point_required"], [108, 3, 1, "", "is_initial_point_supported"], [108, 2, 1, "", "minimize"], [108, 2, 1, "", "print_options"], [108, 2, 1, "", "set_max_evals_grouped"], [108, 2, 1, "", "set_options"], [108, 3, 1, "", "setting"], [108, 3, 1, "", "settings"], [108, 2, 1, "", "wrap_function"]], "qiskit_algorithms.optimizers.SPSA": [[109, 3, 1, "", "bounds_support_level"], [109, 2, 1, "", "calibrate"], [109, 2, 1, "", "estimate_stddev"], [109, 2, 1, "", "get_support_level"], [109, 2, 1, "", "gradient_num_diff"], [109, 3, 1, "", "gradient_support_level"], [109, 3, 1, "", "initial_point_support_level"], [109, 3, 1, "", "is_bounds_ignored"], [109, 3, 1, "", "is_bounds_required"], [109, 3, 1, "", "is_bounds_supported"], [109, 3, 1, "", "is_gradient_ignored"], [109, 3, 1, "", "is_gradient_required"], [109, 3, 1, "", "is_gradient_supported"], [109, 3, 1, "", "is_initial_point_ignored"], [109, 3, 1, "", "is_initial_point_required"], [109, 3, 1, "", "is_initial_point_supported"], [109, 2, 1, "", "minimize"], [109, 2, 1, "", "print_options"], [109, 2, 1, "", "set_max_evals_grouped"], [109, 2, 1, "", "set_options"], [109, 3, 1, "", "setting"], [109, 3, 1, "", "settings"], [109, 2, 1, "", "wrap_function"]], "qiskit_algorithms.optimizers.SciPyOptimizer": [[110, 3, 1, "", "bounds_support_level"], [110, 2, 1, "", "get_support_level"], [110, 2, 1, "", "gradient_num_diff"], [110, 3, 1, "", "gradient_support_level"], [110, 3, 1, "", "initial_point_support_level"], [110, 3, 1, "", "is_bounds_ignored"], [110, 3, 1, "", "is_bounds_required"], [110, 3, 1, "", "is_bounds_supported"], [110, 3, 1, "", "is_gradient_ignored"], [110, 3, 1, "", "is_gradient_required"], [110, 3, 1, "", "is_gradient_supported"], [110, 3, 1, "", "is_initial_point_ignored"], [110, 3, 1, "", "is_initial_point_required"], [110, 3, 1, "", "is_initial_point_supported"], [110, 2, 1, "", "minimize"], [110, 2, 1, "", "print_options"], [110, 2, 1, "", "set_max_evals_grouped"], [110, 2, 1, "", "set_options"], [110, 3, 1, "", "setting"], [110, 3, 1, "", "settings"], [110, 2, 1, "", "wrap_function"]], "qiskit_algorithms.optimizers.SteppableOptimizer": [[111, 2, 1, "", "ask"], [111, 3, 1, "", "bounds_support_level"], [111, 2, 1, "", "continue_condition"], [111, 2, 1, "", "create_result"], [111, 2, 1, "", "evaluate"], [111, 2, 1, "", "get_support_level"], [111, 2, 1, "", "gradient_num_diff"], [111, 3, 1, "", "gradient_support_level"], [111, 3, 1, "", "initial_point_support_level"], [111, 3, 1, "", "is_bounds_ignored"], [111, 3, 1, "", "is_bounds_required"], [111, 3, 1, "", "is_bounds_supported"], [111, 3, 1, "", "is_gradient_ignored"], [111, 3, 1, "", "is_gradient_required"], [111, 3, 1, "", "is_gradient_supported"], [111, 3, 1, "", "is_initial_point_ignored"], [111, 3, 1, "", "is_initial_point_required"], [111, 3, 1, "", "is_initial_point_supported"], [111, 2, 1, "", "minimize"], [111, 2, 1, "", "print_options"], [111, 2, 1, "", "set_max_evals_grouped"], [111, 2, 1, "", "set_options"], [111, 3, 1, "", "setting"], [111, 3, 1, "", "settings"], [111, 2, 1, "", "start"], [111, 3, 1, "", "state"], [111, 2, 1, "", "step"], [111, 2, 1, "", "tell"], [111, 2, 1, "", "wrap_function"]], "qiskit_algorithms.optimizers.TNC": [[112, 3, 1, "", "bounds_support_level"], [112, 2, 1, "", "get_support_level"], [112, 2, 1, "", "gradient_num_diff"], [112, 3, 1, "", "gradient_support_level"], [112, 3, 1, "", "initial_point_support_level"], [112, 3, 1, "", "is_bounds_ignored"], [112, 3, 1, "", "is_bounds_required"], [112, 3, 1, "", "is_bounds_supported"], [112, 3, 1, "", "is_gradient_ignored"], [112, 3, 1, "", "is_gradient_required"], [112, 3, 1, "", "is_gradient_supported"], [112, 3, 1, "", "is_initial_point_ignored"], [112, 3, 1, "", "is_initial_point_required"], [112, 3, 1, "", "is_initial_point_supported"], [112, 2, 1, "", "minimize"], [112, 2, 1, "", "print_options"], [112, 2, 1, "", "set_max_evals_grouped"], [112, 2, 1, "", "set_options"], [112, 3, 1, "", "setting"], [112, 3, 1, "", "settings"], [112, 2, 1, "", "wrap_function"]], "qiskit_algorithms.optimizers.TellData": [[113, 3, 1, "", "eval_fun"], [113, 3, 1, "", "eval_jac"]], "qiskit_algorithms.optimizers.UMDA": [[114, 3, 1, "", "ELITE_FACTOR"], [114, 3, 1, "", "STD_BOUND"], [114, 3, 1, "", "alpha"], [114, 3, 1, "", "bounds_support_level"], [114, 2, 1, "", "get_support_level"], [114, 2, 1, "", "gradient_num_diff"], [114, 3, 1, "", "gradient_support_level"], [114, 3, 1, "", "initial_point_support_level"], [114, 3, 1, "", "is_bounds_ignored"], [114, 3, 1, "", "is_bounds_required"], [114, 3, 1, "", "is_bounds_supported"], [114, 3, 1, "", "is_gradient_ignored"], [114, 3, 1, "", "is_gradient_required"], [114, 3, 1, "", "is_gradient_supported"], [114, 3, 1, "", "is_initial_point_ignored"], [114, 3, 1, "", "is_initial_point_required"], [114, 3, 1, "", "is_initial_point_supported"], [114, 3, 1, "", "maxiter"], [114, 2, 1, "", "minimize"], [114, 2, 1, "", "print_options"], [114, 2, 1, "", "set_max_evals_grouped"], [114, 2, 1, "", "set_options"], [114, 3, 1, "", "setting"], [114, 3, 1, "", "settings"], [114, 3, 1, "", "size_gen"], [114, 2, 1, "", "wrap_function"]], "qiskit_algorithms.optimizers.optimizer_utils": [[116, 1, 1, "", "LearningRate"]], "qiskit_algorithms.optimizers.optimizer_utils.LearningRate": [[116, 2, 1, "", "close"], [116, 3, 1, "", "current"], [116, 2, 1, "", "send"], [116, 2, 1, "", "throw"]], "qiskit_algorithms.state_fidelities": [[117, 1, 1, "", "BaseStateFidelity"], [118, 1, 1, "", "ComputeUncompute"], [119, 1, 1, "", "StateFidelityResult"]], "qiskit_algorithms.state_fidelities.BaseStateFidelity": [[117, 2, 1, "", "create_fidelity_circuit"], [117, 2, 1, "", "run"]], "qiskit_algorithms.state_fidelities.ComputeUncompute": [[118, 2, 1, "", "create_fidelity_circuit"], [118, 3, 1, "", "options"], [118, 2, 1, "", "run"], [118, 2, 1, "", "update_default_options"]], "qiskit_algorithms.state_fidelities.StateFidelityResult": [[119, 3, 1, "", "fidelities"], [119, 3, 1, "", "metadata"], [119, 3, 1, "", "options"], [119, 3, 1, "", "raw_fidelities"]], "qiskit_algorithms.time_evolvers": [[5, 0, 0, "-", "variational"]], "qiskit_algorithms.time_evolvers.variational": [[120, 1, 1, "", "ForwardEulerSolver"], [121, 1, 1, "", "ImaginaryMcLachlanPrinciple"], [122, 1, 1, "", "ImaginaryVariationalPrinciple"], [123, 1, 1, "", "RealMcLachlanPrinciple"], [124, 1, 1, "", "RealVariationalPrinciple"], [125, 1, 1, "", "VariationalPrinciple"]], "qiskit_algorithms.time_evolvers.variational.ForwardEulerSolver": [[120, 3, 1, "", "TOO_SMALL_STEP"], [120, 3, 1, "", "step_size"]], "qiskit_algorithms.time_evolvers.variational.ImaginaryMcLachlanPrinciple": [[121, 2, 1, "", "evolution_gradient"]], "qiskit_algorithms.time_evolvers.variational.RealMcLachlanPrinciple": [[123, 2, 1, "", "evolution_gradient"]], "qiskit_algorithms.time_evolvers.variational.VariationalPrinciple": [[125, 2, 1, "", "evolution_gradient"], [125, 3, 1, "", "gradient"], [125, 2, 1, "", "metric_tensor"], [125, 3, 1, "", "qgt"]], "qiskit_algorithms.utils": [[6, 0, 0, "-", "algorithm_globals"]], "qiskit_algorithms.utils.algorithm_globals": [[6, 3, 1, "", "random"], [6, 3, 1, "", "random_seed"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "exception", "Python exception"]}, "titleterms": {"qiskit": [0, 8, 126, 128, 135], "algorithm": [0, 8, 126, 129, 130, 131, 132, 137], "qiskit_algorithm": [0, 2, 3, 4, 5, 115, 135], "amplitud": [0, 131], "amplifi": 0, "estim": [0, 135], "eigensolv": [0, 19], "gradient": [0, 2, 127, 133, 134, 135], "minimum": 0, "optim": [0, 3, 101, 115, 130, 133, 135], "phase": 0, "state": [0, 4, 131], "fidel": [0, 4], "time": [0, 5, 134, 136], "evolv": [0, 5], "variat": [0, 5, 129, 133, 134], "quantum": [0, 2, 129, 130, 133, 134, 135, 136], "evolut": [0, 134, 136], "miscellan": 0, "except": 0, "util": [0, 6, 115], "class": [0, 2, 3, 131], "algorithmerror": 1, "base": [2, 3, 133, 135], "finit": [2, 135], "differ": [2, 131, 135], "linear": [2, 135], "combin": [2, 135], "unitari": [2, 135], "paramet": [2, 135], "shift": [2, 135], "rule": 2, "fisher": [2, 135], "inform": [2, 135], "classic": [2, 134, 135], "method": 2, "simultan": 2, "perturb": 2, "stochast": 2, "approxim": [2, 130], "steppabl": 3, "local": 3, "global": 3, "state_fidel": 4, "result": [4, 134], "time_evolv": 5, "principl": 5, "od": 5, "solver": 5, "algorithm_glob": 6, "get": 7, "start": 7, "instal": 7, "option": [7, 127], "readi": 7, "go": 7, "document": 8, "overview": [8, 136], "next": 8, "step": 8, "releas": 9, "note": 9, "0": 9, "3": [9, 132], "1": 9, "bug": 9, "fix": 9, "other": [9, 131], "prelud": 9, "new": 9, "featur": 9, "2": 9, "upgrad": 9, "adaptvq": 10, "adaptvqeresult": 11, "algorithmjob": 12, "amplificationproblem": 13, "amplitudeamplifi": 14, "amplitudeestim": [15, 17], "amplitudeestimationresult": 16, "amplitudeestimatorresult": 18, "eigensolverresult": 20, "estimationproblem": 21, "fasteramplitudeestim": 22, "fasteramplitudeestimationresult": 23, "grover": [24, 131, 132], "groverresult": 25, "hamiltonianphaseestim": 26, "hamiltonianphaseestimationresult": 27, "imaginarytimeevolv": 28, "iterativeamplitudeestim": 29, "iterativeamplitudeestimationresult": 30, "iterativephaseestim": 31, "maximumlikelihoodamplitudeestim": 32, "maximumlikelihoodamplitudeestimationresult": 33, "minimumeigensolv": 34, "minimumeigensolverresult": 35, "numpyeigensolv": 36, "numpyeigensolverresult": 37, "numpyminimumeigensolv": 38, "numpyminimumeigensolverresult": 39, "pvqd": 40, "pvqdresult": 41, "phaseestim": 42, "phaseestimationresult": 43, "phaseestimationscal": 44, "qaoa": 45, "realtimeevolv": 46, "samplingminimumeigensolv": 47, "samplingminimumeigensolverresult": 48, "samplingvq": 49, "samplingvqeresult": 50, "scipyimaginaryevolv": 51, "scipyrealevolv": 52, "timeevolutionproblem": 53, "timeevolutionresult": 54, "trotterqrt": 55, "vqd": [56, 129], "vqdresult": 57, "vqe": [58, 126, 127, 128, 135], "vqeresult": 59, "varqit": [60, 134], "varqrt": [61, 134], "varqteresult": 62, "baseestimatorgradi": 63, "baseqgt": 64, "basesamplergradi": 65, "estimatorgradientresult": 66, "finitediffestimatorgradi": 67, "finitediffsamplergradi": 68, "lincombestimatorgradi": 69, "lincombqgt": 70, "lincombsamplergradi": 71, "paramshiftestimatorgradi": 72, "paramshiftsamplergradi": 73, "qfi": [74, 135], "qfiresult": 75, "qgtresult": 76, "reverseestimatorgradi": 77, "reverseqgt": 78, "spsaestimatorgradi": 79, "spsasamplergradi": 80, "samplergradientresult": 81, "adam": 82, "aqgd": 83, "askdata": 84, "bobyqa": 85, "cg": 86, "cobyla": 87, "cr": 88, "direct_l": 89, "direct_l_rand": 90, "esch": 91, "gsl": 92, "gradientdesc": 93, "gradientdescentst": 94, "imfil": 95, "isr": 96, "l_bfgs_b": 97, "minim": 98, "nelder_mead": 99, "nft": 100, "optimizerresult": 102, "optimizerst": 103, "powel": 104, "p_bfg": 105, "qnspsa": 106, "slsqp": 107, "snobfit": 108, "spsa": [109, 135], "scipyoptim": 110, "steppableoptim": 111, "tnc": 112, "telldata": 113, "umda": 114, "optimizer_util": 115, "learningr": 116, "basestatefidel": 117, "computeuncomput": 118, "statefidelityresult": 119, "forwardeulersolv": 120, "imaginarymclachlanprincipl": 121, "imaginaryvariationalprincipl": 122, "realmclachlanprincipl": 123, "realvariationalprincipl": 124, "variationalprincipl": 125, "an": 126, "introduct": [126, 129, 134, 135], "us": [126, 131, 135, 136], "how": 126, "i": 126, "librari": 126, "structur": 126, "run": [126, 131, 134], "A": [126, 135], "complet": [126, 129], "work": [126, 129], "exampl": [126, 129, 132, 135], "updat": 126, "primit": [126, 128, 135], "insid": 126, "advanc": 127, "callback": 127, "initi": 127, "point": 127, "aer": 128, "perform": 128, "without": 128, "nois": 128, "summari": 128, "deflat": 129, "": [131, 132], "amplif": 131, "type": 131, "oracl": 131, "prepar": 131, "full": 131, "flexibl": 131, "dive": 131, "argument": 131, "specifi": 131, "good_stat": 131, "The": [131, 135], "number": 131, "iter": 131, "appli": 131, "post_process": 131, "find": 132, "solut": [132, 134], "sat": 132, "problem": 132, "boolean": 132, "logic": 132, "express": 132, "project": 133, "dynam": 133, "varqt": 134, "imaginari": 134, "exact": 134, "comparison": 134, "effici": 134, "calcul": 134, "real": [134, 136], "wai": 134, "framework": 135, "quick": 135, "refresh": 135, "sampl": 135, "expect": 135, "evalu": 135, "circuit": 135, "sampler": 135, "geometr": 135, "tensor": 135, "qgt": 135, "applic": 135, "trotter": 136, "auxiliari": 136, "oper": 136, "product": 136, "formula": 136, "magnet": 136, "plot": 136, "refer": 136, "tutori": 137}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "nbsphinx": 4, "sphinx": 58}, "alltitles": {"Qiskit Algorithms (qiskit_algorithms)": [[0, "qiskit-algorithms-qiskit-algorithms"]], "Algorithms": [[0, "algorithms"]], "Amplitude Amplifiers": [[0, "amplitude-amplifiers"]], "Amplitude Estimators": [[0, "amplitude-estimators"]], "Eigensolvers": [[0, "eigensolvers"]], "Gradients": [[0, "gradients"], [127, "Gradients"], [135, "Gradients"]], "Minimum Eigensolvers": [[0, "minimum-eigensolvers"]], "Optimizers": [[0, "optimizers"]], "Phase Estimators": [[0, "phase-estimators"]], "State Fidelities": [[0, "state-fidelities"], [4, "state-fidelities"]], "Time Evolvers": [[0, "time-evolvers"]], "Variational Quantum Time Evolution": [[0, "variational-quantum-time-evolution"], [134, "Variational-Quantum-Time-Evolution"]], "Miscellaneous": [[0, "miscellaneous"]], "Exceptions": [[0, "exceptions"]], "Utility classes": [[0, "utility-classes"]], "AlgorithmError": [[1, "algorithmerror"]], "Gradients (qiskit_algorithms.gradients)": [[2, "gradients-qiskit-algorithms-gradients"]], "Base Classes": [[2, "base-classes"]], "Finite Differences": [[2, "finite-differences"]], "Linear Combination of Unitaries": [[2, "linear-combination-of-unitaries"]], "Parameter Shift Rules": [[2, "parameter-shift-rules"]], "Quantum Fisher Information": [[2, "quantum-fisher-information"]], "Classical Methods": [[2, "classical-methods"]], "Simultaneous Perturbation Stochastic Approximation": [[2, "simultaneous-perturbation-stochastic-approximation"]], "Optimizers (qiskit_algorithms.optimizers)": [[3, "optimizers-qiskit-algorithms-optimizers"]], "Optimizer Base Classes": [[3, "optimizer-base-classes"]], "Steppable Optimization": [[3, "steppable-optimization"]], "Local Optimizers": [[3, "local-optimizers"]], "Global Optimizers": [[3, "global-optimizers"]], "State Fidelities (qiskit_algorithms.state_fidelities)": [[4, "state-fidelities-qiskit-algorithms-state-fidelities"]], "Results": [[4, "results"]], "Time Evolvers, Variational (qiskit_algorithms.time_evolvers.variational)": [[5, "time-evolvers-variational-qiskit-algorithms-time-evolvers-variational"]], "Variational Principles": [[5, "variational-principles"]], "ODE solvers": [[5, "ode-solvers"]], "utils.algorithm_globals": [[6, "utils-algorithm-globals"]], "Getting started": [[7, "getting-started"]], "Installation": [[7, "installation"]], "Optional installs": [[7, "optional-installs"]], "Ready to get going?\u2026": [[7, "ready-to-get-going"]], "Qiskit Algorithms documentation": [[8, "qiskit-algorithms-documentation"]], "Overview": [[8, "overview"]], "Next Steps": [[8, "next-steps"]], "Release Notes": [[9, "release-notes"]], "0.3.1": [[9, "release-notes-0-3-1"]], "Bug Fixes": [[9, "bug-fixes"], [9, "release-notes-0-3-0-bug-fixes"]], "Other Notes": [[9, "other-notes"], [9, "release-notes-0-2-0-other-notes"]], "0.3.0": [[9, "release-notes-0-3-0"]], "Prelude": [[9, "prelude"], [9, "release-notes-0-1-0-prelude"]], "New Features": [[9, "new-features"], [9, "release-notes-0-1-0-new-features"]], "0.2.0": [[9, "release-notes-0-2-0"]], "Upgrade Notes": [[9, "upgrade-notes"]], "0.1.0": [[9, "release-notes-0-1-0"]], "AdaptVQE": [[10, "adaptvqe"]], "AdaptVQEResult": [[11, "adaptvqeresult"]], "AlgorithmJob": [[12, "algorithmjob"]], "AmplificationProblem": [[13, "amplificationproblem"]], "AmplitudeAmplifier": [[14, "amplitudeamplifier"]], "AmplitudeEstimation": [[15, "amplitudeestimation"]], "AmplitudeEstimationResult": [[16, "amplitudeestimationresult"]], "AmplitudeEstimator": [[17, "amplitudeestimator"]], "AmplitudeEstimatorResult": [[18, "amplitudeestimatorresult"]], "Eigensolver": [[19, "eigensolver"]], "EigensolverResult": [[20, "eigensolverresult"]], "EstimationProblem": [[21, "estimationproblem"]], "FasterAmplitudeEstimation": [[22, "fasteramplitudeestimation"]], "FasterAmplitudeEstimationResult": [[23, "fasteramplitudeestimationresult"]], "Grover": [[24, "grover"]], "GroverResult": [[25, "groverresult"]], "HamiltonianPhaseEstimation": [[26, "hamiltonianphaseestimation"]], "HamiltonianPhaseEstimationResult": [[27, "hamiltonianphaseestimationresult"]], "ImaginaryTimeEvolver": [[28, "imaginarytimeevolver"]], "IterativeAmplitudeEstimation": [[29, "iterativeamplitudeestimation"]], "IterativeAmplitudeEstimationResult": [[30, "iterativeamplitudeestimationresult"]], "IterativePhaseEstimation": [[31, "iterativephaseestimation"]], "MaximumLikelihoodAmplitudeEstimation": [[32, "maximumlikelihoodamplitudeestimation"]], "MaximumLikelihoodAmplitudeEstimationResult": [[33, "maximumlikelihoodamplitudeestimationresult"]], "MinimumEigensolver": [[34, "minimumeigensolver"]], "MinimumEigensolverResult": [[35, "minimumeigensolverresult"]], "NumPyEigensolver": [[36, "numpyeigensolver"]], "NumPyEigensolverResult": [[37, "numpyeigensolverresult"]], "NumPyMinimumEigensolver": [[38, "numpyminimumeigensolver"]], "NumPyMinimumEigensolverResult": [[39, "numpyminimumeigensolverresult"]], "PVQD": [[40, "pvqd"]], "PVQDResult": [[41, "pvqdresult"]], "PhaseEstimation": [[42, "phaseestimation"]], "PhaseEstimationResult": [[43, "phaseestimationresult"]], "PhaseEstimationScale": [[44, "phaseestimationscale"]], "QAOA": [[45, "qaoa"]], "RealTimeEvolver": [[46, "realtimeevolver"]], "SamplingMinimumEigensolver": [[47, "samplingminimumeigensolver"]], "SamplingMinimumEigensolverResult": [[48, "samplingminimumeigensolverresult"]], "SamplingVQE": [[49, "samplingvqe"]], "SamplingVQEResult": [[50, "samplingvqeresult"]], "SciPyImaginaryEvolver": [[51, "scipyimaginaryevolver"]], "SciPyRealEvolver": [[52, "scipyrealevolver"]], "TimeEvolutionProblem": [[53, "timeevolutionproblem"]], "TimeEvolutionResult": [[54, "timeevolutionresult"]], "TrotterQRTE": [[55, "trotterqrte"]], "VQD": [[56, "vqd"]], "VQDResult": [[57, "vqdresult"]], "VQE": [[58, "vqe"]], "VQEResult": [[59, "vqeresult"]], "VarQITE": [[60, "varqite"]], "VarQRTE": [[61, "varqrte"], [134, "VarQRTE"]], "VarQTEResult": [[62, "varqteresult"]], "BaseEstimatorGradient": [[63, "baseestimatorgradient"]], "BaseQGT": [[64, "baseqgt"]], "BaseSamplerGradient": [[65, "basesamplergradient"]], "EstimatorGradientResult": [[66, "estimatorgradientresult"]], "FiniteDiffEstimatorGradient": [[67, "finitediffestimatorgradient"]], "FiniteDiffSamplerGradient": [[68, "finitediffsamplergradient"]], "LinCombEstimatorGradient": [[69, "lincombestimatorgradient"]], "LinCombQGT": [[70, "lincombqgt"]], "LinCombSamplerGradient": [[71, "lincombsamplergradient"]], "ParamShiftEstimatorGradient": [[72, "paramshiftestimatorgradient"]], "ParamShiftSamplerGradient": [[73, "paramshiftsamplergradient"]], "QFI": [[74, "qfi"]], "QFIResult": [[75, "qfiresult"]], "QGTResult": [[76, "qgtresult"]], "ReverseEstimatorGradient": [[77, "reverseestimatorgradient"]], "ReverseQGT": [[78, "reverseqgt"]], "SPSAEstimatorGradient": [[79, "spsaestimatorgradient"]], "SPSASamplerGradient": [[80, "spsasamplergradient"]], "SamplerGradientResult": [[81, "samplergradientresult"]], "ADAM": [[82, "adam"]], "AQGD": [[83, "aqgd"]], "AskData": [[84, "askdata"]], "BOBYQA": [[85, "bobyqa"]], "CG": [[86, "cg"]], "COBYLA": [[87, "cobyla"]], "CRS": [[88, "crs"]], "DIRECT_L": [[89, "direct-l"]], "DIRECT_L_RAND": [[90, "direct-l-rand"]], "ESCH": [[91, "esch"]], "GSLS": [[92, "gsls"]], "GradientDescent": [[93, "gradientdescent"]], "GradientDescentState": [[94, "gradientdescentstate"]], "IMFIL": [[95, "imfil"]], "ISRES": [[96, "isres"]], "L_BFGS_B": [[97, "l-bfgs-b"]], "Minimizer": [[98, "minimizer"]], "NELDER_MEAD": [[99, "nelder-mead"]], "NFT": [[100, "nft"]], "Optimizer": [[101, "optimizer"]], "OptimizerResult": [[102, "optimizerresult"]], "OptimizerState": [[103, "optimizerstate"]], "POWELL": [[104, "powell"]], "P_BFGS": [[105, "p-bfgs"]], "QNSPSA": [[106, "qnspsa"]], "SLSQP": [[107, "slsqp"]], "SNOBFIT": [[108, "snobfit"]], "SPSA": [[109, "spsa"]], "SciPyOptimizer": [[110, "scipyoptimizer"]], "SteppableOptimizer": [[111, "steppableoptimizer"]], "TNC": [[112, "tnc"]], "TellData": [[113, "telldata"]], "UMDA": [[114, "umda"]], "qiskit_algorithms.optimizers.optimizer_utils": [[115, "module-qiskit_algorithms.optimizers.optimizer_utils"]], "Optimizer Utils (qiskit_algorithms.optimizers.optimizer_utils)": [[115, "optimizer-utils-qiskit-algorithms-optimizers-optimizer-utils"]], "LearningRate": [[116, "learningrate"]], "BaseStateFidelity": [[117, "basestatefidelity"]], "ComputeUncompute": [[118, "computeuncompute"]], "StateFidelityResult": [[119, "statefidelityresult"]], "ForwardEulerSolver": [[120, "forwardeulersolver"]], "ImaginaryMcLachlanPrinciple": [[121, "imaginarymclachlanprinciple"]], "ImaginaryVariationalPrinciple": [[122, "imaginaryvariationalprinciple"]], "RealMcLachlanPrinciple": [[123, "realmclachlanprinciple"]], "RealVariationalPrinciple": [[124, "realvariationalprinciple"]], "VariationalPrinciple": [[125, "variationalprinciple"]], "An Introduction to Algorithms using Qiskit": [[126, "An-Introduction-to-Algorithms-using-Qiskit"]], "How is the algorithm library structured?": [[126, "How-is-the-algorithm-library-structured?"]], "How to run an algorithm?": [[126, "How-to-run-an-algorithm?"]], "A complete working example": [[126, "A-complete-working-example"]], "Updating the primitive inside VQE": [[126, "Updating-the-primitive-inside-VQE"]], "Advanced VQE Options": [[127, "Advanced-VQE-Options"]], "Callback": [[127, "Callback"]], "Initial point": [[127, "Initial-point"]], "VQE with Qiskit Aer Primitives": [[128, "VQE-with-Qiskit-Aer-Primitives"]], "Performance without noise": [[128, "Performance-without-noise"]], "Performance with noise": [[128, "Performance-with-noise"]], "Summary": [[128, "Summary"]], "Variational Quantum Deflation (VQD) Algorithm": [[129, "Variational-Quantum-Deflation-(VQD)-Algorithm"]], "Introduction": [[129, "Introduction"], [134, "Introduction"], [135, "Introduction"]], "Complete working example for VQD": [[129, "Complete-working-example-for-VQD"]], "Quantum Approximate Optimization Algorithm": [[130, "Quantum-Approximate-Optimization-Algorithm"]], "Grover\u2019s Algorithm and Amplitude Amplification": [[131, "Grover's-Algorithm-and-Amplitude-Amplification"]], "Grover\u2019s algorithm": [[131, "Grover's-algorithm"]], "Running Grover\u2019s algorithm": [[131, "Running-Grover's-algorithm"]], "Using the different types of classes as the oracle of Grover": [[131, "Using-the-different-types-of-classes-as-the-oracle-of-Grover"]], "Amplitude amplification": [[131, "Amplitude-amplification"]], "State preparation": [[131, "State-preparation"]], "Full flexibility": [[131, "Full-flexibility"]], "Dive into other arguments of Grover": [[131, "Dive-into-other-arguments-of-Grover"]], "Specifying good_state": [[131, "Specifying-good_state"]], "The number of iterations": [[131, "The-number-of-iterations"]], "Applying post_processing": [[131, "Applying-post_processing"]], "Grover\u2019s algorithm examples": [[132, "Grover's-algorithm-examples"]], "Finding solutions to 3-SAT problems": [[132, "Finding-solutions-to-3-SAT-problems"]], "Boolean Logical Expressions": [[132, "Boolean-Logical-Expressions"]], "Projected Variational Quantum Dynamics": [[133, "Projected-Variational-Quantum-Dynamics"]], "Gradient-based optimizations": [[133, "Gradient-based-optimizations"]], "Running VarQTE": [[134, "Running-VarQTE"]], "Imaginary Time Evolution": [[134, "Imaginary-Time-Evolution"]], "Exact Classical Solution": [[134, "Exact-Classical-Solution"]], "Results and Comparison": [[134, "Results-and-Comparison"]], "Efficient classical calculation of gradients with VarQITE": [[134, "Efficient-classical-calculation-of-gradients-with-VarQITE"]], "Real Time Evolution": [[134, "Real-Time-Evolution"]], "Efficient Way to run VarQRTE": [[134, "Efficient-Way-to-run-VarQRTE"]], "Gradient Framework": [[135, "Gradient-Framework"]], "A quick refresher on Qiskit Primitives": [[135, "A-quick-refresher-on-Qiskit-Primitives"]], "The qiskit_algorithms.gradients Framework": [[135, "The-qiskit_algorithms.gradients-Framework"]], "Sampling gradients": [[135, "Sampling-gradients"]], "Expectation gradients": [[135, "Expectation-gradients"]], "Gradient Evaluation of Quantum Circuits": [[135, "Gradient-Evaluation-of-Quantum-Circuits"]], "Parameter Shift Gradients": [[135, "Parameter-Shift-Gradients"]], "Using Estimator": [[135, "Using-Estimator"]], "Using Sampler": [[135, "Using-Sampler"]], "Linear Combination of Unitaries Gradients": [[135, "Linear-Combination-of-Unitaries-Gradients"]], "Finite Difference Gradients": [[135, "Finite-Difference-Gradients"]], "SPSA Gradients": [[135, "SPSA-Gradients"]], "Circuit Quantum Geometric Tensor (QGTs)": [[135, "Circuit-Quantum-Geometric-Tensor-(QGTs)"]], "Linear Combination QGT": [[135, "Linear-Combination-QGT"]], "Quantum Fisher Information (QFI)": [[135, "Quantum-Fisher-Information-(QFI)"]], "Application Example: VQE with gradient-based optimization": [[135, "Application-Example:-VQE-with-gradient-based-optimization"]], "Estimator": [[135, "Estimator"]], "Classical Optimizer": [[135, "Classical-Optimizer"]], "Quantum Real Time Evolution using Trotterization": [[136, "Quantum-Real-Time-Evolution-using-Trotterization"]], "Auxiliary operators": [[136, "Auxiliary-operators"]], "Product formula overview": [[136, "Product-formula-overview"]], "Magnetization evolution plot": [[136, "Magnetization-evolution-plot"]], "References": [[136, "References"]], "Algorithms Tutorials": [[137, "algorithms-tutorials"]]}, "indexentries": {"module": [[0, "module-qiskit_algorithms"], [2, "module-qiskit_algorithms.gradients"], [3, "module-qiskit_algorithms.optimizers"], [4, "module-qiskit_algorithms.state_fidelities"], [5, "module-qiskit_algorithms.time_evolvers.variational"], [6, "module-qiskit_algorithms.utils.algorithm_globals"], [115, "module-qiskit_algorithms.optimizers.optimizer_utils"]], "qiskit_algorithms": [[0, "module-qiskit_algorithms"]], "algorithmerror": [[1, "qiskit_algorithms.AlgorithmError"]], "qiskit_algorithms.gradients": [[2, "module-qiskit_algorithms.gradients"]], "qiskit_algorithms.optimizers": [[3, "module-qiskit_algorithms.optimizers"]], "qiskit_algorithms.state_fidelities": [[4, "module-qiskit_algorithms.state_fidelities"]], "qiskit_algorithms.time_evolvers.variational": [[5, "module-qiskit_algorithms.time_evolvers.variational"]], "qiskit_algorithms.utils.algorithm_globals": [[6, "module-qiskit_algorithms.utils.algorithm_globals"]], "random (in module qiskit_algorithms.utils.algorithm_globals)": [[6, "qiskit_algorithms.utils.algorithm_globals.random"]], "random_seed (in module qiskit_algorithms.utils.algorithm_globals)": [[6, "qiskit_algorithms.utils.algorithm_globals.random_seed"]], "adaptvqe (class in qiskit_algorithms)": [[10, "qiskit_algorithms.AdaptVQE"]], "compute_minimum_eigenvalue() (adaptvqe method)": [[10, "qiskit_algorithms.AdaptVQE.compute_minimum_eigenvalue"]], "eigenvalue_threshold (adaptvqe attribute)": [[10, "qiskit_algorithms.AdaptVQE.eigenvalue_threshold"]], "gradient_threshold (adaptvqe attribute)": [[10, "qiskit_algorithms.AdaptVQE.gradient_threshold"]], "initial_point (adaptvqe attribute)": [[10, "qiskit_algorithms.AdaptVQE.initial_point"]], "max_iterations (adaptvqe attribute)": [[10, "qiskit_algorithms.AdaptVQE.max_iterations"]], "solver (adaptvqe attribute)": [[10, "qiskit_algorithms.AdaptVQE.solver"]], "supports_aux_operators() (adaptvqe class method)": [[10, "qiskit_algorithms.AdaptVQE.supports_aux_operators"]], "adaptvqeresult (class in qiskit_algorithms)": [[11, "qiskit_algorithms.AdaptVQEResult"]], "aux_operators_evaluated (adaptvqeresult attribute)": [[11, "qiskit_algorithms.AdaptVQEResult.aux_operators_evaluated"]], "combine() (adaptvqeresult method)": [[11, "qiskit_algorithms.AdaptVQEResult.combine"]], "cost_function_evals (adaptvqeresult attribute)": [[11, "qiskit_algorithms.AdaptVQEResult.cost_function_evals"]], "eigenvalue (adaptvqeresult attribute)": [[11, "qiskit_algorithms.AdaptVQEResult.eigenvalue"]], "eigenvalue_history (adaptvqeresult attribute)": [[11, "qiskit_algorithms.AdaptVQEResult.eigenvalue_history"]], "final_max_gradient (adaptvqeresult attribute)": [[11, "qiskit_algorithms.AdaptVQEResult.final_max_gradient"]], "num_iterations (adaptvqeresult attribute)": [[11, "qiskit_algorithms.AdaptVQEResult.num_iterations"]], "optimal_circuit (adaptvqeresult attribute)": [[11, "qiskit_algorithms.AdaptVQEResult.optimal_circuit"]], "optimal_parameters (adaptvqeresult attribute)": [[11, "qiskit_algorithms.AdaptVQEResult.optimal_parameters"]], "optimal_point (adaptvqeresult attribute)": [[11, "qiskit_algorithms.AdaptVQEResult.optimal_point"]], "optimal_value (adaptvqeresult attribute)": [[11, "qiskit_algorithms.AdaptVQEResult.optimal_value"]], "optimizer_evals (adaptvqeresult attribute)": [[11, "qiskit_algorithms.AdaptVQEResult.optimizer_evals"]], "optimizer_result (adaptvqeresult attribute)": [[11, "qiskit_algorithms.AdaptVQEResult.optimizer_result"]], "optimizer_time (adaptvqeresult attribute)": [[11, "qiskit_algorithms.AdaptVQEResult.optimizer_time"]], "termination_criterion (adaptvqeresult attribute)": [[11, "qiskit_algorithms.AdaptVQEResult.termination_criterion"]], "algorithmjob (class in qiskit_algorithms)": [[12, "qiskit_algorithms.AlgorithmJob"]], "cancel() (algorithmjob method)": [[12, "qiskit_algorithms.AlgorithmJob.cancel"]], "cancelled() (algorithmjob method)": [[12, "qiskit_algorithms.AlgorithmJob.cancelled"]], "done() (algorithmjob method)": [[12, "qiskit_algorithms.AlgorithmJob.done"]], "in_final_state() (algorithmjob method)": [[12, "qiskit_algorithms.AlgorithmJob.in_final_state"]], "job_id() (algorithmjob method)": [[12, "qiskit_algorithms.AlgorithmJob.job_id"]], "result() (algorithmjob method)": [[12, "qiskit_algorithms.AlgorithmJob.result"]], "running() (algorithmjob method)": [[12, "qiskit_algorithms.AlgorithmJob.running"]], "status() (algorithmjob method)": [[12, "qiskit_algorithms.AlgorithmJob.status"]], "submit() (algorithmjob method)": [[12, "qiskit_algorithms.AlgorithmJob.submit"]], "amplificationproblem (class in qiskit_algorithms)": [[13, "qiskit_algorithms.AmplificationProblem"]], "grover_operator (amplificationproblem attribute)": [[13, "qiskit_algorithms.AmplificationProblem.grover_operator"]], "is_good_state (amplificationproblem attribute)": [[13, "qiskit_algorithms.AmplificationProblem.is_good_state"]], "objective_qubits (amplificationproblem attribute)": [[13, "qiskit_algorithms.AmplificationProblem.objective_qubits"]], "oracle (amplificationproblem attribute)": [[13, "qiskit_algorithms.AmplificationProblem.oracle"]], "post_processing (amplificationproblem attribute)": [[13, "qiskit_algorithms.AmplificationProblem.post_processing"]], "state_preparation (amplificationproblem attribute)": [[13, "qiskit_algorithms.AmplificationProblem.state_preparation"]], "amplitudeamplifier (class in qiskit_algorithms)": [[14, "qiskit_algorithms.AmplitudeAmplifier"]], "amplify() (amplitudeamplifier method)": [[14, "qiskit_algorithms.AmplitudeAmplifier.amplify"]], "amplitudeestimation (class in qiskit_algorithms)": [[15, "qiskit_algorithms.AmplitudeEstimation"]], "compute_confidence_interval() (amplitudeestimation static method)": [[15, "qiskit_algorithms.AmplitudeEstimation.compute_confidence_interval"]], "compute_mle() (amplitudeestimation static method)": [[15, "qiskit_algorithms.AmplitudeEstimation.compute_mle"]], "construct_circuit() (amplitudeestimation method)": [[15, "qiskit_algorithms.AmplitudeEstimation.construct_circuit"]], "estimate() (amplitudeestimation method)": [[15, "qiskit_algorithms.AmplitudeEstimation.estimate"]], "evaluate_measurements() (amplitudeestimation method)": [[15, "qiskit_algorithms.AmplitudeEstimation.evaluate_measurements"]], "sampler (amplitudeestimation attribute)": [[15, "qiskit_algorithms.AmplitudeEstimation.sampler"]], "amplitudeestimationresult (class in qiskit_algorithms)": [[16, "qiskit_algorithms.AmplitudeEstimationResult"]], "circuit_results (amplitudeestimationresult attribute)": [[16, "qiskit_algorithms.AmplitudeEstimationResult.circuit_results"]], "combine() (amplitudeestimationresult method)": [[16, "qiskit_algorithms.AmplitudeEstimationResult.combine"]], "confidence_interval (amplitudeestimationresult attribute)": [[16, "qiskit_algorithms.AmplitudeEstimationResult.confidence_interval"]], "confidence_interval_processed (amplitudeestimationresult attribute)": [[16, "qiskit_algorithms.AmplitudeEstimationResult.confidence_interval_processed"]], "estimation (amplitudeestimationresult attribute)": [[16, "qiskit_algorithms.AmplitudeEstimationResult.estimation"]], "estimation_processed (amplitudeestimationresult attribute)": [[16, "qiskit_algorithms.AmplitudeEstimationResult.estimation_processed"]], "max_probability (amplitudeestimationresult attribute)": [[16, "qiskit_algorithms.AmplitudeEstimationResult.max_probability"]], "measurements (amplitudeestimationresult attribute)": [[16, "qiskit_algorithms.AmplitudeEstimationResult.measurements"]], "mle (amplitudeestimationresult attribute)": [[16, "qiskit_algorithms.AmplitudeEstimationResult.mle"]], "mle_processed (amplitudeestimationresult attribute)": [[16, "qiskit_algorithms.AmplitudeEstimationResult.mle_processed"]], "num_evaluation_qubits (amplitudeestimationresult attribute)": [[16, "qiskit_algorithms.AmplitudeEstimationResult.num_evaluation_qubits"]], "num_oracle_queries (amplitudeestimationresult attribute)": [[16, "qiskit_algorithms.AmplitudeEstimationResult.num_oracle_queries"]], "post_processing (amplitudeestimationresult attribute)": [[16, "qiskit_algorithms.AmplitudeEstimationResult.post_processing"]], "samples (amplitudeestimationresult attribute)": [[16, "qiskit_algorithms.AmplitudeEstimationResult.samples"]], "samples_processed (amplitudeestimationresult attribute)": [[16, "qiskit_algorithms.AmplitudeEstimationResult.samples_processed"]], "shots (amplitudeestimationresult attribute)": [[16, "qiskit_algorithms.AmplitudeEstimationResult.shots"]], "amplitudeestimator (class in qiskit_algorithms)": [[17, "qiskit_algorithms.AmplitudeEstimator"]], "estimate() (amplitudeestimator method)": [[17, "qiskit_algorithms.AmplitudeEstimator.estimate"]], "amplitudeestimatorresult (class in qiskit_algorithms)": [[18, "qiskit_algorithms.AmplitudeEstimatorResult"]], "circuit_results (amplitudeestimatorresult attribute)": [[18, "qiskit_algorithms.AmplitudeEstimatorResult.circuit_results"]], "combine() (amplitudeestimatorresult method)": [[18, "qiskit_algorithms.AmplitudeEstimatorResult.combine"]], "confidence_interval (amplitudeestimatorresult attribute)": [[18, "qiskit_algorithms.AmplitudeEstimatorResult.confidence_interval"]], "confidence_interval_processed (amplitudeestimatorresult attribute)": [[18, "qiskit_algorithms.AmplitudeEstimatorResult.confidence_interval_processed"]], "estimation (amplitudeestimatorresult attribute)": [[18, "qiskit_algorithms.AmplitudeEstimatorResult.estimation"]], "estimation_processed (amplitudeestimatorresult attribute)": [[18, "qiskit_algorithms.AmplitudeEstimatorResult.estimation_processed"]], "num_oracle_queries (amplitudeestimatorresult attribute)": [[18, "qiskit_algorithms.AmplitudeEstimatorResult.num_oracle_queries"]], "post_processing (amplitudeestimatorresult attribute)": [[18, "qiskit_algorithms.AmplitudeEstimatorResult.post_processing"]], "shots (amplitudeestimatorresult attribute)": [[18, "qiskit_algorithms.AmplitudeEstimatorResult.shots"]], "eigensolver (class in qiskit_algorithms)": [[19, "qiskit_algorithms.Eigensolver"]], "compute_eigenvalues() (eigensolver method)": [[19, "qiskit_algorithms.Eigensolver.compute_eigenvalues"]], "supports_aux_operators() (eigensolver class method)": [[19, "qiskit_algorithms.Eigensolver.supports_aux_operators"]], "eigensolverresult (class in qiskit_algorithms)": [[20, "qiskit_algorithms.EigensolverResult"]], "aux_operators_evaluated (eigensolverresult attribute)": [[20, "qiskit_algorithms.EigensolverResult.aux_operators_evaluated"]], "combine() (eigensolverresult method)": [[20, "qiskit_algorithms.EigensolverResult.combine"]], "eigenvalues (eigensolverresult attribute)": [[20, "qiskit_algorithms.EigensolverResult.eigenvalues"]], "estimationproblem (class in qiskit_algorithms)": [[21, "qiskit_algorithms.EstimationProblem"]], "grover_operator (estimationproblem attribute)": [[21, "qiskit_algorithms.EstimationProblem.grover_operator"]], "has_good_state (estimationproblem attribute)": [[21, "qiskit_algorithms.EstimationProblem.has_good_state"]], "is_good_state (estimationproblem attribute)": [[21, "qiskit_algorithms.EstimationProblem.is_good_state"]], "objective_qubits (estimationproblem attribute)": [[21, "qiskit_algorithms.EstimationProblem.objective_qubits"]], "post_processing (estimationproblem attribute)": [[21, "qiskit_algorithms.EstimationProblem.post_processing"]], "rescale() (estimationproblem method)": [[21, "qiskit_algorithms.EstimationProblem.rescale"]], "state_preparation (estimationproblem attribute)": [[21, "qiskit_algorithms.EstimationProblem.state_preparation"]], "fasteramplitudeestimation (class in qiskit_algorithms)": [[22, "qiskit_algorithms.FasterAmplitudeEstimation"]], "construct_circuit() (fasteramplitudeestimation method)": [[22, "qiskit_algorithms.FasterAmplitudeEstimation.construct_circuit"]], "estimate() (fasteramplitudeestimation method)": [[22, "qiskit_algorithms.FasterAmplitudeEstimation.estimate"]], "sampler (fasteramplitudeestimation attribute)": [[22, "qiskit_algorithms.FasterAmplitudeEstimation.sampler"]], "fasteramplitudeestimationresult (class in qiskit_algorithms)": [[23, "qiskit_algorithms.FasterAmplitudeEstimationResult"]], "circuit_results (fasteramplitudeestimationresult attribute)": [[23, "qiskit_algorithms.FasterAmplitudeEstimationResult.circuit_results"]], "combine() (fasteramplitudeestimationresult method)": [[23, "qiskit_algorithms.FasterAmplitudeEstimationResult.combine"]], "confidence_interval (fasteramplitudeestimationresult attribute)": [[23, "qiskit_algorithms.FasterAmplitudeEstimationResult.confidence_interval"]], "confidence_interval_processed (fasteramplitudeestimationresult attribute)": [[23, "qiskit_algorithms.FasterAmplitudeEstimationResult.confidence_interval_processed"]], "estimation (fasteramplitudeestimationresult attribute)": [[23, "qiskit_algorithms.FasterAmplitudeEstimationResult.estimation"]], "estimation_processed (fasteramplitudeestimationresult attribute)": [[23, "qiskit_algorithms.FasterAmplitudeEstimationResult.estimation_processed"]], "num_first_state_steps (fasteramplitudeestimationresult attribute)": [[23, "qiskit_algorithms.FasterAmplitudeEstimationResult.num_first_state_steps"]], "num_oracle_queries (fasteramplitudeestimationresult attribute)": [[23, "qiskit_algorithms.FasterAmplitudeEstimationResult.num_oracle_queries"]], "num_steps (fasteramplitudeestimationresult attribute)": [[23, "qiskit_algorithms.FasterAmplitudeEstimationResult.num_steps"]], "post_processing (fasteramplitudeestimationresult attribute)": [[23, "qiskit_algorithms.FasterAmplitudeEstimationResult.post_processing"]], "shots (fasteramplitudeestimationresult attribute)": [[23, "qiskit_algorithms.FasterAmplitudeEstimationResult.shots"]], "success_probability (fasteramplitudeestimationresult attribute)": [[23, "qiskit_algorithms.FasterAmplitudeEstimationResult.success_probability"]], "theta_intervals (fasteramplitudeestimationresult attribute)": [[23, "qiskit_algorithms.FasterAmplitudeEstimationResult.theta_intervals"]], "grover (class in qiskit_algorithms)": [[24, "qiskit_algorithms.Grover"]], "amplify() (grover method)": [[24, "qiskit_algorithms.Grover.amplify"]], "construct_circuit() (grover method)": [[24, "qiskit_algorithms.Grover.construct_circuit"]], "optimal_num_iterations() (grover static method)": [[24, "qiskit_algorithms.Grover.optimal_num_iterations"]], "sampler (grover attribute)": [[24, "qiskit_algorithms.Grover.sampler"]], "groverresult (class in qiskit_algorithms)": [[25, "qiskit_algorithms.GroverResult"]], "assignment (groverresult attribute)": [[25, "qiskit_algorithms.GroverResult.assignment"]], "circuit_results (groverresult attribute)": [[25, "qiskit_algorithms.GroverResult.circuit_results"]], "combine() (groverresult method)": [[25, "qiskit_algorithms.GroverResult.combine"]], "iterations (groverresult attribute)": [[25, "qiskit_algorithms.GroverResult.iterations"]], "max_probability (groverresult attribute)": [[25, "qiskit_algorithms.GroverResult.max_probability"]], "oracle_evaluation (groverresult attribute)": [[25, "qiskit_algorithms.GroverResult.oracle_evaluation"]], "top_measurement (groverresult attribute)": [[25, "qiskit_algorithms.GroverResult.top_measurement"]], "hamiltonianphaseestimation (class in qiskit_algorithms)": [[26, "qiskit_algorithms.HamiltonianPhaseEstimation"]], "estimate() (hamiltonianphaseestimation method)": [[26, "qiskit_algorithms.HamiltonianPhaseEstimation.estimate"]], "hamiltonianphaseestimationresult (class in qiskit_algorithms)": [[27, "qiskit_algorithms.HamiltonianPhaseEstimationResult"]], "combine() (hamiltonianphaseestimationresult method)": [[27, "qiskit_algorithms.HamiltonianPhaseEstimationResult.combine"]], "filter_phases() (hamiltonianphaseestimationresult method)": [[27, "qiskit_algorithms.HamiltonianPhaseEstimationResult.filter_phases"]], "most_likely_eigenvalue (hamiltonianphaseestimationresult attribute)": [[27, "qiskit_algorithms.HamiltonianPhaseEstimationResult.most_likely_eigenvalue"]], "phase (hamiltonianphaseestimationresult attribute)": [[27, "qiskit_algorithms.HamiltonianPhaseEstimationResult.phase"]], "imaginarytimeevolver (class in qiskit_algorithms)": [[28, "qiskit_algorithms.ImaginaryTimeEvolver"]], "evolve() (imaginarytimeevolver method)": [[28, "qiskit_algorithms.ImaginaryTimeEvolver.evolve"]], "iterativeamplitudeestimation (class in qiskit_algorithms)": [[29, "qiskit_algorithms.IterativeAmplitudeEstimation"]], "construct_circuit() (iterativeamplitudeestimation method)": [[29, "qiskit_algorithms.IterativeAmplitudeEstimation.construct_circuit"]], "epsilon_target (iterativeamplitudeestimation attribute)": [[29, "qiskit_algorithms.IterativeAmplitudeEstimation.epsilon_target"]], "estimate() (iterativeamplitudeestimation method)": [[29, "qiskit_algorithms.IterativeAmplitudeEstimation.estimate"]], "sampler (iterativeamplitudeestimation attribute)": [[29, "qiskit_algorithms.IterativeAmplitudeEstimation.sampler"]], "iterativeamplitudeestimationresult (class in qiskit_algorithms)": [[30, "qiskit_algorithms.IterativeAmplitudeEstimationResult"]], "alpha (iterativeamplitudeestimationresult attribute)": [[30, "qiskit_algorithms.IterativeAmplitudeEstimationResult.alpha"]], "circuit_results (iterativeamplitudeestimationresult attribute)": [[30, "qiskit_algorithms.IterativeAmplitudeEstimationResult.circuit_results"]], "combine() (iterativeamplitudeestimationresult method)": [[30, "qiskit_algorithms.IterativeAmplitudeEstimationResult.combine"]], "confidence_interval (iterativeamplitudeestimationresult attribute)": [[30, "qiskit_algorithms.IterativeAmplitudeEstimationResult.confidence_interval"]], "confidence_interval_processed (iterativeamplitudeestimationresult attribute)": [[30, "qiskit_algorithms.IterativeAmplitudeEstimationResult.confidence_interval_processed"]], "epsilon_estimated (iterativeamplitudeestimationresult attribute)": [[30, "qiskit_algorithms.IterativeAmplitudeEstimationResult.epsilon_estimated"]], "epsilon_estimated_processed (iterativeamplitudeestimationresult attribute)": [[30, "qiskit_algorithms.IterativeAmplitudeEstimationResult.epsilon_estimated_processed"]], "epsilon_target (iterativeamplitudeestimationresult attribute)": [[30, "qiskit_algorithms.IterativeAmplitudeEstimationResult.epsilon_target"]], "estimate_intervals (iterativeamplitudeestimationresult attribute)": [[30, "qiskit_algorithms.IterativeAmplitudeEstimationResult.estimate_intervals"]], "estimation (iterativeamplitudeestimationresult attribute)": [[30, "qiskit_algorithms.IterativeAmplitudeEstimationResult.estimation"]], "estimation_processed (iterativeamplitudeestimationresult attribute)": [[30, "qiskit_algorithms.IterativeAmplitudeEstimationResult.estimation_processed"]], "num_oracle_queries (iterativeamplitudeestimationresult attribute)": [[30, "qiskit_algorithms.IterativeAmplitudeEstimationResult.num_oracle_queries"]], "post_processing (iterativeamplitudeestimationresult attribute)": [[30, "qiskit_algorithms.IterativeAmplitudeEstimationResult.post_processing"]], "powers (iterativeamplitudeestimationresult attribute)": [[30, "qiskit_algorithms.IterativeAmplitudeEstimationResult.powers"]], "ratios (iterativeamplitudeestimationresult attribute)": [[30, "qiskit_algorithms.IterativeAmplitudeEstimationResult.ratios"]], "shots (iterativeamplitudeestimationresult attribute)": [[30, "qiskit_algorithms.IterativeAmplitudeEstimationResult.shots"]], "theta_intervals (iterativeamplitudeestimationresult attribute)": [[30, "qiskit_algorithms.IterativeAmplitudeEstimationResult.theta_intervals"]], "iterativephaseestimation (class in qiskit_algorithms)": [[31, "qiskit_algorithms.IterativePhaseEstimation"]], "construct_circuit() (iterativephaseestimation method)": [[31, "qiskit_algorithms.IterativePhaseEstimation.construct_circuit"]], "estimate() (iterativephaseestimation method)": [[31, "qiskit_algorithms.IterativePhaseEstimation.estimate"]], "maximumlikelihoodamplitudeestimation (class in qiskit_algorithms)": [[32, "qiskit_algorithms.MaximumLikelihoodAmplitudeEstimation"]], "compute_confidence_interval() (maximumlikelihoodamplitudeestimation static method)": [[32, "qiskit_algorithms.MaximumLikelihoodAmplitudeEstimation.compute_confidence_interval"]], "compute_mle() (maximumlikelihoodamplitudeestimation method)": [[32, "qiskit_algorithms.MaximumLikelihoodAmplitudeEstimation.compute_mle"]], "construct_circuits() (maximumlikelihoodamplitudeestimation method)": [[32, "qiskit_algorithms.MaximumLikelihoodAmplitudeEstimation.construct_circuits"]], "estimate() (maximumlikelihoodamplitudeestimation method)": [[32, "qiskit_algorithms.MaximumLikelihoodAmplitudeEstimation.estimate"]], "sampler (maximumlikelihoodamplitudeestimation attribute)": [[32, "qiskit_algorithms.MaximumLikelihoodAmplitudeEstimation.sampler"]], "maximumlikelihoodamplitudeestimationresult (class in qiskit_algorithms)": [[33, "qiskit_algorithms.MaximumLikelihoodAmplitudeEstimationResult"]], "circuit_results (maximumlikelihoodamplitudeestimationresult attribute)": [[33, "qiskit_algorithms.MaximumLikelihoodAmplitudeEstimationResult.circuit_results"]], "combine() (maximumlikelihoodamplitudeestimationresult method)": [[33, "qiskit_algorithms.MaximumLikelihoodAmplitudeEstimationResult.combine"]], "confidence_interval (maximumlikelihoodamplitudeestimationresult attribute)": [[33, "qiskit_algorithms.MaximumLikelihoodAmplitudeEstimationResult.confidence_interval"]], "confidence_interval_processed (maximumlikelihoodamplitudeestimationresult attribute)": [[33, "qiskit_algorithms.MaximumLikelihoodAmplitudeEstimationResult.confidence_interval_processed"]], "estimation (maximumlikelihoodamplitudeestimationresult attribute)": [[33, "qiskit_algorithms.MaximumLikelihoodAmplitudeEstimationResult.estimation"]], "estimation_processed (maximumlikelihoodamplitudeestimationresult attribute)": [[33, "qiskit_algorithms.MaximumLikelihoodAmplitudeEstimationResult.estimation_processed"]], "evaluation_schedule (maximumlikelihoodamplitudeestimationresult attribute)": [[33, "qiskit_algorithms.MaximumLikelihoodAmplitudeEstimationResult.evaluation_schedule"]], "fisher_information (maximumlikelihoodamplitudeestimationresult attribute)": [[33, "qiskit_algorithms.MaximumLikelihoodAmplitudeEstimationResult.fisher_information"]], "good_counts (maximumlikelihoodamplitudeestimationresult attribute)": [[33, "qiskit_algorithms.MaximumLikelihoodAmplitudeEstimationResult.good_counts"]], "minimizer (maximumlikelihoodamplitudeestimationresult attribute)": [[33, "qiskit_algorithms.MaximumLikelihoodAmplitudeEstimationResult.minimizer"]], "num_oracle_queries (maximumlikelihoodamplitudeestimationresult attribute)": [[33, "qiskit_algorithms.MaximumLikelihoodAmplitudeEstimationResult.num_oracle_queries"]], "post_processing (maximumlikelihoodamplitudeestimationresult attribute)": [[33, "qiskit_algorithms.MaximumLikelihoodAmplitudeEstimationResult.post_processing"]], "shots (maximumlikelihoodamplitudeestimationresult attribute)": [[33, "qiskit_algorithms.MaximumLikelihoodAmplitudeEstimationResult.shots"]], "theta (maximumlikelihoodamplitudeestimationresult attribute)": [[33, "qiskit_algorithms.MaximumLikelihoodAmplitudeEstimationResult.theta"]], "minimumeigensolver (class in qiskit_algorithms)": [[34, "qiskit_algorithms.MinimumEigensolver"]], "compute_minimum_eigenvalue() (minimumeigensolver method)": [[34, "qiskit_algorithms.MinimumEigensolver.compute_minimum_eigenvalue"]], "supports_aux_operators() (minimumeigensolver class method)": [[34, "qiskit_algorithms.MinimumEigensolver.supports_aux_operators"]], "minimumeigensolverresult (class in qiskit_algorithms)": [[35, "qiskit_algorithms.MinimumEigensolverResult"]], "aux_operators_evaluated (minimumeigensolverresult attribute)": [[35, "qiskit_algorithms.MinimumEigensolverResult.aux_operators_evaluated"]], "combine() (minimumeigensolverresult method)": [[35, "qiskit_algorithms.MinimumEigensolverResult.combine"]], "eigenvalue (minimumeigensolverresult attribute)": [[35, "qiskit_algorithms.MinimumEigensolverResult.eigenvalue"]], "numpyeigensolver (class in qiskit_algorithms)": [[36, "qiskit_algorithms.NumPyEigensolver"]], "compute_eigenvalues() (numpyeigensolver method)": [[36, "qiskit_algorithms.NumPyEigensolver.compute_eigenvalues"]], "filter_criterion (numpyeigensolver attribute)": [[36, "qiskit_algorithms.NumPyEigensolver.filter_criterion"]], "k (numpyeigensolver attribute)": [[36, "qiskit_algorithms.NumPyEigensolver.k"]], "supports_aux_operators() (numpyeigensolver class method)": [[36, "qiskit_algorithms.NumPyEigensolver.supports_aux_operators"]], "numpyeigensolverresult (class in qiskit_algorithms)": [[37, "qiskit_algorithms.NumPyEigensolverResult"]], "aux_operators_evaluated (numpyeigensolverresult attribute)": [[37, "qiskit_algorithms.NumPyEigensolverResult.aux_operators_evaluated"]], "combine() (numpyeigensolverresult method)": [[37, "qiskit_algorithms.NumPyEigensolverResult.combine"]], "eigenstates (numpyeigensolverresult attribute)": [[37, "qiskit_algorithms.NumPyEigensolverResult.eigenstates"]], "eigenvalues (numpyeigensolverresult attribute)": [[37, "qiskit_algorithms.NumPyEigensolverResult.eigenvalues"]], "numpyminimumeigensolver (class in qiskit_algorithms)": [[38, "qiskit_algorithms.NumPyMinimumEigensolver"]], "compute_minimum_eigenvalue() (numpyminimumeigensolver method)": [[38, "qiskit_algorithms.NumPyMinimumEigensolver.compute_minimum_eigenvalue"]], "filter_criterion (numpyminimumeigensolver attribute)": [[38, "qiskit_algorithms.NumPyMinimumEigensolver.filter_criterion"]], "supports_aux_operators() (numpyminimumeigensolver class method)": [[38, "qiskit_algorithms.NumPyMinimumEigensolver.supports_aux_operators"]], "numpyminimumeigensolverresult (class in qiskit_algorithms)": [[39, "qiskit_algorithms.NumPyMinimumEigensolverResult"]], "aux_operators_evaluated (numpyminimumeigensolverresult attribute)": [[39, "qiskit_algorithms.NumPyMinimumEigensolverResult.aux_operators_evaluated"]], "combine() (numpyminimumeigensolverresult method)": [[39, "qiskit_algorithms.NumPyMinimumEigensolverResult.combine"]], "eigenstate (numpyminimumeigensolverresult attribute)": [[39, "qiskit_algorithms.NumPyMinimumEigensolverResult.eigenstate"]], "eigenvalue (numpyminimumeigensolverresult attribute)": [[39, "qiskit_algorithms.NumPyMinimumEigensolverResult.eigenvalue"]], "pvqd (class in qiskit_algorithms)": [[40, "qiskit_algorithms.PVQD"]], "ansatz (pvqd attribute)": [[40, "qiskit_algorithms.PVQD.ansatz"]], "evolution (pvqd attribute)": [[40, "qiskit_algorithms.PVQD.evolution"]], "evolve() (pvqd method)": [[40, "qiskit_algorithms.PVQD.evolve"]], "get_loss() (pvqd method)": [[40, "qiskit_algorithms.PVQD.get_loss"]], "initial_guess (pvqd attribute)": [[40, "qiskit_algorithms.PVQD.initial_guess"]], "initial_parameters (pvqd attribute)": [[40, "qiskit_algorithms.PVQD.initial_parameters"]], "num_timesteps (pvqd attribute)": [[40, "qiskit_algorithms.PVQD.num_timesteps"]], "optimizer (pvqd attribute)": [[40, "qiskit_algorithms.PVQD.optimizer"]], "step() (pvqd method)": [[40, "qiskit_algorithms.PVQD.step"]], "use_parameter_shift (pvqd attribute)": [[40, "qiskit_algorithms.PVQD.use_parameter_shift"]], "pvqdresult (class in qiskit_algorithms)": [[41, "qiskit_algorithms.PVQDResult"]], "combine() (pvqdresult method)": [[41, "qiskit_algorithms.PVQDResult.combine"]], "phaseestimation (class in qiskit_algorithms)": [[42, "qiskit_algorithms.PhaseEstimation"]], "construct_circuit() (phaseestimation method)": [[42, "qiskit_algorithms.PhaseEstimation.construct_circuit"]], "estimate() (phaseestimation method)": [[42, "qiskit_algorithms.PhaseEstimation.estimate"]], "estimate_from_pe_circuit() (phaseestimation method)": [[42, "qiskit_algorithms.PhaseEstimation.estimate_from_pe_circuit"]], "phaseestimationresult (class in qiskit_algorithms)": [[43, "qiskit_algorithms.PhaseEstimationResult"]], "circuit_result (phaseestimationresult attribute)": [[43, "qiskit_algorithms.PhaseEstimationResult.circuit_result"]], "combine() (phaseestimationresult method)": [[43, "qiskit_algorithms.PhaseEstimationResult.combine"]], "filter_phases() (phaseestimationresult method)": [[43, "qiskit_algorithms.PhaseEstimationResult.filter_phases"]], "phase (phaseestimationresult attribute)": [[43, "qiskit_algorithms.PhaseEstimationResult.phase"]], "phases (phaseestimationresult attribute)": [[43, "qiskit_algorithms.PhaseEstimationResult.phases"]], "phaseestimationscale (class in qiskit_algorithms)": [[44, "qiskit_algorithms.PhaseEstimationScale"]], "from_pauli_sum() (phaseestimationscale class method)": [[44, "qiskit_algorithms.PhaseEstimationScale.from_pauli_sum"]], "scale (phaseestimationscale attribute)": [[44, "qiskit_algorithms.PhaseEstimationScale.scale"]], "scale_phase() (phaseestimationscale method)": [[44, "qiskit_algorithms.PhaseEstimationScale.scale_phase"]], "scale_phases() (phaseestimationscale method)": [[44, "qiskit_algorithms.PhaseEstimationScale.scale_phases"]], "qaoa (class in qiskit_algorithms)": [[45, "qiskit_algorithms.QAOA"]], "aggregation (qaoa attribute)": [[45, "qiskit_algorithms.QAOA.aggregation"]], "callback (qaoa attribute)": [[45, "qiskit_algorithms.QAOA.callback"]], "compute_minimum_eigenvalue() (qaoa method)": [[45, "qiskit_algorithms.QAOA.compute_minimum_eigenvalue"]], "initial_point (qaoa attribute)": [[45, "qiskit_algorithms.QAOA.initial_point"]], "initial_state (qaoa attribute)": [[45, "qiskit_algorithms.QAOA.initial_state"]], "mixer (qaoa attribute)": [[45, "qiskit_algorithms.QAOA.mixer"]], "optimizer (qaoa attribute)": [[45, "qiskit_algorithms.QAOA.optimizer"]], "reps (qaoa attribute)": [[45, "qiskit_algorithms.QAOA.reps"]], "sampler (qaoa attribute)": [[45, "qiskit_algorithms.QAOA.sampler"]], "supports_aux_operators() (qaoa class method)": [[45, "qiskit_algorithms.QAOA.supports_aux_operators"]], "realtimeevolver (class in qiskit_algorithms)": [[46, "qiskit_algorithms.RealTimeEvolver"]], "evolve() (realtimeevolver method)": [[46, "qiskit_algorithms.RealTimeEvolver.evolve"]], "samplingminimumeigensolver (class in qiskit_algorithms)": [[47, "qiskit_algorithms.SamplingMinimumEigensolver"]], "compute_minimum_eigenvalue() (samplingminimumeigensolver method)": [[47, "qiskit_algorithms.SamplingMinimumEigensolver.compute_minimum_eigenvalue"]], "supports_aux_operators() (samplingminimumeigensolver class method)": [[47, "qiskit_algorithms.SamplingMinimumEigensolver.supports_aux_operators"]], "samplingminimumeigensolverresult (class in qiskit_algorithms)": [[48, "qiskit_algorithms.SamplingMinimumEigensolverResult"]], "aux_operators_evaluated (samplingminimumeigensolverresult attribute)": [[48, "qiskit_algorithms.SamplingMinimumEigensolverResult.aux_operators_evaluated"]], "best_measurement (samplingminimumeigensolverresult attribute)": [[48, "qiskit_algorithms.SamplingMinimumEigensolverResult.best_measurement"]], "combine() (samplingminimumeigensolverresult method)": [[48, "qiskit_algorithms.SamplingMinimumEigensolverResult.combine"]], "eigenstate (samplingminimumeigensolverresult attribute)": [[48, "qiskit_algorithms.SamplingMinimumEigensolverResult.eigenstate"]], "eigenvalue (samplingminimumeigensolverresult attribute)": [[48, "qiskit_algorithms.SamplingMinimumEigensolverResult.eigenvalue"]], "samplingvqe (class in qiskit_algorithms)": [[49, "qiskit_algorithms.SamplingVQE"]], "aggregation (samplingvqe attribute)": [[49, "qiskit_algorithms.SamplingVQE.aggregation"]], "ansatz (samplingvqe attribute)": [[49, "qiskit_algorithms.SamplingVQE.ansatz"]], "callback (samplingvqe attribute)": [[49, "qiskit_algorithms.SamplingVQE.callback"]], "compute_minimum_eigenvalue() (samplingvqe method)": [[49, "qiskit_algorithms.SamplingVQE.compute_minimum_eigenvalue"]], "initial_point (samplingvqe attribute)": [[49, "qiskit_algorithms.SamplingVQE.initial_point"]], "optimizer (samplingvqe attribute)": [[49, "qiskit_algorithms.SamplingVQE.optimizer"]], "sampler (samplingvqe attribute)": [[49, "qiskit_algorithms.SamplingVQE.sampler"]], "supports_aux_operators() (samplingvqe class method)": [[49, "qiskit_algorithms.SamplingVQE.supports_aux_operators"]], "samplingvqeresult (class in qiskit_algorithms)": [[50, "qiskit_algorithms.SamplingVQEResult"]], "aux_operators_evaluated (samplingvqeresult attribute)": [[50, "qiskit_algorithms.SamplingVQEResult.aux_operators_evaluated"]], "best_measurement (samplingvqeresult attribute)": [[50, "qiskit_algorithms.SamplingVQEResult.best_measurement"]], "combine() (samplingvqeresult method)": [[50, "qiskit_algorithms.SamplingVQEResult.combine"]], "cost_function_evals (samplingvqeresult attribute)": [[50, "qiskit_algorithms.SamplingVQEResult.cost_function_evals"]], "eigenstate (samplingvqeresult attribute)": [[50, "qiskit_algorithms.SamplingVQEResult.eigenstate"]], "eigenvalue (samplingvqeresult attribute)": [[50, "qiskit_algorithms.SamplingVQEResult.eigenvalue"]], "optimal_circuit (samplingvqeresult attribute)": [[50, "qiskit_algorithms.SamplingVQEResult.optimal_circuit"]], "optimal_parameters (samplingvqeresult attribute)": [[50, "qiskit_algorithms.SamplingVQEResult.optimal_parameters"]], "optimal_point (samplingvqeresult attribute)": [[50, "qiskit_algorithms.SamplingVQEResult.optimal_point"]], "optimal_value (samplingvqeresult attribute)": [[50, "qiskit_algorithms.SamplingVQEResult.optimal_value"]], "optimizer_evals (samplingvqeresult attribute)": [[50, "qiskit_algorithms.SamplingVQEResult.optimizer_evals"]], "optimizer_result (samplingvqeresult attribute)": [[50, "qiskit_algorithms.SamplingVQEResult.optimizer_result"]], "optimizer_time (samplingvqeresult attribute)": [[50, "qiskit_algorithms.SamplingVQEResult.optimizer_time"]], "scipyimaginaryevolver (class in qiskit_algorithms)": [[51, "qiskit_algorithms.SciPyImaginaryEvolver"]], "evolve() (scipyimaginaryevolver method)": [[51, "qiskit_algorithms.SciPyImaginaryEvolver.evolve"]], "scipyrealevolver (class in qiskit_algorithms)": [[52, "qiskit_algorithms.SciPyRealEvolver"]], "evolve() (scipyrealevolver method)": [[52, "qiskit_algorithms.SciPyRealEvolver.evolve"]], "timeevolutionproblem (class in qiskit_algorithms)": [[53, "qiskit_algorithms.TimeEvolutionProblem"]], "aux_operators (timeevolutionproblem attribute)": [[53, "qiskit_algorithms.TimeEvolutionProblem.aux_operators"]], "hamiltonian (timeevolutionproblem attribute)": [[53, "qiskit_algorithms.TimeEvolutionProblem.hamiltonian"]], "initial_state (timeevolutionproblem attribute)": [[53, "qiskit_algorithms.TimeEvolutionProblem.initial_state"]], "param_value_map (timeevolutionproblem attribute)": [[53, "qiskit_algorithms.TimeEvolutionProblem.param_value_map"]], "t_param (timeevolutionproblem attribute)": [[53, "qiskit_algorithms.TimeEvolutionProblem.t_param"]], "time (timeevolutionproblem attribute)": [[53, "qiskit_algorithms.TimeEvolutionProblem.time"]], "truncation_threshold (timeevolutionproblem attribute)": [[53, "qiskit_algorithms.TimeEvolutionProblem.truncation_threshold"]], "timeevolutionresult (class in qiskit_algorithms)": [[54, "qiskit_algorithms.TimeEvolutionResult"]], "aux_ops_evaluated (timeevolutionresult attribute)": [[54, "qiskit_algorithms.TimeEvolutionResult.aux_ops_evaluated"]], "combine() (timeevolutionresult method)": [[54, "qiskit_algorithms.TimeEvolutionResult.combine"]], "evolved_state (timeevolutionresult attribute)": [[54, "qiskit_algorithms.TimeEvolutionResult.evolved_state"]], "observables (timeevolutionresult attribute)": [[54, "qiskit_algorithms.TimeEvolutionResult.observables"]], "times (timeevolutionresult attribute)": [[54, "qiskit_algorithms.TimeEvolutionResult.times"]], "trotterqrte (class in qiskit_algorithms)": [[55, "qiskit_algorithms.TrotterQRTE"]], "estimator (trotterqrte attribute)": [[55, "qiskit_algorithms.TrotterQRTE.estimator"]], "evolve() (trotterqrte method)": [[55, "qiskit_algorithms.TrotterQRTE.evolve"]], "num_timesteps (trotterqrte attribute)": [[55, "qiskit_algorithms.TrotterQRTE.num_timesteps"]], "product_formula (trotterqrte attribute)": [[55, "qiskit_algorithms.TrotterQRTE.product_formula"]], "supports_aux_operators() (trotterqrte class method)": [[55, "qiskit_algorithms.TrotterQRTE.supports_aux_operators"]], "vqd (class in qiskit_algorithms)": [[56, "qiskit_algorithms.VQD"]], "ansatz (vqd attribute)": [[56, "qiskit_algorithms.VQD.ansatz"]], "betas (vqd attribute)": [[56, "qiskit_algorithms.VQD.betas"]], "callback (vqd attribute)": [[56, "qiskit_algorithms.VQD.callback"]], "compute_eigenvalues() (vqd method)": [[56, "qiskit_algorithms.VQD.compute_eigenvalues"]], "estimator (vqd attribute)": [[56, "qiskit_algorithms.VQD.estimator"]], "fidelity (vqd attribute)": [[56, "qiskit_algorithms.VQD.fidelity"]], "initial_point (vqd attribute)": [[56, "qiskit_algorithms.VQD.initial_point"]], "k (vqd attribute)": [[56, "qiskit_algorithms.VQD.k"]], "optimizer (vqd attribute)": [[56, "qiskit_algorithms.VQD.optimizer"]], "supports_aux_operators() (vqd class method)": [[56, "qiskit_algorithms.VQD.supports_aux_operators"]], "vqdresult (class in qiskit_algorithms)": [[57, "qiskit_algorithms.VQDResult"]], "aux_operators_evaluated (vqdresult attribute)": [[57, "qiskit_algorithms.VQDResult.aux_operators_evaluated"]], "combine() (vqdresult method)": [[57, "qiskit_algorithms.VQDResult.combine"]], "cost_function_evals (vqdresult attribute)": [[57, "qiskit_algorithms.VQDResult.cost_function_evals"]], "eigenvalues (vqdresult attribute)": [[57, "qiskit_algorithms.VQDResult.eigenvalues"]], "optimal_circuits (vqdresult attribute)": [[57, "qiskit_algorithms.VQDResult.optimal_circuits"]], "optimal_parameters (vqdresult attribute)": [[57, "qiskit_algorithms.VQDResult.optimal_parameters"]], "optimal_points (vqdresult attribute)": [[57, "qiskit_algorithms.VQDResult.optimal_points"]], "optimal_values (vqdresult attribute)": [[57, "qiskit_algorithms.VQDResult.optimal_values"]], "optimizer_results (vqdresult attribute)": [[57, "qiskit_algorithms.VQDResult.optimizer_results"]], "optimizer_times (vqdresult attribute)": [[57, "qiskit_algorithms.VQDResult.optimizer_times"]], "vqe (class in qiskit_algorithms)": [[58, "qiskit_algorithms.VQE"]], "ansatz (vqe attribute)": [[58, "qiskit_algorithms.VQE.ansatz"]], "callback (vqe attribute)": [[58, "qiskit_algorithms.VQE.callback"]], "compute_minimum_eigenvalue() (vqe method)": [[58, "qiskit_algorithms.VQE.compute_minimum_eigenvalue"]], "estimator (vqe attribute)": [[58, "qiskit_algorithms.VQE.estimator"]], "gradient (vqe attribute)": [[58, "qiskit_algorithms.VQE.gradient"]], "initial_point (vqe attribute)": [[58, "qiskit_algorithms.VQE.initial_point"]], "optimizer (vqe attribute)": [[58, "qiskit_algorithms.VQE.optimizer"]], "supports_aux_operators() (vqe class method)": [[58, "qiskit_algorithms.VQE.supports_aux_operators"]], "vqeresult (class in qiskit_algorithms)": [[59, "qiskit_algorithms.VQEResult"]], "aux_operators_evaluated (vqeresult attribute)": [[59, "qiskit_algorithms.VQEResult.aux_operators_evaluated"]], "combine() (vqeresult method)": [[59, "qiskit_algorithms.VQEResult.combine"]], "cost_function_evals (vqeresult attribute)": [[59, "qiskit_algorithms.VQEResult.cost_function_evals"]], "eigenvalue (vqeresult attribute)": [[59, "qiskit_algorithms.VQEResult.eigenvalue"]], "optimal_circuit (vqeresult attribute)": [[59, "qiskit_algorithms.VQEResult.optimal_circuit"]], "optimal_parameters (vqeresult attribute)": [[59, "qiskit_algorithms.VQEResult.optimal_parameters"]], "optimal_point (vqeresult attribute)": [[59, "qiskit_algorithms.VQEResult.optimal_point"]], "optimal_value (vqeresult attribute)": [[59, "qiskit_algorithms.VQEResult.optimal_value"]], "optimizer_evals (vqeresult attribute)": [[59, "qiskit_algorithms.VQEResult.optimizer_evals"]], "optimizer_result (vqeresult attribute)": [[59, "qiskit_algorithms.VQEResult.optimizer_result"]], "optimizer_time (vqeresult attribute)": [[59, "qiskit_algorithms.VQEResult.optimizer_time"]], "varqite (class in qiskit_algorithms)": [[60, "qiskit_algorithms.VarQITE"]], "evolve() (varqite method)": [[60, "qiskit_algorithms.VarQITE.evolve"]], "varqrte (class in qiskit_algorithms)": [[61, "qiskit_algorithms.VarQRTE"]], "evolve() (varqrte method)": [[61, "qiskit_algorithms.VarQRTE.evolve"]], "varqteresult (class in qiskit_algorithms)": [[62, "qiskit_algorithms.VarQTEResult"]], "combine() (varqteresult method)": [[62, "qiskit_algorithms.VarQTEResult.combine"]], "parameter_values (varqteresult attribute)": [[62, "qiskit_algorithms.VarQTEResult.parameter_values"]], "baseestimatorgradient (class in qiskit_algorithms.gradients)": [[63, "qiskit_algorithms.gradients.BaseEstimatorGradient"]], "derivative_type (baseestimatorgradient attribute)": [[63, "qiskit_algorithms.gradients.BaseEstimatorGradient.derivative_type"]], "options (baseestimatorgradient attribute)": [[63, "qiskit_algorithms.gradients.BaseEstimatorGradient.options"]], "run() (baseestimatorgradient method)": [[63, "qiskit_algorithms.gradients.BaseEstimatorGradient.run"]], "update_default_options() (baseestimatorgradient method)": [[63, "qiskit_algorithms.gradients.BaseEstimatorGradient.update_default_options"]], "baseqgt (class in qiskit_algorithms.gradients)": [[64, "qiskit_algorithms.gradients.BaseQGT"]], "derivative_type (baseqgt attribute)": [[64, "qiskit_algorithms.gradients.BaseQGT.derivative_type"]], "options (baseqgt attribute)": [[64, "qiskit_algorithms.gradients.BaseQGT.options"]], "run() (baseqgt method)": [[64, "qiskit_algorithms.gradients.BaseQGT.run"]], "update_default_options() (baseqgt method)": [[64, "qiskit_algorithms.gradients.BaseQGT.update_default_options"]], "basesamplergradient (class in qiskit_algorithms.gradients)": [[65, "qiskit_algorithms.gradients.BaseSamplerGradient"]], "options (basesamplergradient attribute)": [[65, "qiskit_algorithms.gradients.BaseSamplerGradient.options"]], "run() (basesamplergradient method)": [[65, "qiskit_algorithms.gradients.BaseSamplerGradient.run"]], "update_default_options() (basesamplergradient method)": [[65, "qiskit_algorithms.gradients.BaseSamplerGradient.update_default_options"]], "estimatorgradientresult (class in qiskit_algorithms.gradients)": [[66, "qiskit_algorithms.gradients.EstimatorGradientResult"]], "gradients (estimatorgradientresult attribute)": [[66, "qiskit_algorithms.gradients.EstimatorGradientResult.gradients"]], "metadata (estimatorgradientresult attribute)": [[66, "qiskit_algorithms.gradients.EstimatorGradientResult.metadata"]], "options (estimatorgradientresult attribute)": [[66, "qiskit_algorithms.gradients.EstimatorGradientResult.options"]], "finitediffestimatorgradient (class in qiskit_algorithms.gradients)": [[67, "qiskit_algorithms.gradients.FiniteDiffEstimatorGradient"]], "derivative_type (finitediffestimatorgradient attribute)": [[67, "qiskit_algorithms.gradients.FiniteDiffEstimatorGradient.derivative_type"]], "options (finitediffestimatorgradient attribute)": [[67, "qiskit_algorithms.gradients.FiniteDiffEstimatorGradient.options"]], "run() (finitediffestimatorgradient method)": [[67, "qiskit_algorithms.gradients.FiniteDiffEstimatorGradient.run"]], "update_default_options() (finitediffestimatorgradient method)": [[67, "qiskit_algorithms.gradients.FiniteDiffEstimatorGradient.update_default_options"]], "finitediffsamplergradient (class in qiskit_algorithms.gradients)": [[68, "qiskit_algorithms.gradients.FiniteDiffSamplerGradient"]], "options (finitediffsamplergradient attribute)": [[68, "qiskit_algorithms.gradients.FiniteDiffSamplerGradient.options"]], "run() (finitediffsamplergradient method)": [[68, "qiskit_algorithms.gradients.FiniteDiffSamplerGradient.run"]], "update_default_options() (finitediffsamplergradient method)": [[68, "qiskit_algorithms.gradients.FiniteDiffSamplerGradient.update_default_options"]], "lincombestimatorgradient (class in qiskit_algorithms.gradients)": [[69, "qiskit_algorithms.gradients.LinCombEstimatorGradient"]], "supported_gates (lincombestimatorgradient attribute)": [[69, "qiskit_algorithms.gradients.LinCombEstimatorGradient.SUPPORTED_GATES"]], "derivative_type (lincombestimatorgradient attribute)": [[69, "qiskit_algorithms.gradients.LinCombEstimatorGradient.derivative_type"]], "options (lincombestimatorgradient attribute)": [[69, "qiskit_algorithms.gradients.LinCombEstimatorGradient.options"]], "run() (lincombestimatorgradient method)": [[69, "qiskit_algorithms.gradients.LinCombEstimatorGradient.run"]], "update_default_options() (lincombestimatorgradient method)": [[69, "qiskit_algorithms.gradients.LinCombEstimatorGradient.update_default_options"]], "lincombqgt (class in qiskit_algorithms.gradients)": [[70, "qiskit_algorithms.gradients.LinCombQGT"]], "supported_gates (lincombqgt attribute)": [[70, "qiskit_algorithms.gradients.LinCombQGT.SUPPORTED_GATES"]], "derivative_type (lincombqgt attribute)": [[70, "qiskit_algorithms.gradients.LinCombQGT.derivative_type"]], "options (lincombqgt attribute)": [[70, "qiskit_algorithms.gradients.LinCombQGT.options"]], "run() (lincombqgt method)": [[70, "qiskit_algorithms.gradients.LinCombQGT.run"]], "update_default_options() (lincombqgt method)": [[70, "qiskit_algorithms.gradients.LinCombQGT.update_default_options"]], "lincombsamplergradient (class in qiskit_algorithms.gradients)": [[71, "qiskit_algorithms.gradients.LinCombSamplerGradient"]], "supported_gates (lincombsamplergradient attribute)": [[71, "qiskit_algorithms.gradients.LinCombSamplerGradient.SUPPORTED_GATES"]], "options (lincombsamplergradient attribute)": [[71, "qiskit_algorithms.gradients.LinCombSamplerGradient.options"]], "run() (lincombsamplergradient method)": [[71, "qiskit_algorithms.gradients.LinCombSamplerGradient.run"]], "update_default_options() (lincombsamplergradient method)": [[71, "qiskit_algorithms.gradients.LinCombSamplerGradient.update_default_options"]], "paramshiftestimatorgradient (class in qiskit_algorithms.gradients)": [[72, "qiskit_algorithms.gradients.ParamShiftEstimatorGradient"]], "supported_gates (paramshiftestimatorgradient attribute)": [[72, "qiskit_algorithms.gradients.ParamShiftEstimatorGradient.SUPPORTED_GATES"]], "derivative_type (paramshiftestimatorgradient attribute)": [[72, "qiskit_algorithms.gradients.ParamShiftEstimatorGradient.derivative_type"]], "options (paramshiftestimatorgradient attribute)": [[72, "qiskit_algorithms.gradients.ParamShiftEstimatorGradient.options"]], "run() (paramshiftestimatorgradient method)": [[72, "qiskit_algorithms.gradients.ParamShiftEstimatorGradient.run"]], "update_default_options() (paramshiftestimatorgradient method)": [[72, "qiskit_algorithms.gradients.ParamShiftEstimatorGradient.update_default_options"]], "paramshiftsamplergradient (class in qiskit_algorithms.gradients)": [[73, "qiskit_algorithms.gradients.ParamShiftSamplerGradient"]], "supported_gates (paramshiftsamplergradient attribute)": [[73, "qiskit_algorithms.gradients.ParamShiftSamplerGradient.SUPPORTED_GATES"]], "options (paramshiftsamplergradient attribute)": [[73, "qiskit_algorithms.gradients.ParamShiftSamplerGradient.options"]], "run() (paramshiftsamplergradient method)": [[73, "qiskit_algorithms.gradients.ParamShiftSamplerGradient.run"]], "update_default_options() (paramshiftsamplergradient method)": [[73, "qiskit_algorithms.gradients.ParamShiftSamplerGradient.update_default_options"]], "qfi (class in qiskit_algorithms.gradients)": [[74, "qiskit_algorithms.gradients.QFI"]], "options (qfi attribute)": [[74, "qiskit_algorithms.gradients.QFI.options"]], "run() (qfi method)": [[74, "qiskit_algorithms.gradients.QFI.run"]], "update_default_options() (qfi method)": [[74, "qiskit_algorithms.gradients.QFI.update_default_options"]], "qfiresult (class in qiskit_algorithms.gradients)": [[75, "qiskit_algorithms.gradients.QFIResult"]], "metadata (qfiresult attribute)": [[75, "qiskit_algorithms.gradients.QFIResult.metadata"]], "options (qfiresult attribute)": [[75, "qiskit_algorithms.gradients.QFIResult.options"]], "qfis (qfiresult attribute)": [[75, "qiskit_algorithms.gradients.QFIResult.qfis"]], "qgtresult (class in qiskit_algorithms.gradients)": [[76, "qiskit_algorithms.gradients.QGTResult"]], "derivative_type (qgtresult attribute)": [[76, "qiskit_algorithms.gradients.QGTResult.derivative_type"]], "metadata (qgtresult attribute)": [[76, "qiskit_algorithms.gradients.QGTResult.metadata"]], "options (qgtresult attribute)": [[76, "qiskit_algorithms.gradients.QGTResult.options"]], "qgts (qgtresult attribute)": [[76, "qiskit_algorithms.gradients.QGTResult.qgts"]], "reverseestimatorgradient (class in qiskit_algorithms.gradients)": [[77, "qiskit_algorithms.gradients.ReverseEstimatorGradient"]], "supported_gates (reverseestimatorgradient attribute)": [[77, "qiskit_algorithms.gradients.ReverseEstimatorGradient.SUPPORTED_GATES"]], "derivative_type (reverseestimatorgradient attribute)": [[77, "qiskit_algorithms.gradients.ReverseEstimatorGradient.derivative_type"]], "options (reverseestimatorgradient attribute)": [[77, "qiskit_algorithms.gradients.ReverseEstimatorGradient.options"]], "run() (reverseestimatorgradient method)": [[77, "qiskit_algorithms.gradients.ReverseEstimatorGradient.run"]], "update_default_options() (reverseestimatorgradient method)": [[77, "qiskit_algorithms.gradients.ReverseEstimatorGradient.update_default_options"]], "reverseqgt (class in qiskit_algorithms.gradients)": [[78, "qiskit_algorithms.gradients.ReverseQGT"]], "supported_gates (reverseqgt attribute)": [[78, "qiskit_algorithms.gradients.ReverseQGT.SUPPORTED_GATES"]], "derivative_type (reverseqgt attribute)": [[78, "qiskit_algorithms.gradients.ReverseQGT.derivative_type"]], "options (reverseqgt attribute)": [[78, "qiskit_algorithms.gradients.ReverseQGT.options"]], "run() (reverseqgt method)": [[78, "qiskit_algorithms.gradients.ReverseQGT.run"]], "update_default_options() (reverseqgt method)": [[78, "qiskit_algorithms.gradients.ReverseQGT.update_default_options"]], "spsaestimatorgradient (class in qiskit_algorithms.gradients)": [[79, "qiskit_algorithms.gradients.SPSAEstimatorGradient"]], "derivative_type (spsaestimatorgradient attribute)": [[79, "qiskit_algorithms.gradients.SPSAEstimatorGradient.derivative_type"]], "options (spsaestimatorgradient attribute)": [[79, "qiskit_algorithms.gradients.SPSAEstimatorGradient.options"]], "run() (spsaestimatorgradient method)": [[79, "qiskit_algorithms.gradients.SPSAEstimatorGradient.run"]], "update_default_options() (spsaestimatorgradient method)": [[79, "qiskit_algorithms.gradients.SPSAEstimatorGradient.update_default_options"]], "spsasamplergradient (class in qiskit_algorithms.gradients)": [[80, "qiskit_algorithms.gradients.SPSASamplerGradient"]], "options (spsasamplergradient attribute)": [[80, "qiskit_algorithms.gradients.SPSASamplerGradient.options"]], "run() (spsasamplergradient method)": [[80, "qiskit_algorithms.gradients.SPSASamplerGradient.run"]], "update_default_options() (spsasamplergradient method)": [[80, "qiskit_algorithms.gradients.SPSASamplerGradient.update_default_options"]], "samplergradientresult (class in qiskit_algorithms.gradients)": [[81, "qiskit_algorithms.gradients.SamplerGradientResult"]], "gradients (samplergradientresult attribute)": [[81, "qiskit_algorithms.gradients.SamplerGradientResult.gradients"]], "metadata (samplergradientresult attribute)": [[81, "qiskit_algorithms.gradients.SamplerGradientResult.metadata"]], "options (samplergradientresult attribute)": [[81, "qiskit_algorithms.gradients.SamplerGradientResult.options"]], "adam (class in qiskit_algorithms.optimizers)": [[82, "qiskit_algorithms.optimizers.ADAM"]], "bounds_support_level (adam attribute)": [[82, "qiskit_algorithms.optimizers.ADAM.bounds_support_level"]], "get_support_level() (adam method)": [[82, "qiskit_algorithms.optimizers.ADAM.get_support_level"]], "gradient_num_diff() (adam static method)": [[82, "qiskit_algorithms.optimizers.ADAM.gradient_num_diff"]], "gradient_support_level (adam attribute)": [[82, "qiskit_algorithms.optimizers.ADAM.gradient_support_level"]], "initial_point_support_level (adam attribute)": [[82, "qiskit_algorithms.optimizers.ADAM.initial_point_support_level"]], "is_bounds_ignored (adam attribute)": [[82, "qiskit_algorithms.optimizers.ADAM.is_bounds_ignored"]], "is_bounds_required (adam attribute)": [[82, "qiskit_algorithms.optimizers.ADAM.is_bounds_required"]], "is_bounds_supported (adam attribute)": [[82, "qiskit_algorithms.optimizers.ADAM.is_bounds_supported"]], "is_gradient_ignored (adam attribute)": [[82, "qiskit_algorithms.optimizers.ADAM.is_gradient_ignored"]], "is_gradient_required (adam attribute)": [[82, "qiskit_algorithms.optimizers.ADAM.is_gradient_required"]], "is_gradient_supported (adam attribute)": [[82, "qiskit_algorithms.optimizers.ADAM.is_gradient_supported"]], "is_initial_point_ignored (adam attribute)": [[82, "qiskit_algorithms.optimizers.ADAM.is_initial_point_ignored"]], "is_initial_point_required (adam attribute)": [[82, "qiskit_algorithms.optimizers.ADAM.is_initial_point_required"]], "is_initial_point_supported (adam attribute)": [[82, "qiskit_algorithms.optimizers.ADAM.is_initial_point_supported"]], "load_params() (adam method)": [[82, "qiskit_algorithms.optimizers.ADAM.load_params"]], "minimize() (adam method)": [[82, "qiskit_algorithms.optimizers.ADAM.minimize"]], "print_options() (adam method)": [[82, "qiskit_algorithms.optimizers.ADAM.print_options"]], "save_params() (adam method)": [[82, "qiskit_algorithms.optimizers.ADAM.save_params"]], "set_max_evals_grouped() (adam method)": [[82, "qiskit_algorithms.optimizers.ADAM.set_max_evals_grouped"]], "set_options() (adam method)": [[82, "qiskit_algorithms.optimizers.ADAM.set_options"]], "setting (adam attribute)": [[82, "qiskit_algorithms.optimizers.ADAM.setting"]], "settings (adam attribute)": [[82, "qiskit_algorithms.optimizers.ADAM.settings"]], "wrap_function() (adam static method)": [[82, "qiskit_algorithms.optimizers.ADAM.wrap_function"]], "aqgd (class in qiskit_algorithms.optimizers)": [[83, "qiskit_algorithms.optimizers.AQGD"]], "bounds_support_level (aqgd attribute)": [[83, "qiskit_algorithms.optimizers.AQGD.bounds_support_level"]], "get_support_level() (aqgd method)": [[83, "qiskit_algorithms.optimizers.AQGD.get_support_level"]], "gradient_num_diff() (aqgd static method)": [[83, "qiskit_algorithms.optimizers.AQGD.gradient_num_diff"]], "gradient_support_level (aqgd attribute)": [[83, "qiskit_algorithms.optimizers.AQGD.gradient_support_level"]], "initial_point_support_level (aqgd attribute)": [[83, "qiskit_algorithms.optimizers.AQGD.initial_point_support_level"]], "is_bounds_ignored (aqgd attribute)": [[83, "qiskit_algorithms.optimizers.AQGD.is_bounds_ignored"]], "is_bounds_required (aqgd attribute)": [[83, "qiskit_algorithms.optimizers.AQGD.is_bounds_required"]], "is_bounds_supported (aqgd attribute)": [[83, "qiskit_algorithms.optimizers.AQGD.is_bounds_supported"]], "is_gradient_ignored (aqgd attribute)": [[83, "qiskit_algorithms.optimizers.AQGD.is_gradient_ignored"]], "is_gradient_required (aqgd attribute)": [[83, "qiskit_algorithms.optimizers.AQGD.is_gradient_required"]], "is_gradient_supported (aqgd attribute)": [[83, "qiskit_algorithms.optimizers.AQGD.is_gradient_supported"]], "is_initial_point_ignored (aqgd attribute)": [[83, "qiskit_algorithms.optimizers.AQGD.is_initial_point_ignored"]], "is_initial_point_required (aqgd attribute)": [[83, "qiskit_algorithms.optimizers.AQGD.is_initial_point_required"]], "is_initial_point_supported (aqgd attribute)": [[83, "qiskit_algorithms.optimizers.AQGD.is_initial_point_supported"]], "minimize() (aqgd method)": [[83, "qiskit_algorithms.optimizers.AQGD.minimize"]], "print_options() (aqgd method)": [[83, "qiskit_algorithms.optimizers.AQGD.print_options"]], "set_max_evals_grouped() (aqgd method)": [[83, "qiskit_algorithms.optimizers.AQGD.set_max_evals_grouped"]], "set_options() (aqgd method)": [[83, "qiskit_algorithms.optimizers.AQGD.set_options"]], "setting (aqgd attribute)": [[83, "qiskit_algorithms.optimizers.AQGD.setting"]], "settings (aqgd attribute)": [[83, "qiskit_algorithms.optimizers.AQGD.settings"]], "wrap_function() (aqgd static method)": [[83, "qiskit_algorithms.optimizers.AQGD.wrap_function"]], "askdata (class in qiskit_algorithms.optimizers)": [[84, "qiskit_algorithms.optimizers.AskData"]], "x_fun (askdata attribute)": [[84, "qiskit_algorithms.optimizers.AskData.x_fun"]], "x_jac (askdata attribute)": [[84, "qiskit_algorithms.optimizers.AskData.x_jac"]], "bobyqa (class in qiskit_algorithms.optimizers)": [[85, "qiskit_algorithms.optimizers.BOBYQA"]], "bounds_support_level (bobyqa attribute)": [[85, "qiskit_algorithms.optimizers.BOBYQA.bounds_support_level"]], "get_support_level() (bobyqa method)": [[85, "qiskit_algorithms.optimizers.BOBYQA.get_support_level"]], "gradient_num_diff() (bobyqa static method)": [[85, "qiskit_algorithms.optimizers.BOBYQA.gradient_num_diff"]], "gradient_support_level (bobyqa attribute)": [[85, "qiskit_algorithms.optimizers.BOBYQA.gradient_support_level"]], "initial_point_support_level (bobyqa attribute)": [[85, "qiskit_algorithms.optimizers.BOBYQA.initial_point_support_level"]], "is_bounds_ignored (bobyqa attribute)": [[85, "qiskit_algorithms.optimizers.BOBYQA.is_bounds_ignored"]], "is_bounds_required (bobyqa attribute)": [[85, "qiskit_algorithms.optimizers.BOBYQA.is_bounds_required"]], "is_bounds_supported (bobyqa attribute)": [[85, "qiskit_algorithms.optimizers.BOBYQA.is_bounds_supported"]], "is_gradient_ignored (bobyqa attribute)": [[85, "qiskit_algorithms.optimizers.BOBYQA.is_gradient_ignored"]], "is_gradient_required (bobyqa attribute)": [[85, "qiskit_algorithms.optimizers.BOBYQA.is_gradient_required"]], "is_gradient_supported (bobyqa attribute)": [[85, "qiskit_algorithms.optimizers.BOBYQA.is_gradient_supported"]], "is_initial_point_ignored (bobyqa attribute)": [[85, "qiskit_algorithms.optimizers.BOBYQA.is_initial_point_ignored"]], "is_initial_point_required (bobyqa attribute)": [[85, "qiskit_algorithms.optimizers.BOBYQA.is_initial_point_required"]], "is_initial_point_supported (bobyqa attribute)": [[85, "qiskit_algorithms.optimizers.BOBYQA.is_initial_point_supported"]], "minimize() (bobyqa method)": [[85, "qiskit_algorithms.optimizers.BOBYQA.minimize"]], "print_options() (bobyqa method)": [[85, "qiskit_algorithms.optimizers.BOBYQA.print_options"]], "set_max_evals_grouped() (bobyqa method)": [[85, "qiskit_algorithms.optimizers.BOBYQA.set_max_evals_grouped"]], "set_options() (bobyqa method)": [[85, "qiskit_algorithms.optimizers.BOBYQA.set_options"]], "setting (bobyqa attribute)": [[85, "qiskit_algorithms.optimizers.BOBYQA.setting"]], "settings (bobyqa attribute)": [[85, "qiskit_algorithms.optimizers.BOBYQA.settings"]], "wrap_function() (bobyqa static method)": [[85, "qiskit_algorithms.optimizers.BOBYQA.wrap_function"]], "cg (class in qiskit_algorithms.optimizers)": [[86, "qiskit_algorithms.optimizers.CG"]], "bounds_support_level (cg attribute)": [[86, "qiskit_algorithms.optimizers.CG.bounds_support_level"]], "get_support_level() (cg method)": [[86, "qiskit_algorithms.optimizers.CG.get_support_level"]], "gradient_num_diff() (cg static method)": [[86, "qiskit_algorithms.optimizers.CG.gradient_num_diff"]], "gradient_support_level (cg attribute)": [[86, "qiskit_algorithms.optimizers.CG.gradient_support_level"]], "initial_point_support_level (cg attribute)": [[86, "qiskit_algorithms.optimizers.CG.initial_point_support_level"]], "is_bounds_ignored (cg attribute)": [[86, "qiskit_algorithms.optimizers.CG.is_bounds_ignored"]], "is_bounds_required (cg attribute)": [[86, "qiskit_algorithms.optimizers.CG.is_bounds_required"]], "is_bounds_supported (cg attribute)": [[86, "qiskit_algorithms.optimizers.CG.is_bounds_supported"]], "is_gradient_ignored (cg attribute)": [[86, "qiskit_algorithms.optimizers.CG.is_gradient_ignored"]], "is_gradient_required (cg attribute)": [[86, "qiskit_algorithms.optimizers.CG.is_gradient_required"]], "is_gradient_supported (cg attribute)": [[86, "qiskit_algorithms.optimizers.CG.is_gradient_supported"]], "is_initial_point_ignored (cg attribute)": [[86, "qiskit_algorithms.optimizers.CG.is_initial_point_ignored"]], "is_initial_point_required (cg attribute)": [[86, "qiskit_algorithms.optimizers.CG.is_initial_point_required"]], "is_initial_point_supported (cg attribute)": [[86, "qiskit_algorithms.optimizers.CG.is_initial_point_supported"]], "minimize() (cg method)": [[86, "qiskit_algorithms.optimizers.CG.minimize"]], "print_options() (cg method)": [[86, "qiskit_algorithms.optimizers.CG.print_options"]], "set_max_evals_grouped() (cg method)": [[86, "qiskit_algorithms.optimizers.CG.set_max_evals_grouped"]], "set_options() (cg method)": [[86, "qiskit_algorithms.optimizers.CG.set_options"]], "setting (cg attribute)": [[86, "qiskit_algorithms.optimizers.CG.setting"]], "settings (cg attribute)": [[86, "qiskit_algorithms.optimizers.CG.settings"]], "wrap_function() (cg static method)": [[86, "qiskit_algorithms.optimizers.CG.wrap_function"]], "cobyla (class in qiskit_algorithms.optimizers)": [[87, "qiskit_algorithms.optimizers.COBYLA"]], "bounds_support_level (cobyla attribute)": [[87, "qiskit_algorithms.optimizers.COBYLA.bounds_support_level"]], "get_support_level() (cobyla method)": [[87, "qiskit_algorithms.optimizers.COBYLA.get_support_level"]], "gradient_num_diff() (cobyla static method)": [[87, "qiskit_algorithms.optimizers.COBYLA.gradient_num_diff"]], "gradient_support_level (cobyla attribute)": [[87, "qiskit_algorithms.optimizers.COBYLA.gradient_support_level"]], "initial_point_support_level (cobyla attribute)": [[87, "qiskit_algorithms.optimizers.COBYLA.initial_point_support_level"]], "is_bounds_ignored (cobyla attribute)": [[87, "qiskit_algorithms.optimizers.COBYLA.is_bounds_ignored"]], "is_bounds_required (cobyla attribute)": [[87, "qiskit_algorithms.optimizers.COBYLA.is_bounds_required"]], "is_bounds_supported (cobyla attribute)": [[87, "qiskit_algorithms.optimizers.COBYLA.is_bounds_supported"]], "is_gradient_ignored (cobyla attribute)": [[87, "qiskit_algorithms.optimizers.COBYLA.is_gradient_ignored"]], "is_gradient_required (cobyla attribute)": [[87, "qiskit_algorithms.optimizers.COBYLA.is_gradient_required"]], "is_gradient_supported (cobyla attribute)": [[87, "qiskit_algorithms.optimizers.COBYLA.is_gradient_supported"]], "is_initial_point_ignored (cobyla attribute)": [[87, "qiskit_algorithms.optimizers.COBYLA.is_initial_point_ignored"]], "is_initial_point_required (cobyla attribute)": [[87, "qiskit_algorithms.optimizers.COBYLA.is_initial_point_required"]], "is_initial_point_supported (cobyla attribute)": [[87, "qiskit_algorithms.optimizers.COBYLA.is_initial_point_supported"]], "minimize() (cobyla method)": [[87, "qiskit_algorithms.optimizers.COBYLA.minimize"]], "print_options() (cobyla method)": [[87, "qiskit_algorithms.optimizers.COBYLA.print_options"]], "set_max_evals_grouped() (cobyla method)": [[87, "qiskit_algorithms.optimizers.COBYLA.set_max_evals_grouped"]], "set_options() (cobyla method)": [[87, "qiskit_algorithms.optimizers.COBYLA.set_options"]], "setting (cobyla attribute)": [[87, "qiskit_algorithms.optimizers.COBYLA.setting"]], "settings (cobyla attribute)": [[87, "qiskit_algorithms.optimizers.COBYLA.settings"]], "wrap_function() (cobyla static method)": [[87, "qiskit_algorithms.optimizers.COBYLA.wrap_function"]], "crs (class in qiskit_algorithms.optimizers)": [[88, "qiskit_algorithms.optimizers.CRS"]], "bounds_support_level (crs attribute)": [[88, "qiskit_algorithms.optimizers.CRS.bounds_support_level"]], "get_nlopt_optimizer() (crs method)": [[88, "qiskit_algorithms.optimizers.CRS.get_nlopt_optimizer"]], "get_support_level() (crs method)": [[88, "qiskit_algorithms.optimizers.CRS.get_support_level"]], "gradient_num_diff() (crs static method)": [[88, "qiskit_algorithms.optimizers.CRS.gradient_num_diff"]], "gradient_support_level (crs attribute)": [[88, "qiskit_algorithms.optimizers.CRS.gradient_support_level"]], "initial_point_support_level (crs attribute)": [[88, "qiskit_algorithms.optimizers.CRS.initial_point_support_level"]], "is_bounds_ignored (crs attribute)": [[88, "qiskit_algorithms.optimizers.CRS.is_bounds_ignored"]], "is_bounds_required (crs attribute)": [[88, "qiskit_algorithms.optimizers.CRS.is_bounds_required"]], "is_bounds_supported (crs attribute)": [[88, "qiskit_algorithms.optimizers.CRS.is_bounds_supported"]], "is_gradient_ignored (crs attribute)": [[88, "qiskit_algorithms.optimizers.CRS.is_gradient_ignored"]], "is_gradient_required (crs attribute)": [[88, "qiskit_algorithms.optimizers.CRS.is_gradient_required"]], "is_gradient_supported (crs attribute)": [[88, "qiskit_algorithms.optimizers.CRS.is_gradient_supported"]], "is_initial_point_ignored (crs attribute)": [[88, "qiskit_algorithms.optimizers.CRS.is_initial_point_ignored"]], "is_initial_point_required (crs attribute)": [[88, "qiskit_algorithms.optimizers.CRS.is_initial_point_required"]], "is_initial_point_supported (crs attribute)": [[88, "qiskit_algorithms.optimizers.CRS.is_initial_point_supported"]], "minimize() (crs method)": [[88, "qiskit_algorithms.optimizers.CRS.minimize"]], "print_options() (crs method)": [[88, "qiskit_algorithms.optimizers.CRS.print_options"]], "set_max_evals_grouped() (crs method)": [[88, "qiskit_algorithms.optimizers.CRS.set_max_evals_grouped"]], "set_options() (crs method)": [[88, "qiskit_algorithms.optimizers.CRS.set_options"]], "setting (crs attribute)": [[88, "qiskit_algorithms.optimizers.CRS.setting"]], "settings (crs attribute)": [[88, "qiskit_algorithms.optimizers.CRS.settings"]], "wrap_function() (crs static method)": [[88, "qiskit_algorithms.optimizers.CRS.wrap_function"]], "direct_l (class in qiskit_algorithms.optimizers)": [[89, "qiskit_algorithms.optimizers.DIRECT_L"]], "bounds_support_level (direct_l attribute)": [[89, "qiskit_algorithms.optimizers.DIRECT_L.bounds_support_level"]], "get_nlopt_optimizer() (direct_l method)": [[89, "qiskit_algorithms.optimizers.DIRECT_L.get_nlopt_optimizer"]], "get_support_level() (direct_l method)": [[89, "qiskit_algorithms.optimizers.DIRECT_L.get_support_level"]], "gradient_num_diff() (direct_l static method)": [[89, "qiskit_algorithms.optimizers.DIRECT_L.gradient_num_diff"]], "gradient_support_level (direct_l attribute)": [[89, "qiskit_algorithms.optimizers.DIRECT_L.gradient_support_level"]], "initial_point_support_level (direct_l attribute)": [[89, "qiskit_algorithms.optimizers.DIRECT_L.initial_point_support_level"]], "is_bounds_ignored (direct_l attribute)": [[89, "qiskit_algorithms.optimizers.DIRECT_L.is_bounds_ignored"]], "is_bounds_required (direct_l attribute)": [[89, "qiskit_algorithms.optimizers.DIRECT_L.is_bounds_required"]], "is_bounds_supported (direct_l attribute)": [[89, "qiskit_algorithms.optimizers.DIRECT_L.is_bounds_supported"]], "is_gradient_ignored (direct_l attribute)": [[89, "qiskit_algorithms.optimizers.DIRECT_L.is_gradient_ignored"]], "is_gradient_required (direct_l attribute)": [[89, "qiskit_algorithms.optimizers.DIRECT_L.is_gradient_required"]], "is_gradient_supported (direct_l attribute)": [[89, "qiskit_algorithms.optimizers.DIRECT_L.is_gradient_supported"]], "is_initial_point_ignored (direct_l attribute)": [[89, "qiskit_algorithms.optimizers.DIRECT_L.is_initial_point_ignored"]], "is_initial_point_required (direct_l attribute)": [[89, "qiskit_algorithms.optimizers.DIRECT_L.is_initial_point_required"]], "is_initial_point_supported (direct_l attribute)": [[89, "qiskit_algorithms.optimizers.DIRECT_L.is_initial_point_supported"]], "minimize() (direct_l method)": [[89, "qiskit_algorithms.optimizers.DIRECT_L.minimize"]], "print_options() (direct_l method)": [[89, "qiskit_algorithms.optimizers.DIRECT_L.print_options"]], "set_max_evals_grouped() (direct_l method)": [[89, "qiskit_algorithms.optimizers.DIRECT_L.set_max_evals_grouped"]], "set_options() (direct_l method)": [[89, "qiskit_algorithms.optimizers.DIRECT_L.set_options"]], "setting (direct_l attribute)": [[89, "qiskit_algorithms.optimizers.DIRECT_L.setting"]], "settings (direct_l attribute)": [[89, "qiskit_algorithms.optimizers.DIRECT_L.settings"]], "wrap_function() (direct_l static method)": [[89, "qiskit_algorithms.optimizers.DIRECT_L.wrap_function"]], "direct_l_rand (class in qiskit_algorithms.optimizers)": [[90, "qiskit_algorithms.optimizers.DIRECT_L_RAND"]], "bounds_support_level (direct_l_rand attribute)": [[90, "qiskit_algorithms.optimizers.DIRECT_L_RAND.bounds_support_level"]], "get_nlopt_optimizer() (direct_l_rand method)": [[90, "qiskit_algorithms.optimizers.DIRECT_L_RAND.get_nlopt_optimizer"]], "get_support_level() (direct_l_rand method)": [[90, "qiskit_algorithms.optimizers.DIRECT_L_RAND.get_support_level"]], "gradient_num_diff() (direct_l_rand static method)": [[90, "qiskit_algorithms.optimizers.DIRECT_L_RAND.gradient_num_diff"]], "gradient_support_level (direct_l_rand attribute)": [[90, "qiskit_algorithms.optimizers.DIRECT_L_RAND.gradient_support_level"]], "initial_point_support_level (direct_l_rand attribute)": [[90, "qiskit_algorithms.optimizers.DIRECT_L_RAND.initial_point_support_level"]], "is_bounds_ignored (direct_l_rand attribute)": [[90, "qiskit_algorithms.optimizers.DIRECT_L_RAND.is_bounds_ignored"]], "is_bounds_required (direct_l_rand attribute)": [[90, "qiskit_algorithms.optimizers.DIRECT_L_RAND.is_bounds_required"]], "is_bounds_supported (direct_l_rand attribute)": [[90, "qiskit_algorithms.optimizers.DIRECT_L_RAND.is_bounds_supported"]], "is_gradient_ignored (direct_l_rand attribute)": [[90, "qiskit_algorithms.optimizers.DIRECT_L_RAND.is_gradient_ignored"]], "is_gradient_required (direct_l_rand attribute)": [[90, "qiskit_algorithms.optimizers.DIRECT_L_RAND.is_gradient_required"]], "is_gradient_supported (direct_l_rand attribute)": [[90, "qiskit_algorithms.optimizers.DIRECT_L_RAND.is_gradient_supported"]], "is_initial_point_ignored (direct_l_rand attribute)": [[90, "qiskit_algorithms.optimizers.DIRECT_L_RAND.is_initial_point_ignored"]], "is_initial_point_required (direct_l_rand attribute)": [[90, "qiskit_algorithms.optimizers.DIRECT_L_RAND.is_initial_point_required"]], "is_initial_point_supported (direct_l_rand attribute)": [[90, "qiskit_algorithms.optimizers.DIRECT_L_RAND.is_initial_point_supported"]], "minimize() (direct_l_rand method)": [[90, "qiskit_algorithms.optimizers.DIRECT_L_RAND.minimize"]], "print_options() (direct_l_rand method)": [[90, "qiskit_algorithms.optimizers.DIRECT_L_RAND.print_options"]], "set_max_evals_grouped() (direct_l_rand method)": [[90, "qiskit_algorithms.optimizers.DIRECT_L_RAND.set_max_evals_grouped"]], "set_options() (direct_l_rand method)": [[90, "qiskit_algorithms.optimizers.DIRECT_L_RAND.set_options"]], "setting (direct_l_rand attribute)": [[90, "qiskit_algorithms.optimizers.DIRECT_L_RAND.setting"]], "settings (direct_l_rand attribute)": [[90, "qiskit_algorithms.optimizers.DIRECT_L_RAND.settings"]], "wrap_function() (direct_l_rand static method)": [[90, "qiskit_algorithms.optimizers.DIRECT_L_RAND.wrap_function"]], "esch (class in qiskit_algorithms.optimizers)": [[91, "qiskit_algorithms.optimizers.ESCH"]], "bounds_support_level (esch attribute)": [[91, "qiskit_algorithms.optimizers.ESCH.bounds_support_level"]], "get_nlopt_optimizer() (esch method)": [[91, "qiskit_algorithms.optimizers.ESCH.get_nlopt_optimizer"]], "get_support_level() (esch method)": [[91, "qiskit_algorithms.optimizers.ESCH.get_support_level"]], "gradient_num_diff() (esch static method)": [[91, "qiskit_algorithms.optimizers.ESCH.gradient_num_diff"]], "gradient_support_level (esch attribute)": [[91, "qiskit_algorithms.optimizers.ESCH.gradient_support_level"]], "initial_point_support_level (esch attribute)": [[91, "qiskit_algorithms.optimizers.ESCH.initial_point_support_level"]], "is_bounds_ignored (esch attribute)": [[91, "qiskit_algorithms.optimizers.ESCH.is_bounds_ignored"]], "is_bounds_required (esch attribute)": [[91, "qiskit_algorithms.optimizers.ESCH.is_bounds_required"]], "is_bounds_supported (esch attribute)": [[91, "qiskit_algorithms.optimizers.ESCH.is_bounds_supported"]], "is_gradient_ignored (esch attribute)": [[91, "qiskit_algorithms.optimizers.ESCH.is_gradient_ignored"]], "is_gradient_required (esch attribute)": [[91, "qiskit_algorithms.optimizers.ESCH.is_gradient_required"]], "is_gradient_supported (esch attribute)": [[91, "qiskit_algorithms.optimizers.ESCH.is_gradient_supported"]], "is_initial_point_ignored (esch attribute)": [[91, "qiskit_algorithms.optimizers.ESCH.is_initial_point_ignored"]], "is_initial_point_required (esch attribute)": [[91, "qiskit_algorithms.optimizers.ESCH.is_initial_point_required"]], "is_initial_point_supported (esch attribute)": [[91, "qiskit_algorithms.optimizers.ESCH.is_initial_point_supported"]], "minimize() (esch method)": [[91, "qiskit_algorithms.optimizers.ESCH.minimize"]], "print_options() (esch method)": [[91, "qiskit_algorithms.optimizers.ESCH.print_options"]], "set_max_evals_grouped() (esch method)": [[91, "qiskit_algorithms.optimizers.ESCH.set_max_evals_grouped"]], "set_options() (esch method)": [[91, "qiskit_algorithms.optimizers.ESCH.set_options"]], "setting (esch attribute)": [[91, "qiskit_algorithms.optimizers.ESCH.setting"]], "settings (esch attribute)": [[91, "qiskit_algorithms.optimizers.ESCH.settings"]], "wrap_function() (esch static method)": [[91, "qiskit_algorithms.optimizers.ESCH.wrap_function"]], "gsls (class in qiskit_algorithms.optimizers)": [[92, "qiskit_algorithms.optimizers.GSLS"]], "bounds_support_level (gsls attribute)": [[92, "qiskit_algorithms.optimizers.GSLS.bounds_support_level"]], "get_support_level() (gsls method)": [[92, "qiskit_algorithms.optimizers.GSLS.get_support_level"]], "gradient_approximation() (gsls method)": [[92, "qiskit_algorithms.optimizers.GSLS.gradient_approximation"]], "gradient_num_diff() (gsls static method)": [[92, "qiskit_algorithms.optimizers.GSLS.gradient_num_diff"]], "gradient_support_level (gsls attribute)": [[92, "qiskit_algorithms.optimizers.GSLS.gradient_support_level"]], "initial_point_support_level (gsls attribute)": [[92, "qiskit_algorithms.optimizers.GSLS.initial_point_support_level"]], "is_bounds_ignored (gsls attribute)": [[92, "qiskit_algorithms.optimizers.GSLS.is_bounds_ignored"]], "is_bounds_required (gsls attribute)": [[92, "qiskit_algorithms.optimizers.GSLS.is_bounds_required"]], "is_bounds_supported (gsls attribute)": [[92, "qiskit_algorithms.optimizers.GSLS.is_bounds_supported"]], "is_gradient_ignored (gsls attribute)": [[92, "qiskit_algorithms.optimizers.GSLS.is_gradient_ignored"]], "is_gradient_required (gsls attribute)": [[92, "qiskit_algorithms.optimizers.GSLS.is_gradient_required"]], "is_gradient_supported (gsls attribute)": [[92, "qiskit_algorithms.optimizers.GSLS.is_gradient_supported"]], "is_initial_point_ignored (gsls attribute)": [[92, "qiskit_algorithms.optimizers.GSLS.is_initial_point_ignored"]], "is_initial_point_required (gsls attribute)": [[92, "qiskit_algorithms.optimizers.GSLS.is_initial_point_required"]], "is_initial_point_supported (gsls attribute)": [[92, "qiskit_algorithms.optimizers.GSLS.is_initial_point_supported"]], "ls_optimize() (gsls method)": [[92, "qiskit_algorithms.optimizers.GSLS.ls_optimize"]], "minimize() (gsls method)": [[92, "qiskit_algorithms.optimizers.GSLS.minimize"]], "print_options() (gsls method)": [[92, "qiskit_algorithms.optimizers.GSLS.print_options"]], "sample_points() (gsls method)": [[92, "qiskit_algorithms.optimizers.GSLS.sample_points"]], "sample_set() (gsls method)": [[92, "qiskit_algorithms.optimizers.GSLS.sample_set"]], "set_max_evals_grouped() (gsls method)": [[92, "qiskit_algorithms.optimizers.GSLS.set_max_evals_grouped"]], "set_options() (gsls method)": [[92, "qiskit_algorithms.optimizers.GSLS.set_options"]], "setting (gsls attribute)": [[92, "qiskit_algorithms.optimizers.GSLS.setting"]], "settings (gsls attribute)": [[92, "qiskit_algorithms.optimizers.GSLS.settings"]], "wrap_function() (gsls static method)": [[92, "qiskit_algorithms.optimizers.GSLS.wrap_function"]], "gradientdescent (class in qiskit_algorithms.optimizers)": [[93, "qiskit_algorithms.optimizers.GradientDescent"]], "ask() (gradientdescent method)": [[93, "qiskit_algorithms.optimizers.GradientDescent.ask"]], "bounds_support_level (gradientdescent attribute)": [[93, "qiskit_algorithms.optimizers.GradientDescent.bounds_support_level"]], "continue_condition() (gradientdescent method)": [[93, "qiskit_algorithms.optimizers.GradientDescent.continue_condition"]], "create_result() (gradientdescent method)": [[93, "qiskit_algorithms.optimizers.GradientDescent.create_result"]], "evaluate() (gradientdescent method)": [[93, "qiskit_algorithms.optimizers.GradientDescent.evaluate"]], "get_support_level() (gradientdescent method)": [[93, "qiskit_algorithms.optimizers.GradientDescent.get_support_level"]], "gradient_num_diff() (gradientdescent static method)": [[93, "qiskit_algorithms.optimizers.GradientDescent.gradient_num_diff"]], "gradient_support_level (gradientdescent attribute)": [[93, "qiskit_algorithms.optimizers.GradientDescent.gradient_support_level"]], "initial_point_support_level (gradientdescent attribute)": [[93, "qiskit_algorithms.optimizers.GradientDescent.initial_point_support_level"]], "is_bounds_ignored (gradientdescent attribute)": [[93, "qiskit_algorithms.optimizers.GradientDescent.is_bounds_ignored"]], "is_bounds_required (gradientdescent attribute)": [[93, "qiskit_algorithms.optimizers.GradientDescent.is_bounds_required"]], "is_bounds_supported (gradientdescent attribute)": [[93, "qiskit_algorithms.optimizers.GradientDescent.is_bounds_supported"]], "is_gradient_ignored (gradientdescent attribute)": [[93, "qiskit_algorithms.optimizers.GradientDescent.is_gradient_ignored"]], "is_gradient_required (gradientdescent attribute)": [[93, "qiskit_algorithms.optimizers.GradientDescent.is_gradient_required"]], "is_gradient_supported (gradientdescent attribute)": [[93, "qiskit_algorithms.optimizers.GradientDescent.is_gradient_supported"]], "is_initial_point_ignored (gradientdescent attribute)": [[93, "qiskit_algorithms.optimizers.GradientDescent.is_initial_point_ignored"]], "is_initial_point_required (gradientdescent attribute)": [[93, "qiskit_algorithms.optimizers.GradientDescent.is_initial_point_required"]], "is_initial_point_supported (gradientdescent attribute)": [[93, "qiskit_algorithms.optimizers.GradientDescent.is_initial_point_supported"]], "minimize() (gradientdescent method)": [[93, "qiskit_algorithms.optimizers.GradientDescent.minimize"]], "perturbation (gradientdescent attribute)": [[93, "qiskit_algorithms.optimizers.GradientDescent.perturbation"]], "print_options() (gradientdescent method)": [[93, "qiskit_algorithms.optimizers.GradientDescent.print_options"]], "set_max_evals_grouped() (gradientdescent method)": [[93, "qiskit_algorithms.optimizers.GradientDescent.set_max_evals_grouped"]], "set_options() (gradientdescent method)": [[93, "qiskit_algorithms.optimizers.GradientDescent.set_options"]], "setting (gradientdescent attribute)": [[93, "qiskit_algorithms.optimizers.GradientDescent.setting"]], "settings (gradientdescent attribute)": [[93, "qiskit_algorithms.optimizers.GradientDescent.settings"]], "start() (gradientdescent method)": [[93, "qiskit_algorithms.optimizers.GradientDescent.start"]], "state (gradientdescent attribute)": [[93, "qiskit_algorithms.optimizers.GradientDescent.state"]], "step() (gradientdescent method)": [[93, "qiskit_algorithms.optimizers.GradientDescent.step"]], "tell() (gradientdescent method)": [[93, "qiskit_algorithms.optimizers.GradientDescent.tell"]], "tol (gradientdescent attribute)": [[93, "qiskit_algorithms.optimizers.GradientDescent.tol"]], "wrap_function() (gradientdescent static method)": [[93, "qiskit_algorithms.optimizers.GradientDescent.wrap_function"]], "gradientdescentstate (class in qiskit_algorithms.optimizers)": [[94, "qiskit_algorithms.optimizers.GradientDescentState"]], "fun (gradientdescentstate attribute)": [[94, "qiskit_algorithms.optimizers.GradientDescentState.fun"]], "jac (gradientdescentstate attribute)": [[94, "qiskit_algorithms.optimizers.GradientDescentState.jac"]], "learning_rate (gradientdescentstate attribute)": [[94, "qiskit_algorithms.optimizers.GradientDescentState.learning_rate"]], "nfev (gradientdescentstate attribute)": [[94, "qiskit_algorithms.optimizers.GradientDescentState.nfev"]], "nit (gradientdescentstate attribute)": [[94, "qiskit_algorithms.optimizers.GradientDescentState.nit"]], "njev (gradientdescentstate attribute)": [[94, "qiskit_algorithms.optimizers.GradientDescentState.njev"]], "stepsize (gradientdescentstate attribute)": [[94, "qiskit_algorithms.optimizers.GradientDescentState.stepsize"]], "x (gradientdescentstate attribute)": [[94, "qiskit_algorithms.optimizers.GradientDescentState.x"]], "imfil (class in qiskit_algorithms.optimizers)": [[95, "qiskit_algorithms.optimizers.IMFIL"]], "bounds_support_level (imfil attribute)": [[95, "qiskit_algorithms.optimizers.IMFIL.bounds_support_level"]], "get_support_level() (imfil method)": [[95, "qiskit_algorithms.optimizers.IMFIL.get_support_level"]], "gradient_num_diff() (imfil static method)": [[95, "qiskit_algorithms.optimizers.IMFIL.gradient_num_diff"]], "gradient_support_level (imfil attribute)": [[95, "qiskit_algorithms.optimizers.IMFIL.gradient_support_level"]], "initial_point_support_level (imfil attribute)": [[95, "qiskit_algorithms.optimizers.IMFIL.initial_point_support_level"]], "is_bounds_ignored (imfil attribute)": [[95, "qiskit_algorithms.optimizers.IMFIL.is_bounds_ignored"]], "is_bounds_required (imfil attribute)": [[95, "qiskit_algorithms.optimizers.IMFIL.is_bounds_required"]], "is_bounds_supported (imfil attribute)": [[95, "qiskit_algorithms.optimizers.IMFIL.is_bounds_supported"]], "is_gradient_ignored (imfil attribute)": [[95, "qiskit_algorithms.optimizers.IMFIL.is_gradient_ignored"]], "is_gradient_required (imfil attribute)": [[95, "qiskit_algorithms.optimizers.IMFIL.is_gradient_required"]], "is_gradient_supported (imfil attribute)": [[95, "qiskit_algorithms.optimizers.IMFIL.is_gradient_supported"]], "is_initial_point_ignored (imfil attribute)": [[95, "qiskit_algorithms.optimizers.IMFIL.is_initial_point_ignored"]], "is_initial_point_required (imfil attribute)": [[95, "qiskit_algorithms.optimizers.IMFIL.is_initial_point_required"]], "is_initial_point_supported (imfil attribute)": [[95, "qiskit_algorithms.optimizers.IMFIL.is_initial_point_supported"]], "minimize() (imfil method)": [[95, "qiskit_algorithms.optimizers.IMFIL.minimize"]], "print_options() (imfil method)": [[95, "qiskit_algorithms.optimizers.IMFIL.print_options"]], "set_max_evals_grouped() (imfil method)": [[95, "qiskit_algorithms.optimizers.IMFIL.set_max_evals_grouped"]], "set_options() (imfil method)": [[95, "qiskit_algorithms.optimizers.IMFIL.set_options"]], "setting (imfil attribute)": [[95, "qiskit_algorithms.optimizers.IMFIL.setting"]], "settings (imfil attribute)": [[95, "qiskit_algorithms.optimizers.IMFIL.settings"]], "wrap_function() (imfil static method)": [[95, "qiskit_algorithms.optimizers.IMFIL.wrap_function"]], "isres (class in qiskit_algorithms.optimizers)": [[96, "qiskit_algorithms.optimizers.ISRES"]], "bounds_support_level (isres attribute)": [[96, "qiskit_algorithms.optimizers.ISRES.bounds_support_level"]], "get_nlopt_optimizer() (isres method)": [[96, "qiskit_algorithms.optimizers.ISRES.get_nlopt_optimizer"]], "get_support_level() (isres method)": [[96, "qiskit_algorithms.optimizers.ISRES.get_support_level"]], "gradient_num_diff() (isres static method)": [[96, "qiskit_algorithms.optimizers.ISRES.gradient_num_diff"]], "gradient_support_level (isres attribute)": [[96, "qiskit_algorithms.optimizers.ISRES.gradient_support_level"]], "initial_point_support_level (isres attribute)": [[96, "qiskit_algorithms.optimizers.ISRES.initial_point_support_level"]], "is_bounds_ignored (isres attribute)": [[96, "qiskit_algorithms.optimizers.ISRES.is_bounds_ignored"]], "is_bounds_required (isres attribute)": [[96, "qiskit_algorithms.optimizers.ISRES.is_bounds_required"]], "is_bounds_supported (isres attribute)": [[96, "qiskit_algorithms.optimizers.ISRES.is_bounds_supported"]], "is_gradient_ignored (isres attribute)": [[96, "qiskit_algorithms.optimizers.ISRES.is_gradient_ignored"]], "is_gradient_required (isres attribute)": [[96, "qiskit_algorithms.optimizers.ISRES.is_gradient_required"]], "is_gradient_supported (isres attribute)": [[96, "qiskit_algorithms.optimizers.ISRES.is_gradient_supported"]], "is_initial_point_ignored (isres attribute)": [[96, "qiskit_algorithms.optimizers.ISRES.is_initial_point_ignored"]], "is_initial_point_required (isres attribute)": [[96, "qiskit_algorithms.optimizers.ISRES.is_initial_point_required"]], "is_initial_point_supported (isres attribute)": [[96, "qiskit_algorithms.optimizers.ISRES.is_initial_point_supported"]], "minimize() (isres method)": [[96, "qiskit_algorithms.optimizers.ISRES.minimize"]], "print_options() (isres method)": [[96, "qiskit_algorithms.optimizers.ISRES.print_options"]], "set_max_evals_grouped() (isres method)": [[96, "qiskit_algorithms.optimizers.ISRES.set_max_evals_grouped"]], "set_options() (isres method)": [[96, "qiskit_algorithms.optimizers.ISRES.set_options"]], "setting (isres attribute)": [[96, "qiskit_algorithms.optimizers.ISRES.setting"]], "settings (isres attribute)": [[96, "qiskit_algorithms.optimizers.ISRES.settings"]], "wrap_function() (isres static method)": [[96, "qiskit_algorithms.optimizers.ISRES.wrap_function"]], "l_bfgs_b (class in qiskit_algorithms.optimizers)": [[97, "qiskit_algorithms.optimizers.L_BFGS_B"]], "bounds_support_level (l_bfgs_b attribute)": [[97, "qiskit_algorithms.optimizers.L_BFGS_B.bounds_support_level"]], "get_support_level() (l_bfgs_b method)": [[97, "qiskit_algorithms.optimizers.L_BFGS_B.get_support_level"]], "gradient_num_diff() (l_bfgs_b static method)": [[97, "qiskit_algorithms.optimizers.L_BFGS_B.gradient_num_diff"]], "gradient_support_level (l_bfgs_b attribute)": [[97, "qiskit_algorithms.optimizers.L_BFGS_B.gradient_support_level"]], "initial_point_support_level (l_bfgs_b attribute)": [[97, "qiskit_algorithms.optimizers.L_BFGS_B.initial_point_support_level"]], "is_bounds_ignored (l_bfgs_b attribute)": [[97, "qiskit_algorithms.optimizers.L_BFGS_B.is_bounds_ignored"]], "is_bounds_required (l_bfgs_b attribute)": [[97, "qiskit_algorithms.optimizers.L_BFGS_B.is_bounds_required"]], "is_bounds_supported (l_bfgs_b attribute)": [[97, "qiskit_algorithms.optimizers.L_BFGS_B.is_bounds_supported"]], "is_gradient_ignored (l_bfgs_b attribute)": [[97, "qiskit_algorithms.optimizers.L_BFGS_B.is_gradient_ignored"]], "is_gradient_required (l_bfgs_b attribute)": [[97, "qiskit_algorithms.optimizers.L_BFGS_B.is_gradient_required"]], "is_gradient_supported (l_bfgs_b attribute)": [[97, "qiskit_algorithms.optimizers.L_BFGS_B.is_gradient_supported"]], "is_initial_point_ignored (l_bfgs_b attribute)": [[97, "qiskit_algorithms.optimizers.L_BFGS_B.is_initial_point_ignored"]], "is_initial_point_required (l_bfgs_b attribute)": [[97, "qiskit_algorithms.optimizers.L_BFGS_B.is_initial_point_required"]], "is_initial_point_supported (l_bfgs_b attribute)": [[97, "qiskit_algorithms.optimizers.L_BFGS_B.is_initial_point_supported"]], "minimize() (l_bfgs_b method)": [[97, "qiskit_algorithms.optimizers.L_BFGS_B.minimize"]], "print_options() (l_bfgs_b method)": [[97, "qiskit_algorithms.optimizers.L_BFGS_B.print_options"]], "set_max_evals_grouped() (l_bfgs_b method)": [[97, "qiskit_algorithms.optimizers.L_BFGS_B.set_max_evals_grouped"]], "set_options() (l_bfgs_b method)": [[97, "qiskit_algorithms.optimizers.L_BFGS_B.set_options"]], "setting (l_bfgs_b attribute)": [[97, "qiskit_algorithms.optimizers.L_BFGS_B.setting"]], "settings (l_bfgs_b attribute)": [[97, "qiskit_algorithms.optimizers.L_BFGS_B.settings"]], "wrap_function() (l_bfgs_b static method)": [[97, "qiskit_algorithms.optimizers.L_BFGS_B.wrap_function"]], "minimizer (class in qiskit_algorithms.optimizers)": [[98, "qiskit_algorithms.optimizers.Minimizer"]], "nelder_mead (class in qiskit_algorithms.optimizers)": [[99, "qiskit_algorithms.optimizers.NELDER_MEAD"]], "bounds_support_level (nelder_mead attribute)": [[99, "qiskit_algorithms.optimizers.NELDER_MEAD.bounds_support_level"]], "get_support_level() (nelder_mead method)": [[99, "qiskit_algorithms.optimizers.NELDER_MEAD.get_support_level"]], "gradient_num_diff() (nelder_mead static method)": [[99, "qiskit_algorithms.optimizers.NELDER_MEAD.gradient_num_diff"]], "gradient_support_level (nelder_mead attribute)": [[99, "qiskit_algorithms.optimizers.NELDER_MEAD.gradient_support_level"]], "initial_point_support_level (nelder_mead attribute)": [[99, "qiskit_algorithms.optimizers.NELDER_MEAD.initial_point_support_level"]], "is_bounds_ignored (nelder_mead attribute)": [[99, "qiskit_algorithms.optimizers.NELDER_MEAD.is_bounds_ignored"]], "is_bounds_required (nelder_mead attribute)": [[99, "qiskit_algorithms.optimizers.NELDER_MEAD.is_bounds_required"]], "is_bounds_supported (nelder_mead attribute)": [[99, "qiskit_algorithms.optimizers.NELDER_MEAD.is_bounds_supported"]], "is_gradient_ignored (nelder_mead attribute)": [[99, "qiskit_algorithms.optimizers.NELDER_MEAD.is_gradient_ignored"]], "is_gradient_required (nelder_mead attribute)": [[99, "qiskit_algorithms.optimizers.NELDER_MEAD.is_gradient_required"]], "is_gradient_supported (nelder_mead attribute)": [[99, "qiskit_algorithms.optimizers.NELDER_MEAD.is_gradient_supported"]], "is_initial_point_ignored (nelder_mead attribute)": [[99, "qiskit_algorithms.optimizers.NELDER_MEAD.is_initial_point_ignored"]], "is_initial_point_required (nelder_mead attribute)": [[99, "qiskit_algorithms.optimizers.NELDER_MEAD.is_initial_point_required"]], "is_initial_point_supported (nelder_mead attribute)": [[99, "qiskit_algorithms.optimizers.NELDER_MEAD.is_initial_point_supported"]], "minimize() (nelder_mead method)": [[99, "qiskit_algorithms.optimizers.NELDER_MEAD.minimize"]], "print_options() (nelder_mead method)": [[99, "qiskit_algorithms.optimizers.NELDER_MEAD.print_options"]], "set_max_evals_grouped() (nelder_mead method)": [[99, "qiskit_algorithms.optimizers.NELDER_MEAD.set_max_evals_grouped"]], "set_options() (nelder_mead method)": [[99, "qiskit_algorithms.optimizers.NELDER_MEAD.set_options"]], "setting (nelder_mead attribute)": [[99, "qiskit_algorithms.optimizers.NELDER_MEAD.setting"]], "settings (nelder_mead attribute)": [[99, "qiskit_algorithms.optimizers.NELDER_MEAD.settings"]], "wrap_function() (nelder_mead static method)": [[99, "qiskit_algorithms.optimizers.NELDER_MEAD.wrap_function"]], "nft (class in qiskit_algorithms.optimizers)": [[100, "qiskit_algorithms.optimizers.NFT"]], "bounds_support_level (nft attribute)": [[100, "qiskit_algorithms.optimizers.NFT.bounds_support_level"]], "get_support_level() (nft method)": [[100, "qiskit_algorithms.optimizers.NFT.get_support_level"]], "gradient_num_diff() (nft static method)": [[100, "qiskit_algorithms.optimizers.NFT.gradient_num_diff"]], "gradient_support_level (nft attribute)": [[100, "qiskit_algorithms.optimizers.NFT.gradient_support_level"]], "initial_point_support_level (nft attribute)": [[100, "qiskit_algorithms.optimizers.NFT.initial_point_support_level"]], "is_bounds_ignored (nft attribute)": [[100, "qiskit_algorithms.optimizers.NFT.is_bounds_ignored"]], "is_bounds_required (nft attribute)": [[100, "qiskit_algorithms.optimizers.NFT.is_bounds_required"]], "is_bounds_supported (nft attribute)": [[100, "qiskit_algorithms.optimizers.NFT.is_bounds_supported"]], "is_gradient_ignored (nft attribute)": [[100, "qiskit_algorithms.optimizers.NFT.is_gradient_ignored"]], "is_gradient_required (nft attribute)": [[100, "qiskit_algorithms.optimizers.NFT.is_gradient_required"]], "is_gradient_supported (nft attribute)": [[100, "qiskit_algorithms.optimizers.NFT.is_gradient_supported"]], "is_initial_point_ignored (nft attribute)": [[100, "qiskit_algorithms.optimizers.NFT.is_initial_point_ignored"]], "is_initial_point_required (nft attribute)": [[100, "qiskit_algorithms.optimizers.NFT.is_initial_point_required"]], "is_initial_point_supported (nft attribute)": [[100, "qiskit_algorithms.optimizers.NFT.is_initial_point_supported"]], "minimize() (nft method)": [[100, "qiskit_algorithms.optimizers.NFT.minimize"]], "print_options() (nft method)": [[100, "qiskit_algorithms.optimizers.NFT.print_options"]], "set_max_evals_grouped() (nft method)": [[100, "qiskit_algorithms.optimizers.NFT.set_max_evals_grouped"]], "set_options() (nft method)": [[100, "qiskit_algorithms.optimizers.NFT.set_options"]], "setting (nft attribute)": [[100, "qiskit_algorithms.optimizers.NFT.setting"]], "settings (nft attribute)": [[100, "qiskit_algorithms.optimizers.NFT.settings"]], "wrap_function() (nft static method)": [[100, "qiskit_algorithms.optimizers.NFT.wrap_function"]], "optimizer (class in qiskit_algorithms.optimizers)": [[101, "qiskit_algorithms.optimizers.Optimizer"]], "bounds_support_level (optimizer attribute)": [[101, "qiskit_algorithms.optimizers.Optimizer.bounds_support_level"]], "get_support_level() (optimizer method)": [[101, "qiskit_algorithms.optimizers.Optimizer.get_support_level"]], "gradient_num_diff() (optimizer static method)": [[101, "qiskit_algorithms.optimizers.Optimizer.gradient_num_diff"]], "gradient_support_level (optimizer attribute)": [[101, "qiskit_algorithms.optimizers.Optimizer.gradient_support_level"]], "initial_point_support_level (optimizer attribute)": [[101, "qiskit_algorithms.optimizers.Optimizer.initial_point_support_level"]], "is_bounds_ignored (optimizer attribute)": [[101, "qiskit_algorithms.optimizers.Optimizer.is_bounds_ignored"]], "is_bounds_required (optimizer attribute)": [[101, "qiskit_algorithms.optimizers.Optimizer.is_bounds_required"]], "is_bounds_supported (optimizer attribute)": [[101, "qiskit_algorithms.optimizers.Optimizer.is_bounds_supported"]], "is_gradient_ignored (optimizer attribute)": [[101, "qiskit_algorithms.optimizers.Optimizer.is_gradient_ignored"]], "is_gradient_required (optimizer attribute)": [[101, "qiskit_algorithms.optimizers.Optimizer.is_gradient_required"]], "is_gradient_supported (optimizer attribute)": [[101, "qiskit_algorithms.optimizers.Optimizer.is_gradient_supported"]], "is_initial_point_ignored (optimizer attribute)": [[101, "qiskit_algorithms.optimizers.Optimizer.is_initial_point_ignored"]], "is_initial_point_required (optimizer attribute)": [[101, "qiskit_algorithms.optimizers.Optimizer.is_initial_point_required"]], "is_initial_point_supported (optimizer attribute)": [[101, "qiskit_algorithms.optimizers.Optimizer.is_initial_point_supported"]], "minimize() (optimizer method)": [[101, "qiskit_algorithms.optimizers.Optimizer.minimize"]], "print_options() (optimizer method)": [[101, "qiskit_algorithms.optimizers.Optimizer.print_options"]], "set_max_evals_grouped() (optimizer method)": [[101, "qiskit_algorithms.optimizers.Optimizer.set_max_evals_grouped"]], "set_options() (optimizer method)": [[101, "qiskit_algorithms.optimizers.Optimizer.set_options"]], "setting (optimizer attribute)": [[101, "qiskit_algorithms.optimizers.Optimizer.setting"]], "settings (optimizer attribute)": [[101, "qiskit_algorithms.optimizers.Optimizer.settings"]], "wrap_function() (optimizer static method)": [[101, "qiskit_algorithms.optimizers.Optimizer.wrap_function"]], "optimizerresult (class in qiskit_algorithms.optimizers)": [[102, "qiskit_algorithms.optimizers.OptimizerResult"]], "combine() (optimizerresult method)": [[102, "qiskit_algorithms.optimizers.OptimizerResult.combine"]], "fun (optimizerresult attribute)": [[102, "qiskit_algorithms.optimizers.OptimizerResult.fun"]], "jac (optimizerresult attribute)": [[102, "qiskit_algorithms.optimizers.OptimizerResult.jac"]], "nfev (optimizerresult attribute)": [[102, "qiskit_algorithms.optimizers.OptimizerResult.nfev"]], "nit (optimizerresult attribute)": [[102, "qiskit_algorithms.optimizers.OptimizerResult.nit"]], "njev (optimizerresult attribute)": [[102, "qiskit_algorithms.optimizers.OptimizerResult.njev"]], "x (optimizerresult attribute)": [[102, "qiskit_algorithms.optimizers.OptimizerResult.x"]], "optimizerstate (class in qiskit_algorithms.optimizers)": [[103, "qiskit_algorithms.optimizers.OptimizerState"]], "fun (optimizerstate attribute)": [[103, "qiskit_algorithms.optimizers.OptimizerState.fun"]], "jac (optimizerstate attribute)": [[103, "qiskit_algorithms.optimizers.OptimizerState.jac"]], "nfev (optimizerstate attribute)": [[103, "qiskit_algorithms.optimizers.OptimizerState.nfev"]], "nit (optimizerstate attribute)": [[103, "qiskit_algorithms.optimizers.OptimizerState.nit"]], "njev (optimizerstate attribute)": [[103, "qiskit_algorithms.optimizers.OptimizerState.njev"]], "x (optimizerstate attribute)": [[103, "qiskit_algorithms.optimizers.OptimizerState.x"]], "powell (class in qiskit_algorithms.optimizers)": [[104, "qiskit_algorithms.optimizers.POWELL"]], "bounds_support_level (powell attribute)": [[104, "qiskit_algorithms.optimizers.POWELL.bounds_support_level"]], "get_support_level() (powell method)": [[104, "qiskit_algorithms.optimizers.POWELL.get_support_level"]], "gradient_num_diff() (powell static method)": [[104, "qiskit_algorithms.optimizers.POWELL.gradient_num_diff"]], "gradient_support_level (powell attribute)": [[104, "qiskit_algorithms.optimizers.POWELL.gradient_support_level"]], "initial_point_support_level (powell attribute)": [[104, "qiskit_algorithms.optimizers.POWELL.initial_point_support_level"]], "is_bounds_ignored (powell attribute)": [[104, "qiskit_algorithms.optimizers.POWELL.is_bounds_ignored"]], "is_bounds_required (powell attribute)": [[104, "qiskit_algorithms.optimizers.POWELL.is_bounds_required"]], "is_bounds_supported (powell attribute)": [[104, "qiskit_algorithms.optimizers.POWELL.is_bounds_supported"]], "is_gradient_ignored (powell attribute)": [[104, "qiskit_algorithms.optimizers.POWELL.is_gradient_ignored"]], "is_gradient_required (powell attribute)": [[104, "qiskit_algorithms.optimizers.POWELL.is_gradient_required"]], "is_gradient_supported (powell attribute)": [[104, "qiskit_algorithms.optimizers.POWELL.is_gradient_supported"]], "is_initial_point_ignored (powell attribute)": [[104, "qiskit_algorithms.optimizers.POWELL.is_initial_point_ignored"]], "is_initial_point_required (powell attribute)": [[104, "qiskit_algorithms.optimizers.POWELL.is_initial_point_required"]], "is_initial_point_supported (powell attribute)": [[104, "qiskit_algorithms.optimizers.POWELL.is_initial_point_supported"]], "minimize() (powell method)": [[104, "qiskit_algorithms.optimizers.POWELL.minimize"]], "print_options() (powell method)": [[104, "qiskit_algorithms.optimizers.POWELL.print_options"]], "set_max_evals_grouped() (powell method)": [[104, "qiskit_algorithms.optimizers.POWELL.set_max_evals_grouped"]], "set_options() (powell method)": [[104, "qiskit_algorithms.optimizers.POWELL.set_options"]], "setting (powell attribute)": [[104, "qiskit_algorithms.optimizers.POWELL.setting"]], "settings (powell attribute)": [[104, "qiskit_algorithms.optimizers.POWELL.settings"]], "wrap_function() (powell static method)": [[104, "qiskit_algorithms.optimizers.POWELL.wrap_function"]], "p_bfgs (class in qiskit_algorithms.optimizers)": [[105, "qiskit_algorithms.optimizers.P_BFGS"]], "bounds_support_level (p_bfgs attribute)": [[105, "qiskit_algorithms.optimizers.P_BFGS.bounds_support_level"]], "get_support_level() (p_bfgs method)": [[105, "qiskit_algorithms.optimizers.P_BFGS.get_support_level"]], "gradient_num_diff() (p_bfgs static method)": [[105, "qiskit_algorithms.optimizers.P_BFGS.gradient_num_diff"]], "gradient_support_level (p_bfgs attribute)": [[105, "qiskit_algorithms.optimizers.P_BFGS.gradient_support_level"]], "initial_point_support_level (p_bfgs attribute)": [[105, "qiskit_algorithms.optimizers.P_BFGS.initial_point_support_level"]], "is_bounds_ignored (p_bfgs attribute)": [[105, "qiskit_algorithms.optimizers.P_BFGS.is_bounds_ignored"]], "is_bounds_required (p_bfgs attribute)": [[105, "qiskit_algorithms.optimizers.P_BFGS.is_bounds_required"]], "is_bounds_supported (p_bfgs attribute)": [[105, "qiskit_algorithms.optimizers.P_BFGS.is_bounds_supported"]], "is_gradient_ignored (p_bfgs attribute)": [[105, "qiskit_algorithms.optimizers.P_BFGS.is_gradient_ignored"]], "is_gradient_required (p_bfgs attribute)": [[105, "qiskit_algorithms.optimizers.P_BFGS.is_gradient_required"]], "is_gradient_supported (p_bfgs attribute)": [[105, "qiskit_algorithms.optimizers.P_BFGS.is_gradient_supported"]], "is_initial_point_ignored (p_bfgs attribute)": [[105, "qiskit_algorithms.optimizers.P_BFGS.is_initial_point_ignored"]], "is_initial_point_required (p_bfgs attribute)": [[105, "qiskit_algorithms.optimizers.P_BFGS.is_initial_point_required"]], "is_initial_point_supported (p_bfgs attribute)": [[105, "qiskit_algorithms.optimizers.P_BFGS.is_initial_point_supported"]], "minimize() (p_bfgs method)": [[105, "qiskit_algorithms.optimizers.P_BFGS.minimize"]], "print_options() (p_bfgs method)": [[105, "qiskit_algorithms.optimizers.P_BFGS.print_options"]], "set_max_evals_grouped() (p_bfgs method)": [[105, "qiskit_algorithms.optimizers.P_BFGS.set_max_evals_grouped"]], "set_options() (p_bfgs method)": [[105, "qiskit_algorithms.optimizers.P_BFGS.set_options"]], "setting (p_bfgs attribute)": [[105, "qiskit_algorithms.optimizers.P_BFGS.setting"]], "settings (p_bfgs attribute)": [[105, "qiskit_algorithms.optimizers.P_BFGS.settings"]], "wrap_function() (p_bfgs static method)": [[105, "qiskit_algorithms.optimizers.P_BFGS.wrap_function"]], "qnspsa (class in qiskit_algorithms.optimizers)": [[106, "qiskit_algorithms.optimizers.QNSPSA"]], "bounds_support_level (qnspsa attribute)": [[106, "qiskit_algorithms.optimizers.QNSPSA.bounds_support_level"]], "calibrate() (qnspsa static method)": [[106, "qiskit_algorithms.optimizers.QNSPSA.calibrate"]], "estimate_stddev() (qnspsa static method)": [[106, "qiskit_algorithms.optimizers.QNSPSA.estimate_stddev"]], "get_fidelity() (qnspsa static method)": [[106, "qiskit_algorithms.optimizers.QNSPSA.get_fidelity"]], "get_support_level() (qnspsa method)": [[106, "qiskit_algorithms.optimizers.QNSPSA.get_support_level"]], "gradient_num_diff() (qnspsa static method)": [[106, "qiskit_algorithms.optimizers.QNSPSA.gradient_num_diff"]], "gradient_support_level (qnspsa attribute)": [[106, "qiskit_algorithms.optimizers.QNSPSA.gradient_support_level"]], "initial_point_support_level (qnspsa attribute)": [[106, "qiskit_algorithms.optimizers.QNSPSA.initial_point_support_level"]], "is_bounds_ignored (qnspsa attribute)": [[106, "qiskit_algorithms.optimizers.QNSPSA.is_bounds_ignored"]], "is_bounds_required (qnspsa attribute)": [[106, "qiskit_algorithms.optimizers.QNSPSA.is_bounds_required"]], "is_bounds_supported (qnspsa attribute)": [[106, "qiskit_algorithms.optimizers.QNSPSA.is_bounds_supported"]], "is_gradient_ignored (qnspsa attribute)": [[106, "qiskit_algorithms.optimizers.QNSPSA.is_gradient_ignored"]], "is_gradient_required (qnspsa attribute)": [[106, "qiskit_algorithms.optimizers.QNSPSA.is_gradient_required"]], "is_gradient_supported (qnspsa attribute)": [[106, "qiskit_algorithms.optimizers.QNSPSA.is_gradient_supported"]], "is_initial_point_ignored (qnspsa attribute)": [[106, "qiskit_algorithms.optimizers.QNSPSA.is_initial_point_ignored"]], "is_initial_point_required (qnspsa attribute)": [[106, "qiskit_algorithms.optimizers.QNSPSA.is_initial_point_required"]], "is_initial_point_supported (qnspsa attribute)": [[106, "qiskit_algorithms.optimizers.QNSPSA.is_initial_point_supported"]], "minimize() (qnspsa method)": [[106, "qiskit_algorithms.optimizers.QNSPSA.minimize"]], "print_options() (qnspsa method)": [[106, "qiskit_algorithms.optimizers.QNSPSA.print_options"]], "set_max_evals_grouped() (qnspsa method)": [[106, "qiskit_algorithms.optimizers.QNSPSA.set_max_evals_grouped"]], "set_options() (qnspsa method)": [[106, "qiskit_algorithms.optimizers.QNSPSA.set_options"]], "setting (qnspsa attribute)": [[106, "qiskit_algorithms.optimizers.QNSPSA.setting"]], "settings (qnspsa attribute)": [[106, "qiskit_algorithms.optimizers.QNSPSA.settings"]], "wrap_function() (qnspsa static method)": [[106, "qiskit_algorithms.optimizers.QNSPSA.wrap_function"]], "slsqp (class in qiskit_algorithms.optimizers)": [[107, "qiskit_algorithms.optimizers.SLSQP"]], "bounds_support_level (slsqp attribute)": [[107, "qiskit_algorithms.optimizers.SLSQP.bounds_support_level"]], "get_support_level() (slsqp method)": [[107, "qiskit_algorithms.optimizers.SLSQP.get_support_level"]], "gradient_num_diff() (slsqp static method)": [[107, "qiskit_algorithms.optimizers.SLSQP.gradient_num_diff"]], "gradient_support_level (slsqp attribute)": [[107, "qiskit_algorithms.optimizers.SLSQP.gradient_support_level"]], "initial_point_support_level (slsqp attribute)": [[107, "qiskit_algorithms.optimizers.SLSQP.initial_point_support_level"]], "is_bounds_ignored (slsqp attribute)": [[107, "qiskit_algorithms.optimizers.SLSQP.is_bounds_ignored"]], "is_bounds_required (slsqp attribute)": [[107, "qiskit_algorithms.optimizers.SLSQP.is_bounds_required"]], "is_bounds_supported (slsqp attribute)": [[107, "qiskit_algorithms.optimizers.SLSQP.is_bounds_supported"]], "is_gradient_ignored (slsqp attribute)": [[107, "qiskit_algorithms.optimizers.SLSQP.is_gradient_ignored"]], "is_gradient_required (slsqp attribute)": [[107, "qiskit_algorithms.optimizers.SLSQP.is_gradient_required"]], "is_gradient_supported (slsqp attribute)": [[107, "qiskit_algorithms.optimizers.SLSQP.is_gradient_supported"]], "is_initial_point_ignored (slsqp attribute)": [[107, "qiskit_algorithms.optimizers.SLSQP.is_initial_point_ignored"]], "is_initial_point_required (slsqp attribute)": [[107, "qiskit_algorithms.optimizers.SLSQP.is_initial_point_required"]], "is_initial_point_supported (slsqp attribute)": [[107, "qiskit_algorithms.optimizers.SLSQP.is_initial_point_supported"]], "minimize() (slsqp method)": [[107, "qiskit_algorithms.optimizers.SLSQP.minimize"]], "print_options() (slsqp method)": [[107, "qiskit_algorithms.optimizers.SLSQP.print_options"]], "set_max_evals_grouped() (slsqp method)": [[107, "qiskit_algorithms.optimizers.SLSQP.set_max_evals_grouped"]], "set_options() (slsqp method)": [[107, "qiskit_algorithms.optimizers.SLSQP.set_options"]], "setting (slsqp attribute)": [[107, "qiskit_algorithms.optimizers.SLSQP.setting"]], "settings (slsqp attribute)": [[107, "qiskit_algorithms.optimizers.SLSQP.settings"]], "wrap_function() (slsqp static method)": [[107, "qiskit_algorithms.optimizers.SLSQP.wrap_function"]], "snobfit (class in qiskit_algorithms.optimizers)": [[108, "qiskit_algorithms.optimizers.SNOBFIT"]], "bounds_support_level (snobfit attribute)": [[108, "qiskit_algorithms.optimizers.SNOBFIT.bounds_support_level"]], "get_support_level() (snobfit method)": [[108, "qiskit_algorithms.optimizers.SNOBFIT.get_support_level"]], "gradient_num_diff() (snobfit static method)": [[108, "qiskit_algorithms.optimizers.SNOBFIT.gradient_num_diff"]], "gradient_support_level (snobfit attribute)": [[108, "qiskit_algorithms.optimizers.SNOBFIT.gradient_support_level"]], "initial_point_support_level (snobfit attribute)": [[108, "qiskit_algorithms.optimizers.SNOBFIT.initial_point_support_level"]], "is_bounds_ignored (snobfit attribute)": [[108, "qiskit_algorithms.optimizers.SNOBFIT.is_bounds_ignored"]], "is_bounds_required (snobfit attribute)": [[108, "qiskit_algorithms.optimizers.SNOBFIT.is_bounds_required"]], "is_bounds_supported (snobfit attribute)": [[108, "qiskit_algorithms.optimizers.SNOBFIT.is_bounds_supported"]], "is_gradient_ignored (snobfit attribute)": [[108, "qiskit_algorithms.optimizers.SNOBFIT.is_gradient_ignored"]], "is_gradient_required (snobfit attribute)": [[108, "qiskit_algorithms.optimizers.SNOBFIT.is_gradient_required"]], "is_gradient_supported (snobfit attribute)": [[108, "qiskit_algorithms.optimizers.SNOBFIT.is_gradient_supported"]], "is_initial_point_ignored (snobfit attribute)": [[108, "qiskit_algorithms.optimizers.SNOBFIT.is_initial_point_ignored"]], "is_initial_point_required (snobfit attribute)": [[108, "qiskit_algorithms.optimizers.SNOBFIT.is_initial_point_required"]], "is_initial_point_supported (snobfit attribute)": [[108, "qiskit_algorithms.optimizers.SNOBFIT.is_initial_point_supported"]], "minimize() (snobfit method)": [[108, "qiskit_algorithms.optimizers.SNOBFIT.minimize"]], "print_options() (snobfit method)": [[108, "qiskit_algorithms.optimizers.SNOBFIT.print_options"]], "set_max_evals_grouped() (snobfit method)": [[108, "qiskit_algorithms.optimizers.SNOBFIT.set_max_evals_grouped"]], "set_options() (snobfit method)": [[108, "qiskit_algorithms.optimizers.SNOBFIT.set_options"]], "setting (snobfit attribute)": [[108, "qiskit_algorithms.optimizers.SNOBFIT.setting"]], "settings (snobfit attribute)": [[108, "qiskit_algorithms.optimizers.SNOBFIT.settings"]], "wrap_function() (snobfit static method)": [[108, "qiskit_algorithms.optimizers.SNOBFIT.wrap_function"]], "spsa (class in qiskit_algorithms.optimizers)": [[109, "qiskit_algorithms.optimizers.SPSA"]], "bounds_support_level (spsa attribute)": [[109, "qiskit_algorithms.optimizers.SPSA.bounds_support_level"]], "calibrate() (spsa static method)": [[109, "qiskit_algorithms.optimizers.SPSA.calibrate"]], "estimate_stddev() (spsa static method)": [[109, "qiskit_algorithms.optimizers.SPSA.estimate_stddev"]], "get_support_level() (spsa method)": [[109, "qiskit_algorithms.optimizers.SPSA.get_support_level"]], "gradient_num_diff() (spsa static method)": [[109, "qiskit_algorithms.optimizers.SPSA.gradient_num_diff"]], "gradient_support_level (spsa attribute)": [[109, "qiskit_algorithms.optimizers.SPSA.gradient_support_level"]], "initial_point_support_level (spsa attribute)": [[109, "qiskit_algorithms.optimizers.SPSA.initial_point_support_level"]], "is_bounds_ignored (spsa attribute)": [[109, "qiskit_algorithms.optimizers.SPSA.is_bounds_ignored"]], "is_bounds_required (spsa attribute)": [[109, "qiskit_algorithms.optimizers.SPSA.is_bounds_required"]], "is_bounds_supported (spsa attribute)": [[109, "qiskit_algorithms.optimizers.SPSA.is_bounds_supported"]], "is_gradient_ignored (spsa attribute)": [[109, "qiskit_algorithms.optimizers.SPSA.is_gradient_ignored"]], "is_gradient_required (spsa attribute)": [[109, "qiskit_algorithms.optimizers.SPSA.is_gradient_required"]], "is_gradient_supported (spsa attribute)": [[109, "qiskit_algorithms.optimizers.SPSA.is_gradient_supported"]], "is_initial_point_ignored (spsa attribute)": [[109, "qiskit_algorithms.optimizers.SPSA.is_initial_point_ignored"]], "is_initial_point_required (spsa attribute)": [[109, "qiskit_algorithms.optimizers.SPSA.is_initial_point_required"]], "is_initial_point_supported (spsa attribute)": [[109, "qiskit_algorithms.optimizers.SPSA.is_initial_point_supported"]], "minimize() (spsa method)": [[109, "qiskit_algorithms.optimizers.SPSA.minimize"]], "print_options() (spsa method)": [[109, "qiskit_algorithms.optimizers.SPSA.print_options"]], "set_max_evals_grouped() (spsa method)": [[109, "qiskit_algorithms.optimizers.SPSA.set_max_evals_grouped"]], "set_options() (spsa method)": [[109, "qiskit_algorithms.optimizers.SPSA.set_options"]], "setting (spsa attribute)": [[109, "qiskit_algorithms.optimizers.SPSA.setting"]], "settings (spsa attribute)": [[109, "qiskit_algorithms.optimizers.SPSA.settings"]], "wrap_function() (spsa static method)": [[109, "qiskit_algorithms.optimizers.SPSA.wrap_function"]], "scipyoptimizer (class in qiskit_algorithms.optimizers)": [[110, "qiskit_algorithms.optimizers.SciPyOptimizer"]], "bounds_support_level (scipyoptimizer attribute)": [[110, "qiskit_algorithms.optimizers.SciPyOptimizer.bounds_support_level"]], "get_support_level() (scipyoptimizer method)": [[110, "qiskit_algorithms.optimizers.SciPyOptimizer.get_support_level"]], "gradient_num_diff() (scipyoptimizer static method)": [[110, "qiskit_algorithms.optimizers.SciPyOptimizer.gradient_num_diff"]], "gradient_support_level (scipyoptimizer attribute)": [[110, "qiskit_algorithms.optimizers.SciPyOptimizer.gradient_support_level"]], "initial_point_support_level (scipyoptimizer attribute)": [[110, "qiskit_algorithms.optimizers.SciPyOptimizer.initial_point_support_level"]], "is_bounds_ignored (scipyoptimizer attribute)": [[110, "qiskit_algorithms.optimizers.SciPyOptimizer.is_bounds_ignored"]], "is_bounds_required (scipyoptimizer attribute)": [[110, "qiskit_algorithms.optimizers.SciPyOptimizer.is_bounds_required"]], "is_bounds_supported (scipyoptimizer attribute)": [[110, "qiskit_algorithms.optimizers.SciPyOptimizer.is_bounds_supported"]], "is_gradient_ignored (scipyoptimizer attribute)": [[110, "qiskit_algorithms.optimizers.SciPyOptimizer.is_gradient_ignored"]], "is_gradient_required (scipyoptimizer attribute)": [[110, "qiskit_algorithms.optimizers.SciPyOptimizer.is_gradient_required"]], "is_gradient_supported (scipyoptimizer attribute)": [[110, "qiskit_algorithms.optimizers.SciPyOptimizer.is_gradient_supported"]], "is_initial_point_ignored (scipyoptimizer attribute)": [[110, "qiskit_algorithms.optimizers.SciPyOptimizer.is_initial_point_ignored"]], "is_initial_point_required (scipyoptimizer attribute)": [[110, "qiskit_algorithms.optimizers.SciPyOptimizer.is_initial_point_required"]], "is_initial_point_supported (scipyoptimizer attribute)": [[110, "qiskit_algorithms.optimizers.SciPyOptimizer.is_initial_point_supported"]], "minimize() (scipyoptimizer method)": [[110, "qiskit_algorithms.optimizers.SciPyOptimizer.minimize"]], "print_options() (scipyoptimizer method)": [[110, "qiskit_algorithms.optimizers.SciPyOptimizer.print_options"]], "set_max_evals_grouped() (scipyoptimizer method)": [[110, "qiskit_algorithms.optimizers.SciPyOptimizer.set_max_evals_grouped"]], "set_options() (scipyoptimizer method)": [[110, "qiskit_algorithms.optimizers.SciPyOptimizer.set_options"]], "setting (scipyoptimizer attribute)": [[110, "qiskit_algorithms.optimizers.SciPyOptimizer.setting"]], "settings (scipyoptimizer attribute)": [[110, "qiskit_algorithms.optimizers.SciPyOptimizer.settings"]], "wrap_function() (scipyoptimizer static method)": [[110, "qiskit_algorithms.optimizers.SciPyOptimizer.wrap_function"]], "steppableoptimizer (class in qiskit_algorithms.optimizers)": [[111, "qiskit_algorithms.optimizers.SteppableOptimizer"]], "ask() (steppableoptimizer method)": [[111, "qiskit_algorithms.optimizers.SteppableOptimizer.ask"]], "bounds_support_level (steppableoptimizer attribute)": [[111, "qiskit_algorithms.optimizers.SteppableOptimizer.bounds_support_level"]], "continue_condition() (steppableoptimizer method)": [[111, "qiskit_algorithms.optimizers.SteppableOptimizer.continue_condition"]], "create_result() (steppableoptimizer method)": [[111, "qiskit_algorithms.optimizers.SteppableOptimizer.create_result"]], "evaluate() (steppableoptimizer method)": [[111, "qiskit_algorithms.optimizers.SteppableOptimizer.evaluate"]], "get_support_level() (steppableoptimizer method)": [[111, "qiskit_algorithms.optimizers.SteppableOptimizer.get_support_level"]], "gradient_num_diff() (steppableoptimizer static method)": [[111, "qiskit_algorithms.optimizers.SteppableOptimizer.gradient_num_diff"]], "gradient_support_level (steppableoptimizer attribute)": [[111, "qiskit_algorithms.optimizers.SteppableOptimizer.gradient_support_level"]], "initial_point_support_level (steppableoptimizer attribute)": [[111, "qiskit_algorithms.optimizers.SteppableOptimizer.initial_point_support_level"]], "is_bounds_ignored (steppableoptimizer attribute)": [[111, "qiskit_algorithms.optimizers.SteppableOptimizer.is_bounds_ignored"]], "is_bounds_required (steppableoptimizer attribute)": [[111, "qiskit_algorithms.optimizers.SteppableOptimizer.is_bounds_required"]], "is_bounds_supported (steppableoptimizer attribute)": [[111, "qiskit_algorithms.optimizers.SteppableOptimizer.is_bounds_supported"]], "is_gradient_ignored (steppableoptimizer attribute)": [[111, "qiskit_algorithms.optimizers.SteppableOptimizer.is_gradient_ignored"]], "is_gradient_required (steppableoptimizer attribute)": [[111, "qiskit_algorithms.optimizers.SteppableOptimizer.is_gradient_required"]], "is_gradient_supported (steppableoptimizer attribute)": [[111, "qiskit_algorithms.optimizers.SteppableOptimizer.is_gradient_supported"]], "is_initial_point_ignored (steppableoptimizer attribute)": [[111, "qiskit_algorithms.optimizers.SteppableOptimizer.is_initial_point_ignored"]], "is_initial_point_required (steppableoptimizer attribute)": [[111, "qiskit_algorithms.optimizers.SteppableOptimizer.is_initial_point_required"]], "is_initial_point_supported (steppableoptimizer attribute)": [[111, "qiskit_algorithms.optimizers.SteppableOptimizer.is_initial_point_supported"]], "minimize() (steppableoptimizer method)": [[111, "qiskit_algorithms.optimizers.SteppableOptimizer.minimize"]], "print_options() (steppableoptimizer method)": [[111, "qiskit_algorithms.optimizers.SteppableOptimizer.print_options"]], "set_max_evals_grouped() (steppableoptimizer method)": [[111, "qiskit_algorithms.optimizers.SteppableOptimizer.set_max_evals_grouped"]], "set_options() (steppableoptimizer method)": [[111, "qiskit_algorithms.optimizers.SteppableOptimizer.set_options"]], "setting (steppableoptimizer attribute)": [[111, "qiskit_algorithms.optimizers.SteppableOptimizer.setting"]], "settings (steppableoptimizer attribute)": [[111, "qiskit_algorithms.optimizers.SteppableOptimizer.settings"]], "start() (steppableoptimizer method)": [[111, "qiskit_algorithms.optimizers.SteppableOptimizer.start"]], "state (steppableoptimizer attribute)": [[111, "qiskit_algorithms.optimizers.SteppableOptimizer.state"]], "step() (steppableoptimizer method)": [[111, "qiskit_algorithms.optimizers.SteppableOptimizer.step"]], "tell() (steppableoptimizer method)": [[111, "qiskit_algorithms.optimizers.SteppableOptimizer.tell"]], "wrap_function() (steppableoptimizer static method)": [[111, "qiskit_algorithms.optimizers.SteppableOptimizer.wrap_function"]], "tnc (class in qiskit_algorithms.optimizers)": [[112, "qiskit_algorithms.optimizers.TNC"]], "bounds_support_level (tnc attribute)": [[112, "qiskit_algorithms.optimizers.TNC.bounds_support_level"]], "get_support_level() (tnc method)": [[112, "qiskit_algorithms.optimizers.TNC.get_support_level"]], "gradient_num_diff() (tnc static method)": [[112, "qiskit_algorithms.optimizers.TNC.gradient_num_diff"]], "gradient_support_level (tnc attribute)": [[112, "qiskit_algorithms.optimizers.TNC.gradient_support_level"]], "initial_point_support_level (tnc attribute)": [[112, "qiskit_algorithms.optimizers.TNC.initial_point_support_level"]], "is_bounds_ignored (tnc attribute)": [[112, "qiskit_algorithms.optimizers.TNC.is_bounds_ignored"]], "is_bounds_required (tnc attribute)": [[112, "qiskit_algorithms.optimizers.TNC.is_bounds_required"]], "is_bounds_supported (tnc attribute)": [[112, "qiskit_algorithms.optimizers.TNC.is_bounds_supported"]], "is_gradient_ignored (tnc attribute)": [[112, "qiskit_algorithms.optimizers.TNC.is_gradient_ignored"]], "is_gradient_required (tnc attribute)": [[112, "qiskit_algorithms.optimizers.TNC.is_gradient_required"]], "is_gradient_supported (tnc attribute)": [[112, "qiskit_algorithms.optimizers.TNC.is_gradient_supported"]], "is_initial_point_ignored (tnc attribute)": [[112, "qiskit_algorithms.optimizers.TNC.is_initial_point_ignored"]], "is_initial_point_required (tnc attribute)": [[112, "qiskit_algorithms.optimizers.TNC.is_initial_point_required"]], "is_initial_point_supported (tnc attribute)": [[112, "qiskit_algorithms.optimizers.TNC.is_initial_point_supported"]], "minimize() (tnc method)": [[112, "qiskit_algorithms.optimizers.TNC.minimize"]], "print_options() (tnc method)": [[112, "qiskit_algorithms.optimizers.TNC.print_options"]], "set_max_evals_grouped() (tnc method)": [[112, "qiskit_algorithms.optimizers.TNC.set_max_evals_grouped"]], "set_options() (tnc method)": [[112, "qiskit_algorithms.optimizers.TNC.set_options"]], "setting (tnc attribute)": [[112, "qiskit_algorithms.optimizers.TNC.setting"]], "settings (tnc attribute)": [[112, "qiskit_algorithms.optimizers.TNC.settings"]], "wrap_function() (tnc static method)": [[112, "qiskit_algorithms.optimizers.TNC.wrap_function"]], "telldata (class in qiskit_algorithms.optimizers)": [[113, "qiskit_algorithms.optimizers.TellData"]], "eval_fun (telldata attribute)": [[113, "qiskit_algorithms.optimizers.TellData.eval_fun"]], "eval_jac (telldata attribute)": [[113, "qiskit_algorithms.optimizers.TellData.eval_jac"]], "elite_factor (umda attribute)": [[114, "qiskit_algorithms.optimizers.UMDA.ELITE_FACTOR"]], "std_bound (umda attribute)": [[114, "qiskit_algorithms.optimizers.UMDA.STD_BOUND"]], "umda (class in qiskit_algorithms.optimizers)": [[114, "qiskit_algorithms.optimizers.UMDA"]], "alpha (umda attribute)": [[114, "qiskit_algorithms.optimizers.UMDA.alpha"]], "bounds_support_level (umda attribute)": [[114, "qiskit_algorithms.optimizers.UMDA.bounds_support_level"]], "get_support_level() (umda method)": [[114, "qiskit_algorithms.optimizers.UMDA.get_support_level"]], "gradient_num_diff() (umda static method)": [[114, "qiskit_algorithms.optimizers.UMDA.gradient_num_diff"]], "gradient_support_level (umda attribute)": [[114, "qiskit_algorithms.optimizers.UMDA.gradient_support_level"]], "initial_point_support_level (umda attribute)": [[114, "qiskit_algorithms.optimizers.UMDA.initial_point_support_level"]], "is_bounds_ignored (umda attribute)": [[114, "qiskit_algorithms.optimizers.UMDA.is_bounds_ignored"]], "is_bounds_required (umda attribute)": [[114, "qiskit_algorithms.optimizers.UMDA.is_bounds_required"]], "is_bounds_supported (umda attribute)": [[114, "qiskit_algorithms.optimizers.UMDA.is_bounds_supported"]], "is_gradient_ignored (umda attribute)": [[114, "qiskit_algorithms.optimizers.UMDA.is_gradient_ignored"]], "is_gradient_required (umda attribute)": [[114, "qiskit_algorithms.optimizers.UMDA.is_gradient_required"]], "is_gradient_supported (umda attribute)": [[114, "qiskit_algorithms.optimizers.UMDA.is_gradient_supported"]], "is_initial_point_ignored (umda attribute)": [[114, "qiskit_algorithms.optimizers.UMDA.is_initial_point_ignored"]], "is_initial_point_required (umda attribute)": [[114, "qiskit_algorithms.optimizers.UMDA.is_initial_point_required"]], "is_initial_point_supported (umda attribute)": [[114, "qiskit_algorithms.optimizers.UMDA.is_initial_point_supported"]], "maxiter (umda attribute)": [[114, "qiskit_algorithms.optimizers.UMDA.maxiter"]], "minimize() (umda method)": [[114, "qiskit_algorithms.optimizers.UMDA.minimize"]], "print_options() (umda method)": [[114, "qiskit_algorithms.optimizers.UMDA.print_options"]], "set_max_evals_grouped() (umda method)": [[114, "qiskit_algorithms.optimizers.UMDA.set_max_evals_grouped"]], "set_options() (umda method)": [[114, "qiskit_algorithms.optimizers.UMDA.set_options"]], "setting (umda attribute)": [[114, "qiskit_algorithms.optimizers.UMDA.setting"]], "settings (umda attribute)": [[114, "qiskit_algorithms.optimizers.UMDA.settings"]], "size_gen (umda attribute)": [[114, "qiskit_algorithms.optimizers.UMDA.size_gen"]], "wrap_function() (umda static method)": [[114, "qiskit_algorithms.optimizers.UMDA.wrap_function"]], "qiskit_algorithms.optimizers.optimizer_utils": [[115, "module-qiskit_algorithms.optimizers.optimizer_utils"]], "learningrate (class in qiskit_algorithms.optimizers.optimizer_utils)": [[116, "qiskit_algorithms.optimizers.optimizer_utils.LearningRate"]], "close() (learningrate method)": [[116, "qiskit_algorithms.optimizers.optimizer_utils.LearningRate.close"]], "current (learningrate attribute)": [[116, "qiskit_algorithms.optimizers.optimizer_utils.LearningRate.current"]], "send() (learningrate method)": [[116, "qiskit_algorithms.optimizers.optimizer_utils.LearningRate.send"]], "throw() (learningrate method)": [[116, "qiskit_algorithms.optimizers.optimizer_utils.LearningRate.throw"]], "basestatefidelity (class in qiskit_algorithms.state_fidelities)": [[117, "qiskit_algorithms.state_fidelities.BaseStateFidelity"]], "create_fidelity_circuit() (basestatefidelity method)": [[117, "qiskit_algorithms.state_fidelities.BaseStateFidelity.create_fidelity_circuit"]], "run() (basestatefidelity method)": [[117, "qiskit_algorithms.state_fidelities.BaseStateFidelity.run"]], "computeuncompute (class in qiskit_algorithms.state_fidelities)": [[118, "qiskit_algorithms.state_fidelities.ComputeUncompute"]], "create_fidelity_circuit() (computeuncompute method)": [[118, "qiskit_algorithms.state_fidelities.ComputeUncompute.create_fidelity_circuit"]], "options (computeuncompute attribute)": [[118, "qiskit_algorithms.state_fidelities.ComputeUncompute.options"]], "run() (computeuncompute method)": [[118, "qiskit_algorithms.state_fidelities.ComputeUncompute.run"]], "update_default_options() (computeuncompute method)": [[118, "qiskit_algorithms.state_fidelities.ComputeUncompute.update_default_options"]], "statefidelityresult (class in qiskit_algorithms.state_fidelities)": [[119, "qiskit_algorithms.state_fidelities.StateFidelityResult"]], "fidelities (statefidelityresult attribute)": [[119, "qiskit_algorithms.state_fidelities.StateFidelityResult.fidelities"]], "metadata (statefidelityresult attribute)": [[119, "qiskit_algorithms.state_fidelities.StateFidelityResult.metadata"]], "options (statefidelityresult attribute)": [[119, "qiskit_algorithms.state_fidelities.StateFidelityResult.options"]], "raw_fidelities (statefidelityresult attribute)": [[119, "qiskit_algorithms.state_fidelities.StateFidelityResult.raw_fidelities"]], "forwardeulersolver (class in qiskit_algorithms.time_evolvers.variational)": [[120, "qiskit_algorithms.time_evolvers.variational.ForwardEulerSolver"]], "too_small_step (forwardeulersolver attribute)": [[120, "qiskit_algorithms.time_evolvers.variational.ForwardEulerSolver.TOO_SMALL_STEP"]], "step_size (forwardeulersolver attribute)": [[120, "qiskit_algorithms.time_evolvers.variational.ForwardEulerSolver.step_size"]], "imaginarymclachlanprinciple (class in qiskit_algorithms.time_evolvers.variational)": [[121, "qiskit_algorithms.time_evolvers.variational.ImaginaryMcLachlanPrinciple"]], "evolution_gradient() (imaginarymclachlanprinciple method)": [[121, "qiskit_algorithms.time_evolvers.variational.ImaginaryMcLachlanPrinciple.evolution_gradient"]], "imaginaryvariationalprinciple (class in qiskit_algorithms.time_evolvers.variational)": [[122, "qiskit_algorithms.time_evolvers.variational.ImaginaryVariationalPrinciple"]], "realmclachlanprinciple (class in qiskit_algorithms.time_evolvers.variational)": [[123, "qiskit_algorithms.time_evolvers.variational.RealMcLachlanPrinciple"]], "evolution_gradient() (realmclachlanprinciple method)": [[123, "qiskit_algorithms.time_evolvers.variational.RealMcLachlanPrinciple.evolution_gradient"]], "realvariationalprinciple (class in qiskit_algorithms.time_evolvers.variational)": [[124, "qiskit_algorithms.time_evolvers.variational.RealVariationalPrinciple"]], "variationalprinciple (class in qiskit_algorithms.time_evolvers.variational)": [[125, "qiskit_algorithms.time_evolvers.variational.VariationalPrinciple"]], "evolution_gradient() (variationalprinciple method)": [[125, "qiskit_algorithms.time_evolvers.variational.VariationalPrinciple.evolution_gradient"]], "gradient (variationalprinciple attribute)": [[125, "qiskit_algorithms.time_evolvers.variational.VariationalPrinciple.gradient"]], "metric_tensor() (variationalprinciple method)": [[125, "qiskit_algorithms.time_evolvers.variational.VariationalPrinciple.metric_tensor"]], "qgt (variationalprinciple attribute)": [[125, "qiskit_algorithms.time_evolvers.variational.VariationalPrinciple.qgt"]]}})